{"version":3,"sources":["variables/charts.js","assets/img/icons/common/github.svg","assets/img/icons/common/google.svg","assets/img/theme/bootstrap.jpg","assets/img/theme/angular.jpg","assets/img/theme/sketch.jpg","assets/img/theme/react.jpg","assets/img/theme/vue.jpg","assets/img/brand/logo_anagkazo_icon.png","assets/img/anagkazo/anagkazo_full.png","assets/img/brand/argon-react.png","components/Navbars/AdminNavbar.js","components/Footers/AdminFooter.js","components/Sidebar/Sidebar.js","components/Headers/Header.js","config/baseUrl.js","views/dashboard/bussing_v_center_attn.js","views/dashboard/bussing_pie_chart.js","views/dashboard/top_bussers.js","views/dashboard/student_bussing_info.js","views/dashboard/student_center_service.js","views/dashboard/prayer_top_students.js","views/Index.js","components/Headers/Header_plain.js","views/ssmg/ssmg_chart_display.js","views/ssmg/campaigns.js","views/examples/Maps.js","views/examples/Register.js","views/examples/Login.js","views/examples/Tables.js","views/examples/Icons.js","views/students/student_filter_box.js","views/students/student_card.js","views/students/student_item.js","components/Headers/UserHeader.js","views/dashboard/map_centers.js","views/dashboard/center_lists.js","components/Advanced/uploadBussingInfo.js","components/Advanced/uploadCenterServiceInfo.js","components/Advanced/uploadStudentsFromExcel.js","views/students/ministry_skills.js","components/Constituencies/constituencies.js","views/ssmg/all_constituency_ssmg.js","routes.js","views/students/students_all.js","views/ssmg/ssmg_home.js","views/maps/center_venue_locations.js","views/students/student_center_leaders.js","views/students/student_sonta_leaders.js","views/students/student_bacenta_leaders.js","views/students/students_church_planters.js","views/students/student_profile_detail.js","views/dashboard/dashboard-details/constituency-data-details.js","views/dashboard/dashboard-details/constituency_center_service.js","views/ssmg/constituency_ssmg.js","views/ssmg/ssmg_campaigns.js","views/dashboard/dashboard-details/constituency_all_charts.js","views/students/student_attn.js","views/students/general_bussing_report.js","layouts/Admin.js","components/Navbars/AuthNavbar.js","components/Footers/AuthFooter.js","layouts/Auth.js","index.js","assets/img/theme/team-1-800x800.jpg","assets/img/theme/team-2-800x800.jpg","assets/img/theme/team-3-800x800.jpg","assets/img/theme/team-4-800x800.jpg"],"names":["Chart","require","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","ctx","this","_chart","vm","_view","borderWidth","horizontal","base","x","y","height","width","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","radius","lineTo","quadraticCurveTo","fill","stroke","fonts","colors","100","200","300","400","500","600","700","800","900","default","primary","secondary","info","success","danger","warning","chartExample1","options","scales","yAxes","gridLines","color","zeroLineColor","ticks","callback","value","tooltips","callbacks","label","item","data","datasets","datasetIndex","yLabel","content","length","data1","canvas","labels","data2","module","exports","chartOptions","defaults","global","responsive","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","layout","padding","legend","display","position","usePointStyle","point","line","tension","borderCapStyle","rectangle","arc","enabled","mode","intersect","doughnut","cutoutPercentage","legendCallback","chart","forEach","bgColor","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","parseOptions","parent","chartExample2","maxBarThickness","AdminNavbar","React","Component","render","Navbar","className","expand","id","Container","fluid","to","props","brandText","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","DropdownMenu","DropdownItem","header","tag","Link","divider","href","onClick","e","preventDefault","Footer","Row","Col","xl","rel","target","NavItem","NavLink","Sidebar","constructor","super","state","collapseOpen","toggleCollapse","setState","closeCollapse","createLinks","routes","map","prop","key","path","NavLinkRRD","icon","name","Badge","activeRoute","bind","routeName","location","pathname","logo","navbarBrandProps","innerLink","outterLink","NavbarBrand","alt","imgAlt","src","imgSrc","Collapse","xs","defaultProps","Header","studentsCount","gsos","centerleaderCount","sontaLeaderCount","bacenta_leader_count","cancelTokenSource","componentDidMount","axios","CancelToken","source","url","method","cancelToken","token","then","response","catch","console","log","center_count","sonta_leader_count","bacenta_leaders_count","componentWillUnmount","cancel","lg","Card","CardBody","CardTitle","BASE_URL","Bussing_V_Center_Attn","useState","setLabels","bussingData","setBussingData","bussingData_stnds","setBussingData_stnds","bussingData_total","setBussingData_total","setCenterServiceData","chartVisibility","setChartVisibility","barChartOptionsDisenabled","setBarChartOptionsDisenabled","getBussing_v_CenterValues","a","get","bussingByMonth","month_name","year","averageBussing","toFixed","student_count_avg","twnPlusStudent","month","centerVal","centerValuesByMonth","find","attn","useEffect","Date","Reveal","animated","disabled","Content","visible","style","CardHeader","pills","classnames","active","type","getDatasetAtEvent","hidden","FormGroup","Label","for","Input","initialSettings","startDate","endDate","onShow","BussingPieChart","getBussingPieChart","val","datalabels","TopBussingStudent","topBussers","setTopBussers","hideFilterOptions","setHideFilterOptions","getTopBussers","flexDirection","Button","size","Table","scope","busser","index_number","student_id","student_name","class","sum_number_bussed","StudentBussingInfo","studentBussing","setStudentBussing","bussingDate","setBussingDate","loading","setLoading","getStudentBussingInfo","date","defaultDate","moment","day","format","handleConstituencyClick","Spinner","singleDatePicker","showDropdowns","minYear","maxYear","parseInt","locale","onApply","obj","selectedDate","handleDateChange","readOnly","celled","HeaderCell","Body","Cell","region_id","cursor","region_name","con_rep","bussingStats","totalNumberBussed","totalStudentsPresent","totalStudentsThatBussed","totalStudentsThatDidntBus","colSpan","reduce","prev","currentVal","StudentCenterService","centerServiceAtn","setCenterServiceAttn","serviceDate","setServiceDate","getStudentCenterServiceInfo","centerServiceStats","totalAttendance","PrayerTopStudents","topPrayingstudents","setTopPrayingStudents","getTopPrayers","prayer_hours","Index","toggleNavs","activeNav","chartExample1Data","window","Header_Plain","title","SSMG_ChartDisplay","ssmg_name","requestUrl","constituency","ssmgResult","setServerResponse","chartLabels","setChartLabels","chartValues","setChartValues","dateRange","setDateRange","dateRangeVal","setDateRangeVal","getSSMG_Info","Object","keys","values","requestParam","marginTop","readableName","onEvent","event","picker","onCallback","start","end","ranges","subtract","toDate","startOf","endOf","ssmg_array","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","defaultOptions","scrollwheel","styles","featureType","elementType","stylers","visibility","saturation","lightness","Icons","StudentFilterBox","all_students","setFilteredStudents","setCurrentHeading","filterParams","filterOption","setFilterOption","selectedFilterValue","setSelectedFilterValue","setFilterText","currentPlaceholder","setPlaceholder","filterValues","setFilterValues","filter_option","loadRoles","toUpperCase","loadCommunities","text","community","loadCenters","center","center_name","role","filter_value","loadFilteredStudents","filterValue","filter","student","toString","includes","country","denomination","student_roles","some","el","role_id","Dropdown","placeholder","selection","onChange","selectedOption","myClasses","self","myCountry","selectFilterOption","search","StudentCard","Image","photo_url","wrapped","ui","Meta","Description","extra","RenderStudentItem","md","UserHeader","minHeight","backgroundImage","backgroundSize","backgroundPosition","MapWithPlaces","compose","withProps","googleMapURL","loadingElement","containerElement","mapElement","withStateHandlers","infoWindows","places","p","isOpen","onToggleOpen","selectedIndex","iw","zoom","place","parseFloat","lat_coordinate","lng_coordinate","onCloseClick","centerlist","overflowY","hover","centers_locations","center_coordinates","useStyles","makeStyles","theme","root","margin","spacing","input","palette","background","paper","streams","columns","minWidth","align","useStyles2","container","maxHeight","Constituency","classes","constituencies","setConstituencies","loadConstituencies","TableContainer","component","Paper","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","TableBody","region_head","area_population","AllConstituencySSMG","showCharts","pathName","useLocation","loaded","setLoaded","students","setStudents","currentHeading","setAllStudents","urlParams","setUrlParams","unmounted","loadAllStudents","searchParams","URLSearchParams","items","list","renderItem","renderWhenEmpty","renderOnScroll","Constituencies","tab","setTabValue","tabValue","getAllConstituencies","aria-selected","TabContent","activeTab","TabPane","tabId","divided","Column","Icon","app_routes","centerLeaders","setCenterLeaders","loadCenterLeaders","center_leaders","sonta_leaders","setSontaLeaders","loadSontaLeaders","bacentaLeaders","setBacentaLeaders","loadBacentaleaders","bacenta_leaders","churchPlanters","setChurchPlanters","loadChurchPlanters","church_planters","studentProfileInformation","setStudentProfileInformation","activeSummaryDetail","setActiveDetail","chartData","setChartData","chartTitle","setChartTitle","setChartTableVisibility","loadStudentProfile","RenderStudentSummary","student_profile","List","verticalAlign","RenderPrayerSummary","prayer_logs","RenderVisitationSummary","visitation_logs","sheep_seeking","RenderCounsellingSummary","counselling_logs","counsellings","RenderOutreachSummary","outreach_logs","outreach","RenderBussingSummary","bussing_logs","student_bussing_history","RenderCenterServiceSummary","center_services","student_center_service","RenderMembers","members","member","Item","circular","as","phone","prayer_hours_sum","cur","number_of_hours","o","date_prayed","substring","toLocaleDateString","floated","avatar","visitations","sumedVisitationLogs","sum","summedCounsellings","outreaches","summedOutreaches","bussing_average","center_service_average","number_of_souls","date_of_service","RenderBarChart","Placeholder","square","age","home_church","pill","pastoral_role","student_remarks","singleLine","bussingInfo","setBussingInfo","regionInfo","setRegionInfo","query","myParams","loadConstituencyDetail","bussingVals","accm","curVal","number_bussed","region","Breadcrumbs","Typography","footer","tooltipItems","centerLeader","tooltipItem","sort","itm","indx","error","present","centerServiceInfo","setCenterServiceInfo","centerServiceDate","setCenterServiceDate","loadConstituencyCenterServiceDetail","centerServiceAttnValues","ssmg_find_text","rows","setRows","setColumns","uploaded","setUploaded","open","setOpen","numberOfStudentsUploaded","setNumberOfStudentsUploaded","selectFile","f","files","reader","FileReader","onload","result","readedData","XLSX","cellDates","readSheet1","readAsBinaryString","wsname","SheetNames","ws","Sheets","dataParse","sheet_to_json","count","studentDataInfo","push","getExcelCellIndex","date_of_birth","gender","pastors_name","pastors_phone","email_address","uploadToServer","row_name","header_row","studentSpreadSheetData","formData","FormData","append","JSON","stringify","headers","Accept","studentSpreadSheetInfo","field","headerName","CircularProgress","accept","htmlFor","variant","IconButton","pageSize","Snackbar","anchorOrigin","vertical","autoHideDuration","onClose","reason","message","dateString","setDateString","bussingDataInfo","trim","st_attn","twn_attn","bussingSpreadSheetData","renderOnGrid","centerServiceSpreadSheetData","float","ministrySkills","anchorEl","setAnchorEl","setSelectedIndex","handleClickListItem","currentTarget","handleMenuItemClick","handleClose","valueGetter","params","row","prayerPoint","sheepSeeking","VisitPoint","counselling","counselPoint","multiplication","outreachPoint","basonta","basontaPoint","sat","satMaterialsPoint","ucPoint","ucPassPoint","bussingPoint","Grid","ListItem","button","aria-haspopup","aria-controls","ListItemText","Menu","keepMounted","Boolean","option","MenuItem","selected","components","Toolbar","allConstituencies","setAllConstituencies","RenderConstituencyBarChart","chartDataArray","setChartDataArray","months","m","numberOfSundays","getNumberOfWeekday","bussing","weekday","dif","floor","daysInMonth","body","outline","attn_data","setattn_data","loadStudentAttn","created_at","split","datatable","setDatatable","loadBussingReport","prevState","dateHeadings","scrollY","entriesOptions","entries","pagesAmount","Admin","getRoutes","exact","getAppRoutes","getBrandText","componentDidUpdate","document","documentElement","scrollTop","scrollingElement","refs","mainContent","ref","from","AdminFooter","UncontrolledCollapse","toggler","Login","Auth","classList","add","remove","AuthNavbar","xmlns","preserveAspectRatio","version","viewBox","points","AuthFooter","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.11feac4c.chunk.js","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nconst Chart = require(\"chart.js\");\r\n//\r\n// Chart extension for making the bars rounded\r\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\r\n//\r\n\r\nChart.elements.Rectangle.prototype.draw = function() {\r\n  var ctx = this._chart.ctx;\r\n  var vm = this._view;\r\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\r\n  var borderWidth = vm.borderWidth;\r\n  // Set Radius Here\r\n  // If radius is large enough to cause drawing errors a max radius is imposed\r\n  var cornerRadius = 6;\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || \"bottom\";\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || \"left\";\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    var halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\r\n    var borderRight =\r\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\r\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\r\n    var borderBottom =\r\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\r\n  var startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  var corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (var i = 1; i < 4; i++) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    // let nextCorner = cornerAt(nextCornerId);\r\n\r\n    let width = corners[2][0] - corners[1][0];\r\n    let height = corners[0][1] - corners[1][1];\r\n    let x = corners[1][0];\r\n    let y = corners[1][1];\r\n    // eslint-disable-next-line\r\n    var radius: any = cornerRadius;\r\n\r\n    // Fix radius being too large\r\n    if (radius > height / 2) {\r\n      radius = height / 2;\r\n    }\r\n    if (radius > width / 2) {\r\n      radius = width / 2;\r\n    }\r\n\r\n    ctx.moveTo(x + radius, y);\r\n    ctx.lineTo(x + width - radius, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n    ctx.lineTo(x + width, y + height - radius);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n    ctx.lineTo(x + radius, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n    ctx.lineTo(x, y + radius);\r\n    ctx.quadraticCurveTo(x, y, x + radius, y);\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n};\r\n\r\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\r\nvar fonts = {\r\n  base: \"Open Sans\"\r\n};\r\n\r\n// Colors\r\nvar colors = {\r\n  gray: {\r\n    100: \"#f6f9fc\",\r\n    200: \"#e9ecef\",\r\n    300: \"#dee2e6\",\r\n    400: \"#ced4da\",\r\n    500: \"#adb5bd\",\r\n    600: \"#8898aa\",\r\n    700: \"#525f7f\",\r\n    800: \"#32325d\",\r\n    900: \"#212529\"\r\n  },\r\n  theme: {\r\n    default: \"#172b4d\",\r\n    primary: \"#5e72e4\",\r\n    secondary: \"#f4f5f7\",\r\n    info: \"#11cdef\",\r\n    success: \"#2dce89\",\r\n    danger: \"#f5365c\",\r\n    warning: \"#fb6340\"\r\n  },\r\n  black: \"#12263F\",\r\n  white: \"#FFFFFF\",\r\n  transparent: \"transparent\"\r\n};\r\n\r\n// Methods\r\n\r\n// Chart.js global options\r\nfunction chartOptions() {\r\n  // Options\r\n  var options = {\r\n    defaults: {\r\n      global: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\r\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\r\n        defaultFontFamily: fonts.base,\r\n        defaultFontSize: 13,\r\n        layout: {\r\n          padding: 0\r\n        },\r\n        legend: {\r\n          display: false,\r\n          position: \"bottom\",\r\n          labels: {\r\n            usePointStyle: true,\r\n            padding: 16\r\n          }\r\n        },\r\n        elements: {\r\n          point: {\r\n            radius: 0,\r\n            backgroundColor: colors.theme[\"primary\"]\r\n          },\r\n          line: {\r\n            tension: 0.4,\r\n            borderWidth: 4,\r\n            borderColor: colors.theme[\"primary\"],\r\n            backgroundColor: colors.transparent,\r\n            borderCapStyle: \"rounded\"\r\n          },\r\n          rectangle: {\r\n            backgroundColor: colors.theme[\"warning\"]\r\n          },\r\n          arc: {\r\n            backgroundColor: colors.theme[\"primary\"],\r\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\r\n            borderWidth: 4\r\n          }\r\n        },\r\n        tooltips: {\r\n          enabled: true,\r\n          mode: \"index\",\r\n          intersect: false\r\n        }\r\n      },\r\n      doughnut: {\r\n        cutoutPercentage: 83,\r\n        legendCallback: function(chart) {\r\n          var data = chart.data;\r\n          var content = \"\";\r\n\r\n          data.labels.forEach(function(label, index) {\r\n            var bgColor = data.datasets[0].backgroundColor[index];\r\n\r\n            content += '<span class=\"chart-legend-item\">';\r\n            content +=\r\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\r\n              bgColor +\r\n              '\"></i>';\r\n            content += label;\r\n            content += \"</span>\";\r\n          });\r\n\r\n          return content;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // yAxes\r\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\r\n    gridLines: {\r\n      borderDash: [2],\r\n      borderDashOffset: [2],\r\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\r\n      drawBorder: false,\r\n      drawTicks: false,\r\n      lineWidth: 0,\r\n      zeroLineWidth: 0,\r\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\r\n      zeroLineBorderDash: [2],\r\n      zeroLineBorderDashOffset: [2]\r\n    },\r\n    ticks: {\r\n      beginAtZero: true,\r\n      padding: 10,\r\n      callback: function(value) {\r\n        if (!(value % 10)) {\r\n          return value;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  // xAxes\r\n  Chart.scaleService.updateScaleDefaults(\"category\", {\r\n    gridLines: {\r\n      drawBorder: false,\r\n      drawOnChartArea: false,\r\n      drawTicks: false\r\n    },\r\n    ticks: {\r\n      padding: 20\r\n    }\r\n  });\r\n\r\n  return options;\r\n}\r\n\r\n// Parse global options\r\nfunction parseOptions(parent, options) {\r\n  for (var item in options) {\r\n    if (typeof options[item] !== \"object\") {\r\n      parent[item] = options[item];\r\n    } else {\r\n      parseOptions(parent[item], options[item]);\r\n    }\r\n  }\r\n}\r\n\r\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\r\nlet chartExample1 = {\r\n  options: {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            color: colors.gray[900],\r\n            zeroLineColor: colors.gray[900]\r\n          },\r\n          ticks: {\r\n            callback: function(value) {\r\n              if (!(value % 10)) {\r\n                return value + \" people\";\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(item, data) {\r\n          var label = data.datasets[item.datasetIndex].label || \"\";\r\n          var yLabel = item.yLabel;\r\n          var content = \"\";\r\n\r\n          if (data.datasets.length > 1) {\r\n            content += label;\r\n          }\r\n\r\n          content += \"$\" + yLabel + \"k\";\r\n          return content;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  data1: canvas => {\r\n    return {\r\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n      datasets: [\r\n        {\r\n          label: \"Performance\",\r\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  data2: canvas => {\r\n    return {\r\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n      datasets: [\r\n        {\r\n          label: \"Performance\",\r\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n};\r\n\r\n// Example 2 of Chart inside src/views/Index.js (Total orders - Card)\r\nlet chartExample2 = {\r\n  options: {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            callback: function(value) {\r\n              if (!(value % 10)) {\r\n                //return '$' + value + 'k'\r\n                return value;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(item, data) {\r\n          var label = data.datasets[item.datasetIndex].label || \"\";\r\n          var yLabel = item.yLabel;\r\n          var content = \"\";\r\n          if (data.datasets.length > 1) {\r\n            content += label;\r\n          }\r\n          content += yLabel;\r\n          return content;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  data: {\r\n    labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n    datasets: [\r\n      {\r\n        label: \"Sales\",\r\n        data: [25, 20, 30, 22, 17, 29],\r\n        maxBarThickness: 10\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  chartOptions, // used inside src/views/Index.js\r\n  parseOptions, // used inside src/views/Index.js\r\n  chartExample1, // used inside src/views/Index.js\r\n  chartExample2 // used inside src/views/Index.js\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/github.2e257125.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.08ea438e.svg\";","module.exports = __webpack_public_path__ + \"static/media/bootstrap.ab904daa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/angular.368685db.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sketch.e7c82e5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/react.c4eb3d0b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vue.9378e368.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo_anagkazo_icon.7bc0a2f6.png\";","module.exports = __webpack_public_path__ + \"static/media/anagkazo_full.04f18079.png\";","module.exports = __webpack_public_path__ + \"static/media/argon-react.f38ddea9.png\";","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// reactstrap components\r\nimport {\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  Form,\r\n  FormGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Input,\r\n  InputGroup,\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Media\r\n} from \"reactstrap\";\r\n\r\nclass AdminNavbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\r\n          <Container fluid>\r\n            <Link\r\n              className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\r\n              to=\"/\"\r\n            >\r\n              {this.props.brandText}\r\n            </Link>\r\n            {/* <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\r\n              <FormGroup className=\"mb-0\">\r\n                <InputGroup className=\"input-group-alternative\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"fas fa-search\" />\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input placeholder=\"Search\" type=\"text\" />\r\n                </InputGroup>\r\n              </FormGroup>\r\n            </Form> */}\r\n            <Nav className=\"align-items-center d-none d-md-flex\" navbar>\r\n              <UncontrolledDropdown nav>\r\n                <DropdownToggle className=\"pr-0\" nav>\r\n                  <Media className=\"align-items-center\">\r\n                    <span className=\"avatar avatar-sm rounded-circle\">\r\n                      {/* <img\r\n                        alt=\"...\"\r\n                        src={require(\"assets/img/theme/team-4-800x800.jpg\")}\r\n                      /> */}\r\n                    </span>\r\n                    <Media className=\"ml-2 d-none d-lg-block\">\r\n                      <span className=\"mb-0 text-sm font-weight-bold\">\r\n                        Admin\r\n                      </span>\r\n                    </Media>\r\n                  </Media>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                  <DropdownItem className=\"noti-title\" header tag=\"div\">\r\n                    <h6 className=\"text-overflow m-0\">Welcome!</h6>\r\n                  </DropdownItem>\r\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                    <i className=\"ni ni-single-02\" />\r\n                    <span>My profile</span>\r\n                  </DropdownItem>\r\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                    <i className=\"ni ni-settings-gear-65\" />\r\n                    <span>Settings</span>\r\n                  </DropdownItem>\r\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                    <i className=\"ni ni-calendar-grid-58\" />\r\n                    <span>Activity</span>\r\n                  </DropdownItem>\r\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                    <i className=\"ni ni-support-16\" />\r\n                    <span>Support</span>\r\n                  </DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                    <i className=\"ni ni-user-run\" />\r\n                    <span>Logout</span>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Nav>\r\n          </Container>\r\n        </Navbar>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminNavbar;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n/*eslint-disable*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Container, Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <Row className=\"align-items-center justify-content-xl-between\">\r\n          <Col xl=\"6\">\r\n            <div className=\"copyright text-center text-xl-left text-muted\">\r\n              © 2021{\" \"}\r\n              <a\r\n                className=\"font-weight-bold ml-1\"\r\n                href=\"https://anagkazobibleministrytrainingcentre.org/about.html\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                Anagkazo Online\r\n              </a>\r\n            </div>\r\n          </Col>\r\n\r\n          <Col xl=\"6\">\r\n            <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\r\n              <NavItem>\r\n                <NavLink\r\n                  href=\"https://anagkazobibleministrytrainingcentre.org/about.html\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  Anagkazo Online\r\n                </NavLink>\r\n              </NavItem>\r\n\r\n              <NavItem>\r\n                <NavLink\r\n                  href=\"https://anagkazobibleministrytrainingcentre.org/about.html\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  About Us\r\n                </NavLink>\r\n              </NavItem>\r\n\r\n              <NavItem>\r\n                <NavLink\r\n                  href=\"http://blog.creative-tim.com?ref=adr-admin-footer\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  Blog\r\n                </NavLink>\r\n              </NavItem>\r\n\r\n              <NavItem>\r\n                <NavLink\r\n                  href=\"https://github.com/creativetimofficial/argon-dashboard/blob/master/LICENSE.md?ref=adr-admin-footer\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  MIT License\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Col>\r\n        </Row>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n/*eslint-disable*/\r\nimport React from \"react\";\r\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\r\n// nodejs library to set properties for components\r\nimport { PropTypes } from \"prop-types\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Collapse,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Media,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { Badge } from \"reactstrap\";\r\n\r\nclass Sidebar extends React.Component {\r\n  state = {\r\n    collapseOpen: false\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.activeRoute.bind(this);\r\n  }\r\n  // verifies if routeName is the one active (in browser input)\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n  // toggles collapse between opened and closed (true/false)\r\n  toggleCollapse = () => {\r\n    this.setState({\r\n      collapseOpen: !this.state.collapseOpen\r\n    });\r\n  };\r\n  // closes the collapse\r\n  closeCollapse = () => {\r\n    this.setState({\r\n      collapseOpen: false\r\n    });\r\n  };\r\n  // creates the links that appear in the left menu / Sidebar\r\n  createLinks = routes => {\r\n    return routes.map((prop, key) => {\r\n      return (\r\n        <NavItem key={key}>\r\n          <NavLink\r\n            to={prop.layout + prop.path}\r\n            tag={NavLinkRRD}\r\n            onClick={this.closeCollapse}\r\n            //activeclassName=\"active\"\r\n          >\r\n            <i className={prop.icon} />\r\n            {prop.name}\r\n            {\r\n              (prop.name === \"SSMG\") ?\r\n                <Badge color=\"primary\">New</Badge>\r\n                :\r\n                \"\"\r\n            }\r\n\r\n          </NavLink>\r\n        </NavItem>\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    const { bgColor, routes, logo } = this.props;\r\n    let navbarBrandProps;\r\n    if (logo && logo.innerLink) {\r\n      navbarBrandProps = {\r\n        to: logo.innerLink,\r\n        tag: Link\r\n      };\r\n    } else if (logo && logo.outterLink) {\r\n      navbarBrandProps = {\r\n        href: logo.outterLink,\r\n        target: \"_blank\"\r\n      };\r\n    }\r\n    return (\r\n      <Navbar\r\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\r\n        expand=\"md\"\r\n        id=\"sidenav-main\"\r\n      >\r\n        <Container fluid>\r\n          {/* Brand */}\r\n          {logo ? (\r\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps} >\r\n              <img\r\n                alt={logo.imgAlt}\r\n                className=\"navbar-brand-img\"\r\n                src={logo.imgSrc}\r\n              />\r\n            </NavbarBrand>\r\n          ) : null}\r\n          {/* User */}\r\n          <Nav className=\"align-items-center d-md-none\">\r\n            <UncontrolledDropdown nav>\r\n              <DropdownToggle nav>\r\n                <Media className=\"align-items-center\">\r\n                  <span className=\"avatar avatar-sm rounded-circle\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/theme/team-1-800x800.jpg\")}\r\n                    />\r\n                  </span>\r\n                </Media>\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\r\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\r\n                </DropdownItem>\r\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                  <i className=\"ni ni-single-02\" />\r\n                  <span>My profile</span>\r\n                </DropdownItem>\r\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                  <i className=\"ni ni-settings-gear-65\" />\r\n                  <span>Settings</span>\r\n                </DropdownItem>\r\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                  <i className=\"ni ni-calendar-grid-58\" />\r\n                  <span>Activity</span>\r\n                </DropdownItem>\r\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                  <i className=\"ni ni-support-16\" />\r\n                  <span>Support</span>\r\n                </DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                  <i className=\"ni ni-user-run\" />\r\n                  <span>Logout</span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav>\r\n          {/* Collapse */}\r\n          <Collapse navbar>\r\n            {/* Collapse header */}\r\n            <div className=\"navbar-collapse-header d-md-none\">\r\n              <Row>\r\n                {logo ? (\r\n                  <Col className=\"collapse-brand\" xs=\"6\">\r\n                    {logo.innerLink ? (\r\n                      <Link to={logo.innerLink}>\r\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\r\n                      </Link>\r\n                    ) : (\r\n                      <a href={logo.outterLink}>\r\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\r\n                      </a>\r\n                    )}\r\n                  </Col>\r\n                ) : null}\r\n              </Row>\r\n            </div>\r\n            \r\n            {/* Navigation */}\r\n            <Nav navbar>{this.createLinks(routes)}</Nav>\r\n            {/* Divider */}\r\n            <hr className=\"my-3\" />\r\n            {/* Heading */}\r\n            <h6 className=\"navbar-heading text-muted\">Advanced</h6>\r\n            {/* Navigation */}\r\n            <Nav className=\"mb-md-3\" navbar>\r\n              <NavItem>\r\n                <NavLink \r\n                tag={NavLinkRRD}\r\n                //activeclassName=\"active\"\r\n                to={\"/admin/advanced/upload-students\"}>\r\n                  <i className=\"fa fa-users\" />\r\n                  Upload Students with Excel\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink \r\n                tag={NavLinkRRD}\r\n                //activeclassName=\"active\"\r\n                to={\"/admin/advanced/upload-bussing-report\"}>\r\n                  <i className=\"fa fa-bus\" />\r\n                  Upload Bussing Info with Excel\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink \r\n                tag={NavLinkRRD}\r\n                //activeclassName=\"active\"\r\n                to={\"/admin/advanced/upload-center-service-report\"}>\r\n                  <i className=\"fa fa-users\" />\r\n                  Upload Bacenta/Center Service with Excel\r\n                  <Badge color=\"primary\">New</Badge>\r\n                </NavLink>\r\n              </NavItem>\r\n              </Nav>\r\n               {/* Divider */}\r\n              <hr className=\"my-3\" />\r\n              {/* Heading */}\r\n              <h6 className=\"navbar-heading text-muted\">Reports</h6>\r\n              {/* Navigation */}\r\n              <Nav className=\"mb-md-3\" navbar>\r\n                <NavItem>\r\n                  <NavLink \r\n                  tag={NavLinkRRD}\r\n                  onClick={this.closeCollapse}\r\n                  //activeclassName=\"active\"\r\n                  to={\"/admin/students/ministry-skills\"}>\r\n                    <i className=\"ni ni-cloud-upload-96\" />\r\n                    Generate Ministry Skills Report\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Nav className=\"mb-md-3\" navbar>\r\n                <NavItem>\r\n                  <NavLink \r\n                  tag={NavLinkRRD}\r\n                  onClick={this.closeCollapse}\r\n                  //activeclassName=\"active\"\r\n                  to={\"/admin/students/anagkazo_live_attn\"}>\r\n                    <i className=\"ni ni-cloud-upload-96\" />\r\n                    Generate Attendance report\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Nav className=\"mb-md-3\" navbar>\r\n                <NavItem>\r\n                  <NavLink \r\n                  tag={NavLinkRRD}\r\n                  onClick={this.closeCollapse}\r\n                  //activeclassName=\"active\"\r\n                  to={\"/admin/students/generate-bussing-report\"}>\r\n                    <i className=\"ni ni-bus-front-12\" />\r\n                    Generate Bussing Reports\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Nav className=\"mb-md-3\" navbar>\r\n                <NavItem>\r\n                  <NavLink \r\n                  rel=\"noopener noreferrer\" \r\n                  target=\"_blank\"\r\n                  \r\n                  //activeclassName=\"active\"\r\n                  href=\"https://attendance.firstlovegallery.com/\">\r\n                    <i className=\"ni ni-check-bold\" />\r\n                    Redirect to Academic Attendance\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Nav className=\"mb-md-3\" navbar>\r\n                <NavItem>\r\n                  <NavLink href=\"https://www.creative-tim.com/product/argon-dashboard-pro-react?ref=adr-admin-sidebar\">\r\n                    <i className=\"ni ni-bold-right\" />\r\n                    Logout\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  routes: [{}]\r\n};\r\n\r\nSidebar.propTypes = {\r\n  // links that will be displayed inside the component\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  logo: PropTypes.shape({\r\n    // innerLink is for links that will direct the user within the app\r\n    // it will be rendered as <Link to=\"...\">...</Link> tag\r\n    innerLink: PropTypes.string,\r\n    // outterLink is for links that will direct the user outside the app\r\n    // it will be rendered as simple <a href=\"...\">...</a> tag\r\n    outterLink: PropTypes.string,\r\n    // the image src of the logo\r\n    imgSrc: PropTypes.string.isRequired,\r\n    // the alt for the img\r\n    imgAlt: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nexport default Sidebar;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// reactstrap components\r\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\r\n\r\nclass Header extends React.Component {\r\n\r\n  state = {\r\n    studentsCount: 0,\r\n    gsos: 0,\r\n    centerleaderCount: 0,\r\n    sontaLeaderCount: 0,\r\n    bacenta_leader_count: 0\r\n  };\r\n\r\n  cancelTokenSource = null;\r\n\r\n  componentDidMount(){\r\n    this.cancelTokenSource = axios.CancelToken.source();\r\n    //get student count \r\n    axios({\r\n      url: 'https://anagkazo.firstlovegallery.com/api/admin_app/students',\r\n      method: 'GET',\r\n      cancelToken: this.cancelTokenSource.token\r\n    }).then((response) => {\r\n      this.setState({studentsCount: response.data.length})\r\n    }).catch(e => console.log(e));\r\n\r\n    //get gso count\r\n    axios({\r\n      url: 'https://anagkazo.firstlovegallery.com/api/admin_app/gsos',\r\n      method: \"GET\",\r\n      cancelToken: this.cancelTokenSource.token\r\n    }).then((response) => {\r\n      this.setState({gsos: response.data.length});\r\n    });\r\n\r\n    axios({\r\n      url: 'https://anagkazo.firstlovegallery.com/api/admin_app/centers_count',\r\n      method: \"GET\",\r\n      cancelToken: this.cancelTokenSource.token\r\n    }).then((response) => {\r\n      this.setState({centerleaderCount: response.data.center_count});\r\n    });\r\n\r\n    axios({\r\n      url: 'https://anagkazo.firstlovegallery.com/api/admin_app/sonta_count',\r\n      method: \"GET\",\r\n      cancelToken: this.cancelTokenSource.token\r\n    }).then((response) => {\r\n      this.setState({sontaLeaderCount: response.data.sonta_leader_count});\r\n    });\r\n\r\n    axios({\r\n      url: 'https://anagkazo.firstlovegallery.com/api/admin_app/bacenta_leaders_count',\r\n      method: 'GET',\r\n      cancelToken: this.cancelTokenSource.token\r\n    }).then((response) => {\r\n      this.setState({bacenta_leaders_count: response.data.bacenta_leader_count.length});\r\n    })\r\n\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.cancelTokenSource.cancel(\"with a message?\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\r\n          <Container fluid>\r\n            <div className=\"header-body\">\r\n              {/* Card stats */}\r\n              <Row>\r\n                <Col lg=\"4\" xl=\"2\">\r\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\r\n                    <CardBody>\r\n                    <Link to={\"/admin/students\"}>\r\n                      <Row>\r\n                        <Col>\r\n                          <CardTitle\r\n                            tag=\"h5\"\r\n                            className=\"text-uppercase text-muted mb-0\"\r\n                          >\r\n                            Students\r\n                          </CardTitle>\r\n                          <span className=\"h2 font-weight-bold mb-0\">\r\n                            {this.state.studentsCount}\r\n                          </span>\r\n                        </Col>\r\n                        <Col className=\"col-auto\">\r\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\r\n                            <i className=\"fas fa-graduation-cap\" />\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </Link>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n                <Col lg=\"4\" xl=\"2\">\r\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\r\n                    <CardBody>\r\n                      <Link to={\"/admin/con_reps\"}>\r\n                        <Row>\r\n                          <div className=\"col\">\r\n                            <CardTitle\r\n                              tag=\"h5\"\r\n                              className=\"text-uppercase text-muted mb-0\"\r\n                            >\r\n                              Constit. Reps\r\n                            </CardTitle>\r\n                            <span className=\"h2 font-weight-bold mb-0\">\r\n                              {this.state.gsos}\r\n                            </span>\r\n                          </div>\r\n                          <Col className=\"col-auto\">\r\n                            <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\r\n                              <i className=\"fas fa-chart-pie\" />\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Link>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n                <Col lg=\"4\" xl=\"2\">\r\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\r\n                    <CardBody>\r\n                        <Link to={\"/admin/students/center_leaders\"}>\r\n                          <Row>\r\n                            <div className=\"col\">\r\n                              <CardTitle\r\n                                tag=\"h5\"\r\n                                className=\"text-uppercase text-muted mb-0\"\r\n                              >\r\n                                Center Leaders\r\n                              </CardTitle>\r\n                              <span className=\"h2 font-weight-bold mb-0\"> {this.state.centerleaderCount} </span>\r\n                            </div>\r\n                            <Col className=\"col-auto\">\r\n                              <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\r\n                                <i className=\"fas fa-users\" />\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </Link>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n                <Col lg=\"4\" xl=\"2\">\r\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\r\n                    <CardBody>\r\n                    <Link to={\"/admin/students/sonta_leaders\"} >\r\n                      <Row>\r\n                        <div className=\"col\">\r\n                          <CardTitle\r\n                            tag=\"h5\"\r\n                            className=\"text-uppercase text-muted mb-0\"\r\n                          >\r\n                            Sonta Leaders\r\n                          </CardTitle>\r\n                          <span className=\"h2 font-weight-bold mb-0\">\r\n                            {this.state.sontaLeaderCount}\r\n                          </span>\r\n                        </div>\r\n                        <Col className=\"col-auto\">\r\n                          <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\r\n                            <i className=\"fa fa-fire\" />\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                      </Link>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n                <Col lg=\"4\" xl=\"2\">\r\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\r\n                    <CardBody>\r\n                    <Link to={\"/admin/students/bacenta_leaders\"} >\r\n                      <Row>\r\n                        <div className=\"col\">\r\n                          <CardTitle\r\n                            tag=\"h5\"\r\n                            className=\"text-uppercase text-muted mb-0\"\r\n                          >\r\n                            Bacenta Leaders\r\n                          </CardTitle>\r\n                          <span className=\"h2 font-weight-bold mb-0\">\r\n                            { this.state.bacenta_leaders_count }\r\n                          </span>\r\n                        </div>\r\n                        <Col className=\"col-auto\">\r\n                          <div className=\"icon icon-shape bg-success text-white rounded-circle shadow\">\r\n                            <i className=\"fa fa-bus\" />\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                      </Link>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n                <Col lg=\"4\" xl=\"2\">\r\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\r\n                    <CardBody>\r\n                    <Link to={\"/admin/students/church_planters\"} >\r\n                      <Row>\r\n                        <div className=\"col\">\r\n                          <CardTitle\r\n                            tag=\"h5\"\r\n                            className=\"text-uppercase text-muted mb-0\"\r\n                          >\r\n                            Church Planters\r\n                          </CardTitle>\r\n                          <span className=\"h2 font-weight-bold mb-0\">\r\n                            {(this.state.studentsCount - this.state.bacenta_leaders_count) + \"\"}\r\n                          </span>\r\n                        </div>\r\n                        <Col className=\"col-auto\">\r\n                          <div className=\"icon icon-shape bg-default text-white rounded-circle shadow\">\r\n                            <i className=\"fa fa-seedling\" />\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                      </Link>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","//export const BASE_URL = \"http://192.168.8.190/acc_membership/public/api/app\";\r\nexport const BASE_URL = \"https://anagkazo.firstlovegallery.com/api\";\r\n//export const BASE_URL = \"http://192.168.8.190/acc_membership/public/api\";\r\n//export const BASE_URL = \"http://192.168.8.125/acc_membership/public/api\";\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    \r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    NavItem,\r\n    NavLink,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Nav,\r\n    Row\r\n  } from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\n// import Chart from \"chart.js\";\r\n\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport axios from 'axios';\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\nimport {Reveal} from 'semantic-ui-react'\r\n\r\nexport default function Bussing_V_Center_Attn({chartOptions}){\r\n    \r\n    const [labels, setLabels] = useState([]);\r\n    const [bussingData, setBussingData] = useState([]);\r\n    const [bussingData_stnds, setBussingData_stnds] = useState([]);\r\n    const [bussingData_total, setBussingData_total] = useState([]);\r\n    const [centerServiceData, setCenterServiceData] = useState([]);\r\n    const [chartVisibility, setChartVisibility] = useState(true);\r\n    const [barChartOptionsDisenabled, setBarChartOptionsDisenabled] = useState(true);\r\n\r\n\r\n    //get the bussing data from here ...\r\n    const getBussing_v_CenterValues =  async () => {\r\n\r\n        const response = await axios.get(`${BASE_URL}/react_admin/bussing_v_center`);\r\n        await setLabels(response.data.bussingByMonth.map(item => `${item.month_name} ${item.year}`));\r\n        \r\n        await setBussingData(response.data.bussingByMonth.map(item => `${item.averageBussing.toFixed(2)}`));\r\n        await setBussingData_stnds(response.data.bussingByMonth.map(item => `${item.student_count_avg.toFixed(2)}`));\r\n        await setBussingData_total(response.data.bussingByMonth.map(item => `${item.twnPlusStudent.toFixed(2)}`));\r\n        \r\n        await setCenterServiceData(response.data.bussingByMonth.map(({month, year}) => {\r\n                 let centerVal = response.data.centerValuesByMonth.find(\r\n                                        (item) => ((item.month === month) && (item.year === year))\r\n                                );\r\n                                if (typeof centerVal !== 'undefined'){\r\n                                    return centerVal.attn;\r\n                                }\r\n                                return 0;\r\n        }));\r\n    }\r\n\r\n    const handleSelect = (e) => {\r\n        console.log(e);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        \r\n        getBussing_v_CenterValues();\r\n\r\n        return () => {\r\n            \r\n        }\r\n        \r\n    },[]);\r\n\r\n    const selectionRange = {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: 'selection',\r\n    }\r\n\r\n    return (\r\n        <Reveal animated='move down' disabled={barChartOptionsDisenabled}>\r\n            <Reveal.Content visible={chartVisibility} style={{width:'100%'}}>\r\n                <Card className=\"bg-gradient-default shadow\">\r\n                    <CardHeader className=\"bg-transparent\">\r\n                        <Row className=\"align-items-center\">\r\n                            <div className=\"col\">\r\n                                <h6 className=\"text-uppercase text-light ls-1 mb-1\">\r\n                                Overview\r\n                                </h6>\r\n                                <h2 className=\"text-white mb-0\">Bussing Attendance</h2>\r\n                            </div>\r\n                            \r\n                            <div className=\"col\">\r\n                                <Nav className=\"justify-content-end\" pills>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                        className={classnames(\"py-2 px-3\", {\r\n                                            active: true\r\n                                        })}\r\n                                        onClick={ e => {\r\n                                            setBarChartOptionsDisenabled(false);\r\n                                            setChartVisibility(true)\r\n                                        } \r\n                                            \r\n                                        }\r\n                                        >\r\n                                        <span className=\"d-none d-md-block\">Options</span>\r\n                                        <span className=\"d-md-none\">M</span>\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                </Nav>\r\n                            </div>\r\n                        </Row>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <div className=\"chart\">\r\n                            <Bar\r\n                                data={{\r\n                                    labels: labels,\r\n                                    datasets: [\r\n                                    {\r\n                                        type: 'bar',\r\n                                        label: 'Town Bussing Average',\r\n                                        borderColor: 'rgb(54, 162, 235)',\r\n                                        backgroundColor: 'rgb(255, 99, 132)',\r\n                                        borderWidth: 2,\r\n                                        data: bussingData,\r\n                                    },\r\n                                    {\r\n                                        type: 'bar',\r\n                                        label: 'Students Present Average',\r\n                                        borderColor: 'rgb(54, 162, 235)',\r\n                                        backgroundColor: 'rgb(162, 54, 75)',\r\n                                        borderWidth: 2,\r\n                                        data: bussingData_stnds\r\n                                    },\r\n                                    {\r\n                                        type: 'bar',\r\n                                        label: 'Total Average Attendance',\r\n                                        borderColor: 'rgb(54, 162, 235)',\r\n                                        backgroundColor: 'rgb(74, 235, 162)',\r\n                                        borderWidth: 2,\r\n                                        data: bussingData_total\r\n                                    }\r\n                                    ]\r\n                                    }}\r\n                                \r\n                                // options={chartOptions}\r\n                                getDatasetAtEvent={e => console.log(e)}\r\n                            />\r\n                        </div>\r\n                    </CardBody>\r\n                </Card>\r\n            </Reveal.Content> \r\n\r\n\r\n\r\n            <Reveal.Content hidden={chartVisibility} style={{height:'100%'}}>\r\n                <Card className=\"bg-gradient-default shadow\">\r\n                    <CardHeader className=\"bg-transparent\">\r\n                        <Row className=\"align-items-center\">\r\n                            <div className=\"col\">\r\n                                <h2 className=\"text-white mb-0\">Chart Options</h2>\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <Nav className=\"justify-content-end\" pills>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                        className={classnames(\"py-2 px-3\", {\r\n                                            active: true\r\n                                        })}\r\n                                        onClick={ e => setChartVisibility(false) }\r\n                                        >\r\n                                        <span className=\"d-none d-md-block\">Show Chart</span>\r\n                                        <span className=\"d-md-none\">S</span>\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                </Nav>\r\n                            </div>\r\n                        </Row>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <Row>\r\n                            <div className=\"col\">\r\n                                <FormGroup>\r\n                                    <Label for=\"exampleSelect text-light\" >Filter Options</Label>\r\n                                    <Input type=\"select\" name=\"select\" id=\"filter_options\">\r\n                                    <option>Class</option>\r\n                                    <option>Country</option>\r\n                                    <option>UD/NON UD</option>\r\n                                    <option>Community</option>\r\n                                    <option>Center</option>\r\n                                    </Input>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <FormGroup>\r\n                                    <Label for=\"exampleSelect\">Filter Value</Label>\r\n                                    <Input type=\"select\" name=\"select\" id=\"filter_value\">\r\n                                    </Input>\r\n                                </FormGroup>\r\n                            </div>\r\n                        </Row>\r\n                        <Row >\r\n                            <div className=\"col\">\r\n                                <Label>Date Range</Label>\r\n                                <DateRangePicker\r\n                                    initialSettings={{ startDate: '01/01/2020', endDate: '01/15/2020' }}\r\n                                    onShow={() => {\r\n                                        //setBarChartOptionsDisenabled(true);\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        setBarChartOptionsDisenabled(true);\r\n                                    }}\r\n                                >\r\n                                    <input type=\"text\" className=\"form-control\" />\r\n                                </DateRangePicker>\r\n                            </div>\r\n                        </Row>\r\n                    </CardBody>\r\n                </Card>\r\n            </Reveal.Content> \r\n        </Reveal>\r\n    );\r\n\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport axios from 'axios';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Row,\r\n    Nav,\r\n    NavItem,\r\n    NavLink\r\n  } from \"reactstrap\";\r\n  import classnames from \"classnames\";\r\n  import {BASE_URL} from \"../../config/baseUrl\";\r\n\r\nexport default function BussingPieChart({chartOptions}){\r\n\r\n    const [labels, setLabels] = useState([]);\r\n    const [bussingData, setBussingData] = useState([]);\r\n\r\n    const getBussingPieChart =  async () => {\r\n\r\n        const response = await axios.get(`${BASE_URL}/react_admin/bussing_twn_v_students`);\r\n        await setLabels(response.data.labels);\r\n        await setBussingData(response.data.data.map(val => val.toFixed(2)));\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        getBussingPieChart();\r\n\r\n    },[]);\r\n\r\n    return (\r\n        <Card className=\"shadow\">\r\n            <CardHeader className=\"bg-transparent\">\r\n                <Row className=\"align-items-center\">\r\n                    <div className=\"col\">\r\n                        <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\r\n                        Bussing Pie Chart(Town Vs Students)\r\n                        </h6>\r\n                        <h2 className=\"mb-0\">Students Vrs Town Souls</h2>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                                <Nav className=\"justify-content-end\" pills>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                        className={classnames(\"py-2 px-3\", {\r\n                                            active: true\r\n                                        })}\r\n                                        //onClick={ e => setChartVisibility(true) }\r\n                                        >\r\n                                        <span className=\"d-none d-md-block\">Options</span>\r\n                                        <span className=\"d-md-none\">M</span>\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                </Nav>\r\n                            </div>\r\n                </Row>\r\n            </CardHeader>\r\n            <CardBody>\r\n                {/* Chart */}\r\n                <div className=\"chart\">\r\n                <Pie\r\n                    data={{\r\n                            labels: labels,\r\n                            datasets: [\r\n                            {\r\n                                type: 'pie',\r\n                                label: 'Bussing Pie Chart (Town vrs Students)',\r\n                                borderWidth: 2,\r\n                                data: bussingData,\r\n                                backgroundColor: [\r\n                                    'rgba(255, 99, 132, 0.2)',\r\n                                    'rgba(54, 162, 235, 0.2)'\r\n                                ],\r\n                                borderColor: [\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(54, 162, 235, 1)'\r\n                                ]\r\n                            }]\r\n                        }}\r\n                    options={{\r\n                        legend: { display: true, position: \"top\" },\r\n              \r\n                        datalabels: {\r\n                          display: true,\r\n                          color: \"white\",\r\n                        }\r\n                    }}\r\n                />\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    Table,\r\n    Row,\r\n    Button,\r\n    FormGroup,\r\n    Label,\r\n    Input\r\n  } from \"reactstrap\";\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\n\r\nexport default function TopBussingStudent(){\r\n    const [topBussers, setTopBussers] = useState([]);\r\n    const [hideFilterOptions, setHideFilterOptions] = useState(false);\r\n\r\n    const getTopBussers = async () => {\r\n        const response = await axios.get(`${BASE_URL}/react_admin/top_bussers`);\r\n        await setTopBussers(response.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTopBussers();\r\n    },[]);\r\n\r\n    return (\r\n        <Card className=\"shadow\">\r\n            <CardHeader className=\"border-0\">\r\n                <Row className=\"align-items-center\">\r\n                    <div className=\"col-md-3\">\r\n                        <h3 className=\"mb-0\">Top 10 Bussing Students</h3>\r\n                    </div>\r\n                    {\r\n                        hideFilterOptions && \r\n                    \r\n                        <div className=\"col\" style={{flexDirection: 'row'}}>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleSelect\">Filter Options</Label>\r\n                                <Input type=\"select\" name=\"select\" id=\"filter_options\">\r\n                                <option>Class</option>\r\n                                <option>Country</option>\r\n                                <option>UD/NON UD</option>\r\n                                <option>Community</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                        \r\n                            <FormGroup>\r\n                                <Label for=\"exampleSelect\">Filter Value</Label>\r\n                                <Input type=\"select\" name=\"select\" id=\"filter_value\">\r\n                                \r\n                                </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                    }\r\n                    <div className=\"col text-right\">\r\n                        <Button\r\n                        color=\"primary\"\r\n                        onClick={e => {\r\n                            setHideFilterOptions( val => !val);\r\n                        }}\r\n                        size=\"sm\"\r\n                        >\r\n                        Filter Options\r\n                        </Button>\r\n                    </div>\r\n                </Row>\r\n            </CardHeader>\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n                <thead className=\"thead-light\">\r\n                <tr>\r\n                    <th scope=\"col\">Index Number</th>\r\n                    <th scope=\"col\">Student Name</th>\r\n                    <th scope=\"col\">Class</th>\r\n                    <th scope=\"col\">Souls Bussed</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        topBussers.map((busser, index) => (\r\n                            <tr key={index}>\r\n                                <th scope=\"row\">{busser.index_number}</th>\r\n                                <td>\r\n                                <Link \r\n                                    to={`/admin/student/${busser.student_id}/profile`}\r\n                                >\r\n                                    {busser.student_name}\r\n                                </Link>    \r\n                                </td>\r\n                                <td>{busser.class}</td>\r\n                                <td>\r\n                                    {busser.sum_number_bussed}\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </Card>\r\n    );\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    Row,\r\n    Button,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Spinner\r\n  } from \"reactstrap\";\r\n  import { Link, useLocation } from \"react-router-dom\";\r\n  import { Icon, Label as SmLabel, Menu, Table } from 'semantic-ui-react'\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\n\r\nexport default function StudentBussingInfo(){\r\n    const [studentBussing, setStudentBussing] = useState([]);\r\n    const [hideFilterOptions, setHideFilterOptions] = useState(false);\r\n    const [bussingDate, setBussingDate] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const LAST_SATURDAY = -1;\r\n\r\n    \r\n\r\n    const getStudentBussingInfo = async (date) => {\r\n        setLoading(true);\r\n\r\n        const response = await axios.get(`${BASE_URL}/react_admin/town_bussing_aggregate?date=${date}`);        \r\n        await setStudentBussing(response.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let defaultDate = moment().day(LAST_SATURDAY);\r\n        setBussingDate(moment(defaultDate).format(\"YYYY-MM-DD\"));\r\n        getStudentBussingInfo(moment(defaultDate).format(\"YYYY-MM-DD\"));\r\n\r\n        return () => {\r\n\r\n        }\r\n\r\n    },[]);\r\n\r\n    const handleDateChange = (obj) => {\r\n        let selectedDate = moment(obj.startDate).format(\"YYYY-MM-DD\");\r\n        \r\n        setBussingDate(selectedDate);\r\n        getStudentBussingInfo(selectedDate);\r\n    }\r\n\r\n    const handleConstituencyClick = (e, x) => {\r\n        //go to the constituency page\r\n        console.log(x);\r\n\r\n    }\r\n\r\n    return (\r\n        <Card className=\"shadow\">\r\n            <CardHeader className=\"border-0\">\r\n                <Row className=\"align-items-center\">\r\n                    <div className=\"col-md-4\">\r\n                        <h3 className=\"mb-0\">Constituency Bussing on<br />on {moment(bussingDate).format(\"DD-MMM-YYYY\")}</h3>\r\n                        {loading && <Spinner color=\"primary\" />}\r\n                    </div>\r\n                    {\r\n                        hideFilterOptions && \r\n                        <div className=\"col\" style={{flexDirection: 'row'}}>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleSelect\">Filter Options</Label>\r\n                                <Input type=\"select\" name=\"select\" id=\"filter_options\">\r\n                                <option>Class</option>\r\n                                <option>Country</option>\r\n                                <option>UD/NON UD</option>\r\n                                <option>Community</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                        \r\n                            <FormGroup>\r\n                                <Label for=\"exampleSelect\">Filter Value</Label>\r\n                                <Input type=\"select\" name=\"select\" id=\"filter_value\">\r\n                                \r\n                                </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                    }\r\n                    <div className=\"col-md-4\" >\r\n                        <Label>Choose Date</Label>\r\n                        <DateRangePicker\r\n                            initialSettings={{\r\n                                singleDatePicker: true,\r\n                                showDropdowns: true,\r\n                                minYear: 2018,\r\n                                maxYear: parseInt(moment().format('YYYY'), 10),\r\n                                locale: {\r\n                                    format: 'D-MMM-YYYY'\r\n                                }\r\n                            }}\r\n                            onApply={\r\n                                (e, obj) => {\r\n                                    handleDateChange(obj);\r\n                                }\r\n                            }\r\n                        >    \r\n                            <input type=\"text\" className=\"form-control col-4\" value={bussingDate} readOnly/>\r\n                        </DateRangePicker>\r\n                    </div>\r\n                    \r\n                    <div className=\"col text-right\">\r\n                        <Button\r\n                        color=\"primary\"\r\n                        onClick={e => {\r\n                            setHideFilterOptions( val => !val);\r\n                        }}\r\n                        size=\"sm\"\r\n                        >\r\n                        Filter Options\r\n                        </Button>\r\n                    </div>\r\n                </Row>\r\n            </CardHeader>\r\n            <Table celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell><h4>Constituency</h4></Table.HeaderCell>\r\n                        <Table.HeaderCell><h4>Con Rep</h4></Table.HeaderCell>\r\n                        <Table.HeaderCell><h4>Town Souls Bussed</h4></Table.HeaderCell>\r\n                        <Table.HeaderCell><h4>Students Present</h4></Table.HeaderCell>\r\n                        <Table.HeaderCell><h4>Total Number Bussed</h4></Table.HeaderCell>\r\n                        <Table.HeaderCell><h4>Students that Bussed</h4></Table.HeaderCell>\r\n                        <Table.HeaderCell><h4>Students that Didn't Bus</h4></Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                    {\r\n                        studentBussing.map((item, key) => (\r\n                            <Table.Row key={key}>\r\n                                <Table.Cell >\r\n                                    <Link\r\n                                        to={`/admin/constituency/${item.region_id}?date=${bussingDate}`}\r\n                                        >\r\n                                        <SmLabel \r\n                                            style={{cursor:'pointer'}}\r\n                                            onClick={handleConstituencyClick}\r\n                                        >\r\n                                            {item.region_name}\r\n                                        </SmLabel>\r\n                                    </Link>\r\n                                </Table.Cell>\r\n                                <Table.Cell>{item.con_rep}</Table.Cell>\r\n                                <Table.Cell>{item.bussingStats.totalNumberBussed}</Table.Cell>\r\n                                <Table.Cell>{item.bussingStats.totalStudentsPresent}</Table.Cell>\r\n                                <Table.Cell>{(item.bussingStats.totalStudentsPresent + item.bussingStats.totalNumberBussed)}</Table.Cell>\r\n                                <Table.Cell>{item.bussingStats.totalStudentsThatBussed}</Table.Cell>\r\n                                <Table.Cell>{item.bussingStats.totalStudentsThatDidntBus}</Table.Cell>\r\n                            </Table.Row>\r\n                            )\r\n                        )\r\n                    }\r\n                </Table.Body>\r\n                <Table.Footer>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell colSpan='2'>\r\n                        <Link\r\n                            to={`/admin/all_constituency_monthly_charts`}\r\n                        >\r\n                            <SmLabel \r\n                                style={{cursor:'pointer'}}                \r\n                            >\r\n                            <h4>{\"FLC Anagkazo Grand Totals\"}</h4>\r\n                            </SmLabel>\r\n                        </Link>\r\n                        </Table.HeaderCell>\r\n                        <Table.HeaderCell >\r\n                            {\r\n                            studentBussing.reduce((prev, currentVal) => \r\n                               prev + currentVal.bussingStats.totalNumberBussed\r\n                            ,0)\r\n                            }\r\n                        </Table.HeaderCell>\r\n                        <Table.HeaderCell >\r\n                            {\r\n                            studentBussing.reduce((prev, currentVal) => \r\n                               prev + currentVal.bussingStats.totalStudentsPresent\r\n                            ,0)\r\n                            }\r\n                        </Table.HeaderCell>\r\n                        <Table.HeaderCell >\r\n                            {\r\n                            studentBussing.reduce((prev, currentVal) => \r\n                               prev + (currentVal.bussingStats.totalStudentsPresent + currentVal.bussingStats.totalNumberBussed)\r\n                            ,0)\r\n                            }\r\n                        </Table.HeaderCell>\r\n                        <Table.HeaderCell >\r\n                            {\r\n                            studentBussing.reduce((prev, currentVal) => \r\n                               prev + currentVal.bussingStats.totalStudentsThatBussed\r\n                            ,0)\r\n                            }\r\n                        </Table.HeaderCell>\r\n                        <Table.HeaderCell >\r\n                            {\r\n                            studentBussing.reduce((prev, currentVal) => \r\n                               prev + currentVal.bussingStats.totalStudentsThatDidntBus\r\n                            ,0)\r\n                            }\r\n                        </Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Footer>\r\n            </Table>\r\n        </Card>\r\n    );\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    Row,\r\n    Button,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Spinner\r\n  } from \"reactstrap\";\r\n  import { Link, useLocation } from \"react-router-dom\";\r\n  import { Icon, Label as SmLabel, Menu, Table } from 'semantic-ui-react'\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\n\r\nexport default function StudentCenterService(){\r\n    const [centerServiceAtn, setCenterServiceAttn] = useState([]);\r\n    const [hideFilterOptions, setHideFilterOptions] = useState(false);\r\n    const [serviceDate, setServiceDate] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const LAST_THURSDAY = -3;\r\n\r\n    const getStudentCenterServiceInfo = async (date) => {\r\n        setLoading(true);\r\n        const response = await axios.get(`${BASE_URL}/react_admin/center_service_aggregate?date=${date}`);        \r\n        await setCenterServiceAttn(response.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let defaultDate = moment().day(LAST_THURSDAY);\r\n        setServiceDate(moment(defaultDate).format(\"YYYY-MM-DD\"));\r\n        getStudentCenterServiceInfo(moment(defaultDate).format(\"YYYY-MM-DD\"));\r\n\r\n        return () => {\r\n            //put unmount code here ...\r\n        }\r\n\r\n    },[]);\r\n\r\n    const handleDateChange = (obj) => {\r\n        let selectedDate = moment(obj.startDate).format(\"YYYY-MM-DD\");\r\n        \r\n        setServiceDate(selectedDate);\r\n        getStudentCenterServiceInfo(selectedDate);\r\n    }\r\n\r\n    const handleConstituencyClick = (e, x) => {\r\n        //go to the constituency page\r\n        console.log(x);\r\n\r\n    }\r\n\r\n    return (\r\n        <Card className=\"shadow\">\r\n            <CardHeader className=\"border-0\">\r\n                <Row className=\"align-items-center\">\r\n                    <div className=\"col-md-4\">\r\n                        <h3 className=\"mb-0\">Constituency Center Service on<br />on {moment(serviceDate).format(\"DD-MMM-YYYY\")}</h3>\r\n                        {loading && <Spinner color=\"primary\" />}\r\n                    </div>\r\n                    {\r\n                        hideFilterOptions && \r\n                        <div className=\"col\" style={{flexDirection: 'row'}}>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleSelect\">Filter Options</Label>\r\n                                <Input type=\"select\" name=\"select\" id=\"filter_options\">\r\n                                <option>Class</option>\r\n                                <option>Country</option>\r\n                                <option>UD/NON UD</option>\r\n                                <option>Community</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                        \r\n                            <FormGroup>\r\n                                <Label for=\"exampleSelect\">Filter Value</Label>\r\n                                <Input type=\"select\" name=\"select\" id=\"filter_value\">\r\n                                \r\n                                </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                    }\r\n                    <div className=\"col-md-4\" >\r\n                        <Label>Choose Date</Label>\r\n                        <DateRangePicker\r\n                            initialSettings={{\r\n                                singleDatePicker: true,\r\n                                showDropdowns: true,\r\n                                minYear: 2018,\r\n                                maxYear: parseInt(moment().format('YYYY'), 10),\r\n                                locale: {\r\n                                    format: 'D-MMM-YYYY'\r\n                                }\r\n                            }}\r\n                            onApply={\r\n                                (e, obj) => {\r\n                                    handleDateChange(obj);\r\n                                }\r\n                            }\r\n                        >    \r\n                            <input type=\"text\" className=\"form-control col-4\" value={serviceDate} readOnly/>\r\n                        </DateRangePicker>\r\n                    </div>\r\n                    <div className=\"col text-right\">\r\n                        <Button\r\n                        color=\"primary\"\r\n                        onClick={e => {\r\n                            setHideFilterOptions( val => !val);\r\n                        }}\r\n                        size=\"sm\"\r\n                        >\r\n                        Filter Options\r\n                        </Button>\r\n                    </div>\r\n                </Row>\r\n            </CardHeader>\r\n            <Table celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell><h4>Constituency</h4></Table.HeaderCell>\r\n                        <Table.HeaderCell><h4>Con Rep</h4></Table.HeaderCell>\r\n                        <Table.HeaderCell><h4>Total Center Service Attendance</h4></Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                    {\r\n                        centerServiceAtn.map((item, key) => (\r\n                            <Table.Row key={key}>\r\n                                <Table.Cell >\r\n                                    <Link\r\n                                        to={`/admin/student_center_service/${item.region_id}?date=${serviceDate}`}\r\n                                        >\r\n                                        <SmLabel \r\n                                            style={{cursor:'pointer'}}\r\n                                            onClick={handleConstituencyClick}\r\n                                        >\r\n                                            {item.region_name}\r\n                                        </SmLabel>\r\n                                    </Link>\r\n                                </Table.Cell>\r\n                                <Table.Cell>{item.con_rep}</Table.Cell>\r\n                                <Table.Cell>{item.centerServiceStats.totalAttendance}</Table.Cell>\r\n                                \r\n                            </Table.Row>\r\n                            )\r\n                        )\r\n                    }\r\n                </Table.Body>\r\n                <Table.Footer>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell colSpan='2'>\r\n                        <Link\r\n                            to={`/admin/all_constituency_monthly_charts`}\r\n                        >\r\n                            <SmLabel \r\n                                style={{cursor:'pointer'}}                \r\n                            >\r\n                            <h4>{\"FLC Anagkazo Bacenta/Center Service Grand Totals\"}</h4>\r\n                            </SmLabel>\r\n                        </Link>\r\n                        </Table.HeaderCell>\r\n                        <Table.HeaderCell >\r\n                            {\r\n                            centerServiceAtn.reduce((prev, currentVal) => \r\n                               prev + currentVal.centerServiceStats.totalAttendance\r\n                            ,0)\r\n                            }\r\n                        </Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Footer>\r\n            </Table>\r\n        </Card>\r\n    );\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    Table,\r\n    Row,\r\n    Button\r\n  } from \"reactstrap\";\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport {BASE_URL} from '../../config/baseUrl';\r\n\r\nexport default function PrayerTopStudents(){\r\n\r\n    const [topPrayingstudents, setTopPrayingStudents] = useState([]);\r\n\r\n    const getTopPrayers = async () => {\r\n        const response = await axios.get(`${BASE_URL}/react_admin/top_praying_students`);\r\n        \r\n        await setTopPrayingStudents(response.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTopPrayers();\r\n    },[]);\r\n\r\n    return (\r\n        <Card className=\"shadow\">\r\n        <CardHeader className=\"border-0\">\r\n          <Row className=\"align-items-center\">\r\n            <div className=\"col\">\r\n              <h3 className=\"mb-0\">Top Praying Students</h3>\r\n            </div>\r\n            <div className=\"col text-right\">\r\n              <Button\r\n                color=\"primary\"\r\n                href=\"#pablo\"\r\n                onClick={e => e.preventDefault()}\r\n                size=\"sm\"\r\n              >\r\n                Show Filter Options\r\n              </Button>\r\n            </div>\r\n          </Row>\r\n        </CardHeader>\r\n        <Table className=\"align-items-center table-flush\" responsive>\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">Index</th>\r\n              <th scope=\"col\">Stuent Name</th>\r\n              <th scope=\"col\">Number of Hours Prayed</th>\r\n              <th scope=\"col\">Class</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n              {\r\n                  topPrayingstudents.map((item, index) => (\r\n                    <tr key={index}>\r\n                        <td scope=\"row\">{item.index_number}</td>\r\n                        <td>\r\n                          <Link \r\n                              to={`/admin/student/${item.id}/profile`}\r\n                          >\r\n                              { item.name }\r\n                          </Link>\r\n                        </td>\r\n                        <td>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <span className=\"mr-2\">{item.prayer_hours} hours</span>\r\n                            </div>\r\n                        </td>\r\n                        <td>{ item.class }</td>\r\n                        <td />\r\n                    </tr>\r\n                  ))\r\n              }\r\n            \r\n          </tbody>\r\n        </Table>\r\n      </Card>\r\n    );\r\n\r\n}","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// node.js library that concatenates classes (strings)\r\nimport classnames from \"classnames\";\r\n// javascipt plugin for creating charts\r\nimport Chart from \"chart.js\";\r\n// react plugin used to create charts\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Progress,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\n// core components\r\nimport {\r\n  chartOptions,\r\n  parseOptions,\r\n  chartExample1,\r\n  chartExample2\r\n} from \"variables/charts.js\";\r\n\r\nimport Header from \"components/Headers/Header.js\";\r\nimport Bussing_V_Center_Attn from \"./dashboard/bussing_v_center_attn\";\r\nimport BussingPieChart from \"./dashboard/bussing_pie_chart\";\r\nimport TopBussingStudent from \"./dashboard/top_bussers\";\r\nimport StudentBussingInfo from \"./dashboard/student_bussing_info\";\r\nimport StudentCenterService from \"./dashboard/student_center_service\";\r\n// import PieChartBussing from \"./dashboard/pie_chart_bussing\";\r\n\r\n// import TopCenterAttnOffering from \"./dashboard/top_centers\";\r\n//import MapMountains from \"./dashboard/map_mountains\";\r\n//import MapAnagkazoCenters from \"./dashboard/map_anagkazo_centers\";\r\n// import Map from \"./dashboard/map_centers\";\r\nimport PrayerTopStudents from \"./dashboard/prayer_top_students\";\r\n// import places from \"../assets/resources/centers_locations.json\";\r\n// import CenterList from \"./dashboard/center_lists\";\r\n\r\n\r\nclass Index extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      activeNav: 1,\r\n      chartExample1Data: \"data1\"\r\n    };\r\n    if (window.Chart) {\r\n      parseOptions(Chart, chartOptions());\r\n    }\r\n  }\r\n  toggleNavs = (e, index) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      activeNav: index,\r\n      chartExample1Data:\r\n        this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\"\r\n    });\r\n  };\r\n\r\n  componentWillUnmount =() => {\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        {/* Page content */}\r\n        <Container className=\"mt--7\" fluid>\r\n          \r\n          <Row>\r\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\r\n              {chartOptions && <Bussing_V_Center_Attn chartOptions />}\r\n            </Col>\r\n            <Col xl=\"4\">\r\n              {chartOptions && <BussingPieChart chartOptions/>}\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-5\">\r\n            <Col className=\"mb-5 mb-xl-0\" >\r\n              <StudentBussingInfo />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-5\">\r\n            <Col className=\"mb-5 mb-xl-0\" >\r\n              <StudentCenterService />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-5\">\r\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\r\n              <TopBussingStudent />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-5\">\r\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\r\n              <PrayerTopStudents />\r\n            </Col>\r\n\r\n            <Col xl=\"4\">\r\n\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;","import React from \"react\";\r\nimport {\r\n    Container,\r\n  } from \"reactstrap\";\r\n\r\nexport default function Header_Plain({title}){\r\n    \r\n\r\n    return (\r\n        \r\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\r\n            <Container fluid>\r\n                <div className=\"header-body\">\r\n                    <h3>{title}</h3>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n\r\n\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport moment from 'moment';\r\n\r\nimport {\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    NavItem,\r\n    NavLink,\r\n    Nav,\r\n    Row\r\n  } from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport axios from 'axios';\r\n\r\nexport default function SSMG_ChartDisplay({ssmg_name, requestUrl, constituency, source}) {\r\n    const [ssmgResult, setServerResponse] = useState({});\r\n    const [chartLabels, setChartLabels] = useState([]);\r\n    const [chartValues, setChartValues] = useState([]);\r\n    const [dateRange, setDateRange] = useState(\"Click to Choose Date Range\");\r\n    const [dateRangeVal, setDateRangeVal] = useState(null);\r\n\r\n    useEffect(() => {\r\n        console.log(\"source: \"+source);\r\n       getSSMG_Info();\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (typeof ssmgResult.data === 'undefined') return;\r\n\r\n        setChartLabels([...Object.keys(ssmgResult.data)]);\r\n        setChartValues([...Object.values(ssmgResult.data)]);\r\n    },[ssmgResult]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (dateRangeVal == null) return;\r\n\r\n        getSSMG_Info();\r\n\r\n    }, [dateRangeVal]);\r\n\r\n    //get ssmg\r\n    const getSSMG_Info = async () => {\r\n        try{   \r\n            const response = await axios.get(`${requestUrl}?ssmg=${ssmg_name.requestParam}&date_range=${dateRangeVal}`);\r\n            setServerResponse(response)\r\n            \r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const handleEvent = (event, picker) => {\r\n        //console.log(picker.startDate);\r\n    }\r\n\r\n    const handleCallback = (start, end, label) => {\r\n        setDateRange(\"From: \"+start.format(\"MMM DD, Y\")+\" to: \"+end.format(\"MMM DD, Y\"));\r\n        setDateRangeVal(start.format(\"Y-MM-DD\")+\" - \"+end.format(\"Y-MM-DD\"));\r\n    }\r\n\r\n    return(\r\n        <Row style={{marginTop: 25}}>\r\n            <Col xs=\"10\">\r\n                <Card className=\"bg-gradient-default shadow\">\r\n                    <CardHeader className=\"bg-transparent\">\r\n                        <Row className=\"align-items-center\">\r\n                            <div className=\"col\">\r\n                                <h4 className=\"text-uppercase text-light ls-1 mb-1\">\r\n                                    SSMG - {(typeof constituency !== 'undefined') ? constituency.region_name:\"\"}\r\n                                </h4>\r\n                                <h2 className=\"text-white mb-0\">{ssmg_name.readableName}</h2>\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <Nav className=\"justify-content-end\" pills>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                        className={classnames(\"py-2 px-3\", {\r\n                                            active: true\r\n                                        })}\r\n                                        >\r\n                                        <DateRangePicker \r\n                                            onEvent={handleEvent} onCallback={handleCallback}\r\n                                            initialSettings={{\r\n                                                ranges: {\r\n                                                  'Last 7 Days': [\r\n                                                    moment().subtract(6, 'days').toDate(),\r\n                                                    moment().toDate(),\r\n                                                  ],\r\n                                                  'Last 30 Days': [\r\n                                                    moment().subtract(29, 'days').toDate(),\r\n                                                    moment().toDate(),\r\n                                                  ],\r\n                                                  'This Month': [\r\n                                                    moment().startOf('month').toDate(),\r\n                                                    moment().endOf('month').toDate(),\r\n                                                  ],\r\n                                                  'Last Month': [\r\n                                                    moment().subtract(1, 'month').startOf('month').toDate(),\r\n                                                    moment().subtract(1, 'month').endOf('month').toDate(),\r\n                                                  ],\r\n                                                  'All Time': [\r\n                                                      moment().subtract(25, 'year').toDate(),\r\n                                                      moment().toDate()\r\n                                                  ]\r\n                                                },\r\n                                              }}\r\n                                        >\r\n                                            <span className=\"d-none d-md-block\">{dateRange}</span>\r\n                                        </DateRangePicker>\r\n                                        <span className=\"d-md-none\">M</span>\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                </Nav>\r\n                            </div>\r\n                        </Row>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <div >\r\n                            <Bar\r\n                                data={{\r\n                                    labels: chartLabels,\r\n                                    datasets: [\r\n                                    {\r\n                                        type: 'bar',\r\n                                        label: ssmg_name.readableName,\r\n                                        borderColor: 'rgb(54, 162, 235)',\r\n                                        backgroundColor: 'rgb(255, 99, 2)',\r\n                                        borderWidth: 2,\r\n                                        data: chartValues,\r\n                                    }]\r\n                                }}\r\n                                getDatasetAtEvent={e => console.log(e)}\r\n                            />\r\n                        </div>\r\n                    </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n    );\r\n}","export const ssmg_array = [{\r\n    requestParam :'SAT',\r\n    readableName: 'Servants Armed And Trained'\r\n}, {\r\n    requestParam:'HearingAndSeeing',\r\n    readableName:'Hearing And Seeing'\r\n},{\r\n    requestParam:'AntiBrutish',\r\n    readableName:'AntiBrutish'\r\n},{\r\n    requestParam:'CentersStarted',\r\n    readableName:'Centers Started'\r\n},\r\n{\r\n    requestParam:'WaterBaptism',\r\n    readableName:'Water Baptisms'\r\n},\r\n{\r\n    requestParam:'HolyGhostBaptism',\r\n    readableName:'Holy Ghost Baptism'\r\n},\r\n{\r\n    requestParam:'BacentasStarted',\r\n    readableName:'Bacentas Started'\r\n},{\r\n    requestParam:'WeeklySaturdayAttendance',\r\n    readableName:'Weekly Saturday Attendance (Bacenta Proliferation)'\r\n},{\r\n    requestParam:'BasontaAttendance&basonta_field=sat_attn_greater_love',\r\n    readableName:'Greater Love Gospel Choir (Fri)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=sun_attn_greater_love',\r\n    readableName:'Greater Love Gospel Choir (Sat)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=sat_attn_dancing_stars',\r\n    readableName:'Dancing Stars (Fri)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=sun_attn_dancing_stars',\r\n    readableName:'Dancing Stars (Sat)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=sat_attn_film_stars',\r\n    readableName:'Film Stars (Fri)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=sun_attn_film_stars',\r\n    readableName:'Film Stars (Sat)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=sat_attn_airport_stars',\r\n    readableName:'Airport Stars (Fri)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=sun_attn_airport_stars',\r\n    readableName:'Airport Stars (Sat)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=sat_attn_ushers',\r\n    readableName:'Ushers (Fri)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=sun_attn_ushers',\r\n    readableName:'Ushers (Sat)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=sat_attn_telepastors',\r\n    readableName:'Telepastors (Fri)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=sun_attn_telepastors',\r\n    readableName:'Telepastors (Sat)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=sat_attn_arrivals',\r\n    readableName:'Arrivals (Fri)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=sun_attn_arrivals',\r\n    readableName:'Arrivals (Sat)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=sat_attn_communion',\r\n    readableName:'Communion (Fri)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=sun_attn_communion',\r\n    readableName:'Communion (Sat)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=sat_attn_hearing_seeing',\r\n    readableName:'Hearing and Seeing (Fri)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=sun_attn_hearing_seeing',\r\n    readableName:'Hearing and Seeing (Sat)'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=no_people_counselled',\r\n    readableName:'Number of people Counselled'\r\n},\r\n{\r\n    requestParam:'BasontaAttendance&basonta_field=no_counsellors',\r\n    readableName:'Number of Counsellors'\r\n}\r\n];","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// react plugin used to create google maps\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker\r\n} from \"react-google-maps\";\r\n\r\n// reactstrap components\r\nimport { Card, Container, Row } from \"reactstrap\";\r\n\r\n// core components\r\nimport Header from \"components/Headers/Header.js\";\r\n// mapTypeId={google.maps.MapTypeId.ROADMAP}\r\nconst MapWrapper = withScriptjs(\r\n  withGoogleMap(props => (\r\n    <GoogleMap\r\n      defaultZoom={12}\r\n      defaultCenter={{ lat: 40.748817, lng: -73.985428 }}\r\n      defaultOptions={{\r\n        scrollwheel: false,\r\n        styles: [\r\n          {\r\n            featureType: \"administrative\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [{ color: \"#444444\" }]\r\n          },\r\n          {\r\n            featureType: \"landscape\",\r\n            elementType: \"all\",\r\n            stylers: [{ color: \"#f2f2f2\" }]\r\n          },\r\n          {\r\n            featureType: \"poi\",\r\n            elementType: \"all\",\r\n            stylers: [{ visibility: \"off\" }]\r\n          },\r\n          {\r\n            featureType: \"road\",\r\n            elementType: \"all\",\r\n            stylers: [{ saturation: -100 }, { lightness: 45 }]\r\n          },\r\n          {\r\n            featureType: \"road.highway\",\r\n            elementType: \"all\",\r\n            stylers: [{ visibility: \"simplified\" }]\r\n          },\r\n          {\r\n            featureType: \"road.arterial\",\r\n            elementType: \"labels.icon\",\r\n            stylers: [{ visibility: \"off\" }]\r\n          },\r\n          {\r\n            featureType: \"transit\",\r\n            elementType: \"all\",\r\n            stylers: [{ visibility: \"off\" }]\r\n          },\r\n          {\r\n            featureType: \"water\",\r\n            elementType: \"all\",\r\n            stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }]\r\n          }\r\n        ]\r\n      }}\r\n    >\r\n      <Marker position={{ lat: 40.748817, lng: -73.985428 }} />\r\n    </GoogleMap>\r\n  ))\r\n);\r\n\r\nclass Maps extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        {/* Page content */}\r\n        <Container className=\"mt--7\" fluid>\r\n          <Row>\r\n            <div className=\"col\">\r\n              <Card className=\"shadow border-0\">\r\n                <MapWrapper\r\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC5UveX2X74k_vJfuCQSvbJwuyIqqDmYGU\"\r\n                  loadingElement={<div style={{ height: `100%` }} />}\r\n                  containerElement={\r\n                    <div\r\n                      style={{ height: `600px` }}\r\n                      className=\"map-canvas\"\r\n                      id=\"map-canvas\"\r\n                    />\r\n                  }\r\n                  mapElement={\r\n                    <div style={{ height: `100%`, borderRadius: \"inherit\" }} />\r\n                  }\r\n                />\r\n              </Card>\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Maps;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nclass Register extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Col lg=\"6\" md=\"8\">\r\n          <Card className=\"bg-secondary shadow border-0\">\r\n            <CardHeader className=\"bg-transparent pb-5\">\r\n              <div className=\"text-muted text-center mt-2 mb-4\">\r\n                <small>Sign up with</small>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  className=\"btn-neutral btn-icon mr-4\"\r\n                  color=\"default\"\r\n                  href=\"#pablo\"\r\n                  onClick={e => e.preventDefault()}\r\n                >\r\n                  <span className=\"btn-inner--icon\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/icons/common/github.svg\")}\r\n                    />\r\n                  </span>\r\n                  <span className=\"btn-inner--text\">Github</span>\r\n                </Button>\r\n                <Button\r\n                  className=\"btn-neutral btn-icon\"\r\n                  color=\"default\"\r\n                  href=\"#pablo\"\r\n                  onClick={e => e.preventDefault()}\r\n                >\r\n                  <span className=\"btn-inner--icon\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/icons/common/google.svg\")}\r\n                    />\r\n                  </span>\r\n                  <span className=\"btn-inner--text\">Google</span>\r\n                </Button>\r\n              </div>\r\n            </CardHeader>\r\n            <CardBody className=\"px-lg-5 py-lg-5\">\r\n              <div className=\"text-center text-muted mb-4\">\r\n                <small>Or sign up with credentials</small>\r\n              </div>\r\n              <Form role=\"form\">\r\n                <FormGroup>\r\n                  <InputGroup className=\"input-group-alternative mb-3\">\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <i className=\"ni ni-hat-3\" />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input placeholder=\"Name\" type=\"text\" />\r\n                  </InputGroup>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <InputGroup className=\"input-group-alternative mb-3\">\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <i className=\"ni ni-email-83\" />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"new-email\"/>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <InputGroup className=\"input-group-alternative\">\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <i className=\"ni ni-lock-circle-open\" />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\"/>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n                <div className=\"text-muted font-italic\">\r\n                  <small>\r\n                    password strength:{\" \"}\r\n                    <span className=\"text-success font-weight-700\">strong</span>\r\n                  </small>\r\n                </div>\r\n                <Row className=\"my-4\">\r\n                  <Col xs=\"12\">\r\n                    <div className=\"custom-control custom-control-alternative custom-checkbox\">\r\n                      <input\r\n                        className=\"custom-control-input\"\r\n                        id=\"customCheckRegister\"\r\n                        type=\"checkbox\"\r\n                      />\r\n                      <label\r\n                        className=\"custom-control-label\"\r\n                        htmlFor=\"customCheckRegister\"\r\n                      >\r\n                        <span className=\"text-muted\">\r\n                          I agree with the{\" \"}\r\n                          <a href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                            Privacy Policy\r\n                          </a>\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"text-center\">\r\n                  <Button className=\"mt-4\" color=\"primary\" type=\"button\">\r\n                    Create account\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nclass Login extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Col lg=\"5\" md=\"7\">\r\n          <Card className=\"bg-secondary shadow border-0\">\r\n            <CardHeader className=\"bg-transparent pb-5\">\r\n              <div className=\"text-muted text-center mt-2 mb-3\">\r\n                <small>Sign in with</small>\r\n              </div>\r\n              <div className=\"btn-wrapper text-center\">\r\n                <Button\r\n                  className=\"btn-neutral btn-icon\"\r\n                  color=\"default\"\r\n                  href=\"#pablo\"\r\n                  onClick={e => e.preventDefault()}\r\n                >\r\n                  <span className=\"btn-inner--icon\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/icons/common/github.svg\")}\r\n                    />\r\n                  </span>\r\n                  <span className=\"btn-inner--text\">Github</span>\r\n                </Button>\r\n                <Button\r\n                  className=\"btn-neutral btn-icon\"\r\n                  color=\"default\"\r\n                  href=\"#pablo\"\r\n                  onClick={e => e.preventDefault()}\r\n                >\r\n                  <span className=\"btn-inner--icon\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/icons/common/google.svg\")}\r\n                    />\r\n                  </span>\r\n                  <span className=\"btn-inner--text\">Google</span>\r\n                </Button>\r\n              </div>\r\n            </CardHeader>\r\n            <CardBody className=\"px-lg-5 py-lg-5\">\r\n              <div className=\"text-center text-muted mb-4\">\r\n                <small>Or sign in with credentials</small>\r\n              </div>\r\n              <Form role=\"form\">\r\n                <FormGroup className=\"mb-3\">\r\n                  <InputGroup className=\"input-group-alternative\">\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <i className=\"ni ni-email-83\" />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"new-email\"/>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <InputGroup className=\"input-group-alternative\">\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <i className=\"ni ni-lock-circle-open\" />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\"/>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n                <div className=\"custom-control custom-control-alternative custom-checkbox\">\r\n                  <input\r\n                    className=\"custom-control-input\"\r\n                    id=\" customCheckLogin\"\r\n                    type=\"checkbox\"\r\n                  />\r\n                  <label\r\n                    className=\"custom-control-label\"\r\n                    htmlFor=\" customCheckLogin\"\r\n                  >\r\n                    <span className=\"text-muted\">Remember me</span>\r\n                  </label>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <Button className=\"my-4\" color=\"primary\" type=\"button\">\r\n                    Sign in\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n          <Row className=\"mt-3\">\r\n            <Col xs=\"6\">\r\n              <a\r\n                className=\"text-light\"\r\n                href=\"#pablo\"\r\n                onClick={e => e.preventDefault()}\r\n              >\r\n                <small>Forgot password?</small>\r\n              </a>\r\n            </Col>\r\n            <Col className=\"text-right\" xs=\"6\">\r\n              <a\r\n                className=\"text-light\"\r\n                href=\"#pablo\"\r\n                onClick={e => e.preventDefault()}\r\n              >\r\n                <small>Create new account</small>\r\n              </a>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  Media,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Progress,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\";\r\n// core components\r\nimport Header from \"components/Headers/Header.js\";\r\n\r\nclass Tables extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        {/* Page content */}\r\n        <Container className=\"mt--7\" fluid>\r\n          {/* Table */}\r\n          <Row>\r\n            <div className=\"col\">\r\n              <Card className=\"shadow\">\r\n                <CardHeader className=\"border-0\">\r\n                  <h3 className=\"mb-0\">Card tables</h3>\r\n                </CardHeader>\r\n                <Table className=\"align-items-center table-flush\" responsive>\r\n                  <thead className=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">Project</th>\r\n                      <th scope=\"col\">Budget</th>\r\n                      <th scope=\"col\">Status</th>\r\n                      <th scope=\"col\">Users</th>\r\n                      <th scope=\"col\">Completion</th>\r\n                      <th scope=\"col\" />\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">\r\n                        <Media className=\"align-items-center\">\r\n                          <a\r\n                            className=\"avatar rounded-circle mr-3\"\r\n                            href=\"#pablo\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              src={require(\"assets/img/theme/bootstrap.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <Media>\r\n                            <span className=\"mb-0 text-sm\">\r\n                              Argon Design System\r\n                            </span>\r\n                          </Media>\r\n                        </Media>\r\n                      </th>\r\n                      <td>$2,500 USD</td>\r\n                      <td>\r\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\r\n                          <i className=\"bg-warning\" />\r\n                          pending\r\n                        </Badge>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"avatar-group\">\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip742438047\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip742438047\"\r\n                          >\r\n                            Ryan Tompson\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip941738690\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip941738690\"\r\n                          >\r\n                            Romina Hadid\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip804044742\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip804044742\"\r\n                          >\r\n                            Alexander Smith\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip996637554\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip996637554\"\r\n                          >\r\n                            Jessica Doe\r\n                          </UncontrolledTooltip>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <span className=\"mr-2\">60%</span>\r\n                          <div>\r\n                            <Progress\r\n                              max=\"100\"\r\n                              value=\"60\"\r\n                              barClassName=\"bg-danger\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"text-right\">\r\n                        <UncontrolledDropdown>\r\n                          <DropdownToggle\r\n                            className=\"btn-icon-only text-light\"\r\n                            href=\"#pablo\"\r\n                            role=\"button\"\r\n                            size=\"sm\"\r\n                            color=\"\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <i className=\"fas fa-ellipsis-v\" />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Another action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Something else here\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">\r\n                        <Media className=\"align-items-center\">\r\n                          <a\r\n                            className=\"avatar rounded-circle mr-3\"\r\n                            href=\"#pablo\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              src={require(\"assets/img/theme/angular.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <Media>\r\n                            <span className=\"mb-0 text-sm\">\r\n                              Angular Now UI Kit PRO\r\n                            </span>\r\n                          </Media>\r\n                        </Media>\r\n                      </th>\r\n                      <td>$1,800 USD</td>\r\n                      <td>\r\n                        <Badge color=\"\" className=\"badge-dot\">\r\n                          <i className=\"bg-success\" />\r\n                          completed\r\n                        </Badge>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"avatar-group\">\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip746418347\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip746418347\"\r\n                          >\r\n                            Ryan Tompson\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip102182364\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip102182364\"\r\n                          >\r\n                            Romina Hadid\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip406489510\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip406489510\"\r\n                          >\r\n                            Alexander Smith\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip476840018\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip476840018\"\r\n                          >\r\n                            Jessica Doe\r\n                          </UncontrolledTooltip>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <span className=\"mr-2\">100%</span>\r\n                          <div>\r\n                            <Progress\r\n                              max=\"100\"\r\n                              value=\"100\"\r\n                              barClassName=\"bg-success\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"text-right\">\r\n                        <UncontrolledDropdown>\r\n                          <DropdownToggle\r\n                            className=\"btn-icon-only text-light\"\r\n                            href=\"#pablo\"\r\n                            role=\"button\"\r\n                            size=\"sm\"\r\n                            color=\"\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <i className=\"fas fa-ellipsis-v\" />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Another action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Something else here\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">\r\n                        <Media className=\"align-items-center\">\r\n                          <a\r\n                            className=\"avatar rounded-circle mr-3\"\r\n                            href=\"#pablo\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              src={require(\"assets/img/theme/sketch.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <Media>\r\n                            <span className=\"mb-0 text-sm\">\r\n                              Black Dashboard\r\n                            </span>\r\n                          </Media>\r\n                        </Media>\r\n                      </th>\r\n                      <td>$3,150 USD</td>\r\n                      <td>\r\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\r\n                          <i className=\"bg-danger\" />\r\n                          delayed\r\n                        </Badge>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"avatar-group\">\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip753056318\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip753056318\"\r\n                          >\r\n                            Ryan Tompson\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip441753266\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip441753266\"\r\n                          >\r\n                            Romina Hadid\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip188462246\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip188462246\"\r\n                          >\r\n                            Alexander Smith\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip621168444\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip621168444\"\r\n                          >\r\n                            Jessica Doe\r\n                          </UncontrolledTooltip>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <span className=\"mr-2\">72%</span>\r\n                          <div>\r\n                            <Progress\r\n                              max=\"100\"\r\n                              value=\"72\"\r\n                              barClassName=\"bg-danger\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"text-right\">\r\n                        <UncontrolledDropdown>\r\n                          <DropdownToggle\r\n                            className=\"btn-icon-only text-light\"\r\n                            href=\"#pablo\"\r\n                            role=\"button\"\r\n                            size=\"sm\"\r\n                            color=\"\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <i className=\"fas fa-ellipsis-v\" />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Another action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Something else here\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">\r\n                        <Media className=\"align-items-center\">\r\n                          <a\r\n                            className=\"avatar rounded-circle mr-3\"\r\n                            href=\"#pablo\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              src={require(\"assets/img/theme/react.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <Media>\r\n                            <span className=\"mb-0 text-sm\">\r\n                              React Material Dashboard\r\n                            </span>\r\n                          </Media>\r\n                        </Media>\r\n                      </th>\r\n                      <td>$4,400 USD</td>\r\n                      <td>\r\n                        <Badge color=\"\" className=\"badge-dot\">\r\n                          <i className=\"bg-info\" />\r\n                          on schedule\r\n                        </Badge>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"avatar-group\">\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip875258217\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip875258217\"\r\n                          >\r\n                            Ryan Tompson\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip834416663\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip834416663\"\r\n                          >\r\n                            Romina Hadid\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip372449339\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip372449339\"\r\n                          >\r\n                            Alexander Smith\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip108714769\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip108714769\"\r\n                          >\r\n                            Jessica Doe\r\n                          </UncontrolledTooltip>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <span className=\"mr-2\">90%</span>\r\n                          <div>\r\n                            <Progress\r\n                              max=\"100\"\r\n                              value=\"90\"\r\n                              barClassName=\"bg-info\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"text-right\">\r\n                        <UncontrolledDropdown>\r\n                          <DropdownToggle\r\n                            className=\"btn-icon-only text-light\"\r\n                            href=\"#pablo\"\r\n                            role=\"button\"\r\n                            size=\"sm\"\r\n                            color=\"\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <i className=\"fas fa-ellipsis-v\" />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Another action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Something else here\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">\r\n                        <Media className=\"align-items-center\">\r\n                          <a\r\n                            className=\"avatar rounded-circle mr-3\"\r\n                            href=\"#pablo\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              src={require(\"assets/img/theme/vue.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <Media>\r\n                            <span className=\"mb-0 text-sm\">\r\n                              Vue Paper UI Kit PRO\r\n                            </span>\r\n                          </Media>\r\n                        </Media>\r\n                      </th>\r\n                      <td>$2,200 USD</td>\r\n                      <td>\r\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\r\n                          <i className=\"bg-success\" />\r\n                          completed\r\n                        </Badge>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"avatar-group\">\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip664029969\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip664029969\"\r\n                          >\r\n                            Ryan Tompson\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip806693074\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip806693074\"\r\n                          >\r\n                            Romina Hadid\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip844096937\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip844096937\"\r\n                          >\r\n                            Alexander Smith\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip757459971\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip757459971\"\r\n                          >\r\n                            Jessica Doe\r\n                          </UncontrolledTooltip>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <span className=\"mr-2\">100%</span>\r\n                          <div>\r\n                            <Progress\r\n                              max=\"100\"\r\n                              value=\"100\"\r\n                              barClassName=\"bg-success\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"text-right\">\r\n                        <UncontrolledDropdown>\r\n                          <DropdownToggle\r\n                            className=\"btn-icon-only text-light\"\r\n                            href=\"#pablo\"\r\n                            role=\"button\"\r\n                            size=\"sm\"\r\n                            color=\"\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <i className=\"fas fa-ellipsis-v\" />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Another action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Something else here\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n                <CardFooter className=\"py-4\">\r\n                  <nav aria-label=\"...\">\r\n                    <Pagination\r\n                      className=\"pagination justify-content-end mb-0\"\r\n                      listClassName=\"justify-content-end mb-0\"\r\n                    >\r\n                      <PaginationItem className=\"disabled\">\r\n                        <PaginationLink\r\n                          href=\"#pablo\"\r\n                          onClick={e => e.preventDefault()}\r\n                          tabIndex=\"-1\"\r\n                        >\r\n                          <i className=\"fas fa-angle-left\" />\r\n                          <span className=\"sr-only\">Previous</span>\r\n                        </PaginationLink>\r\n                      </PaginationItem>\r\n                      <PaginationItem className=\"active\">\r\n                        <PaginationLink\r\n                          href=\"#pablo\"\r\n                          onClick={e => e.preventDefault()}\r\n                        >\r\n                          1\r\n                        </PaginationLink>\r\n                      </PaginationItem>\r\n                      <PaginationItem>\r\n                        <PaginationLink\r\n                          href=\"#pablo\"\r\n                          onClick={e => e.preventDefault()}\r\n                        >\r\n                          2 <span className=\"sr-only\">(current)</span>\r\n                        </PaginationLink>\r\n                      </PaginationItem>\r\n                      <PaginationItem>\r\n                        <PaginationLink\r\n                          href=\"#pablo\"\r\n                          onClick={e => e.preventDefault()}\r\n                        >\r\n                          3\r\n                        </PaginationLink>\r\n                      </PaginationItem>\r\n                      <PaginationItem>\r\n                        <PaginationLink\r\n                          href=\"#pablo\"\r\n                          onClick={e => e.preventDefault()}\r\n                        >\r\n                          <i className=\"fas fa-angle-right\" />\r\n                          <span className=\"sr-only\">Next</span>\r\n                        </PaginationLink>\r\n                      </PaginationItem>\r\n                    </Pagination>\r\n                  </nav>\r\n                </CardFooter>\r\n              </Card>\r\n            </div>\r\n          </Row>\r\n          {/* Dark table */}\r\n          <Row className=\"mt-5\">\r\n            <div className=\"col\">\r\n              <Card className=\"bg-default shadow\">\r\n                <CardHeader className=\"bg-transparent border-0\">\r\n                  <h3 className=\"text-white mb-0\">Card tables</h3>\r\n                </CardHeader>\r\n                <Table\r\n                  className=\"align-items-center table-dark table-flush\"\r\n                  responsive\r\n                >\r\n                  <thead className=\"thead-dark\">\r\n                    <tr>\r\n                      <th scope=\"col\">Project</th>\r\n                      <th scope=\"col\">Budget</th>\r\n                      <th scope=\"col\">Status</th>\r\n                      <th scope=\"col\">Users</th>\r\n                      <th scope=\"col\">Completion</th>\r\n                      <th scope=\"col\" />\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">\r\n                        <Media className=\"align-items-center\">\r\n                          <a\r\n                            className=\"avatar rounded-circle mr-3\"\r\n                            href=\"#pablo\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              src={require(\"assets/img/theme/bootstrap.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <Media>\r\n                            <span className=\"mb-0 text-sm\">\r\n                              Argon Design System\r\n                            </span>\r\n                          </Media>\r\n                        </Media>\r\n                      </th>\r\n                      <td>$2,500 USD</td>\r\n                      <td>\r\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\r\n                          <i className=\"bg-warning\" />\r\n                          pending\r\n                        </Badge>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"avatar-group\">\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip731399078\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip731399078\"\r\n                          >\r\n                            Ryan Tompson\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip491083084\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip491083084\"\r\n                          >\r\n                            Romina Hadid\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip528540780\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip528540780\"\r\n                          >\r\n                            Alexander Smith\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip237898869\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip237898869\"\r\n                          >\r\n                            Jessica Doe\r\n                          </UncontrolledTooltip>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <span className=\"mr-2\">60%</span>\r\n                          <div>\r\n                            <Progress\r\n                              max=\"100\"\r\n                              value=\"60\"\r\n                              barClassName=\"bg-warning\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"text-right\">\r\n                        <UncontrolledDropdown>\r\n                          <DropdownToggle\r\n                            className=\"btn-icon-only text-light\"\r\n                            href=\"#pablo\"\r\n                            role=\"button\"\r\n                            size=\"sm\"\r\n                            color=\"\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <i className=\"fas fa-ellipsis-v\" />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Another action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Something else here\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">\r\n                        <Media className=\"align-items-center\">\r\n                          <a\r\n                            className=\"avatar rounded-circle mr-3\"\r\n                            href=\"#pablo\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              src={require(\"assets/img/theme/angular.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <Media>\r\n                            <span className=\"mb-0 text-sm\">\r\n                              Angular Now UI Kit PRO\r\n                            </span>\r\n                          </Media>\r\n                        </Media>\r\n                      </th>\r\n                      <td>$1,800 USD</td>\r\n                      <td>\r\n                        <Badge color=\"\" className=\"badge-dot\">\r\n                          <i className=\"bg-success\" />\r\n                          completed\r\n                        </Badge>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"avatar-group\">\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip188614932\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip188614932\"\r\n                          >\r\n                            Ryan Tompson\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip66535734\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip66535734\"\r\n                          >\r\n                            Romina Hadid\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip427561578\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip427561578\"\r\n                          >\r\n                            Alexander Smith\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip904098289\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip904098289\"\r\n                          >\r\n                            Jessica Doe\r\n                          </UncontrolledTooltip>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <span className=\"mr-2\">100%</span>\r\n                          <div>\r\n                            <Progress\r\n                              max=\"100\"\r\n                              value=\"100\"\r\n                              barClassName=\"bg-success\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"text-right\">\r\n                        <UncontrolledDropdown>\r\n                          <DropdownToggle\r\n                            className=\"btn-icon-only text-light\"\r\n                            href=\"#pablo\"\r\n                            role=\"button\"\r\n                            size=\"sm\"\r\n                            color=\"\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <i className=\"fas fa-ellipsis-v\" />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Another action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Something else here\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">\r\n                        <Media className=\"align-items-center\">\r\n                          <a\r\n                            className=\"avatar rounded-circle mr-3\"\r\n                            href=\"#pablo\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              src={require(\"assets/img/theme/sketch.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <Media>\r\n                            <span className=\"mb-0 text-sm\">\r\n                              Black Dashboard\r\n                            </span>\r\n                          </Media>\r\n                        </Media>\r\n                      </th>\r\n                      <td>$3,150 USD</td>\r\n                      <td>\r\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\r\n                          <i className=\"bg-danger\" />\r\n                          delayed\r\n                        </Badge>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"avatar-group\">\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip707904950\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip707904950\"\r\n                          >\r\n                            Ryan Tompson\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip353988222\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip353988222\"\r\n                          >\r\n                            Romina Hadid\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip467171202\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip467171202\"\r\n                          >\r\n                            Alexander Smith\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip362118155\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip362118155\"\r\n                          >\r\n                            Jessica Doe\r\n                          </UncontrolledTooltip>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <span className=\"mr-2\">72%</span>\r\n                          <div>\r\n                            <Progress\r\n                              max=\"100\"\r\n                              value=\"72\"\r\n                              barClassName=\"bg-danger\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"text-right\">\r\n                        <UncontrolledDropdown>\r\n                          <DropdownToggle\r\n                            className=\"btn-icon-only text-light\"\r\n                            href=\"#pablo\"\r\n                            role=\"button\"\r\n                            size=\"sm\"\r\n                            color=\"\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <i className=\"fas fa-ellipsis-v\" />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Another action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Something else here\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">\r\n                        <Media className=\"align-items-center\">\r\n                          <a\r\n                            className=\"avatar rounded-circle mr-3\"\r\n                            href=\"#pablo\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              src={require(\"assets/img/theme/react.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <Media>\r\n                            <span className=\"mb-0 text-sm\">\r\n                              React Material Dashboard\r\n                            </span>\r\n                          </Media>\r\n                        </Media>\r\n                      </th>\r\n                      <td>$4,400 USD</td>\r\n                      <td>\r\n                        <Badge color=\"\" className=\"badge-dot\">\r\n                          <i className=\"bg-info\" />\r\n                          on schedule\r\n                        </Badge>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"avatar-group\">\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip226319315\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip226319315\"\r\n                          >\r\n                            Ryan Tompson\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip711961370\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip711961370\"\r\n                          >\r\n                            Romina Hadid\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip216246707\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip216246707\"\r\n                          >\r\n                            Alexander Smith\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip638048561\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip638048561\"\r\n                          >\r\n                            Jessica Doe\r\n                          </UncontrolledTooltip>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <span className=\"mr-2\">90%</span>\r\n                          <div>\r\n                            <Progress\r\n                              max=\"100\"\r\n                              value=\"90\"\r\n                              barClassName=\"bg-info\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"text-right\">\r\n                        <UncontrolledDropdown>\r\n                          <DropdownToggle\r\n                            className=\"btn-icon-only text-light\"\r\n                            href=\"#pablo\"\r\n                            role=\"button\"\r\n                            size=\"sm\"\r\n                            color=\"\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <i className=\"fas fa-ellipsis-v\" />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Another action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Something else here\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">\r\n                        <Media className=\"align-items-center\">\r\n                          <a\r\n                            className=\"avatar rounded-circle mr-3\"\r\n                            href=\"#pablo\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              src={require(\"assets/img/theme/vue.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <Media>\r\n                            <span className=\"mb-0 text-sm\">\r\n                              Vue Paper UI Kit PRO\r\n                            </span>\r\n                          </Media>\r\n                        </Media>\r\n                      </th>\r\n                      <td>$2,200 USD</td>\r\n                      <td>\r\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\r\n                          <i className=\"bg-success\" />\r\n                          completed\r\n                        </Badge>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"avatar-group\">\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip781594051\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip781594051\"\r\n                          >\r\n                            Ryan Tompson\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip840372212\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip840372212\"\r\n                          >\r\n                            Romina Hadid\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip497647175\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip497647175\"\r\n                          >\r\n                            Alexander Smith\r\n                          </UncontrolledTooltip>\r\n                          <a\r\n                            className=\"avatar avatar-sm\"\r\n                            href=\"#pablo\"\r\n                            id=\"tooltip951447946\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <img\r\n                              alt=\"...\"\r\n                              className=\"rounded-circle\"\r\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\r\n                            />\r\n                          </a>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target=\"tooltip951447946\"\r\n                          >\r\n                            Jessica Doe\r\n                          </UncontrolledTooltip>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <span className=\"mr-2\">100%</span>\r\n                          <div>\r\n                            <Progress\r\n                              max=\"100\"\r\n                              value=\"100\"\r\n                              barClassName=\"bg-danger\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"text-right\">\r\n                        <UncontrolledDropdown>\r\n                          <DropdownToggle\r\n                            className=\"btn-icon-only text-light\"\r\n                            href=\"#pablo\"\r\n                            role=\"button\"\r\n                            size=\"sm\"\r\n                            color=\"\"\r\n                            onClick={e => e.preventDefault()}\r\n                          >\r\n                            <i className=\"fas fa-ellipsis-v\" />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Another action\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              href=\"#pablo\"\r\n                              onClick={e => e.preventDefault()}\r\n                            >\r\n                              Something else here\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </Card>\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tables;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// react component that copies the given text inside your clipboard\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\";\r\n// core components\r\nimport Header from \"components/Headers/Header.js\";\r\n\r\nclass Icons extends React.Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        {/* Page content */}\r\n        <Container className=\" mt--7\" fluid>\r\n          {/* Table */}\r\n          <Row>\r\n            <div className=\" col\">\r\n              <Card className=\" shadow\">\r\n                <CardHeader className=\" bg-transparent\">\r\n                  <h3 className=\" mb-0\">Icons</h3>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Row className=\" icon-examples\">\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"active-40\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"active-40\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          id=\"tooltip982655500\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-active-40\" />\r\n                            <span>active-40</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip982655500\"\r\n                      >\r\n                        {this.state.copiedText === \"active-40\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipboard\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"air-baloon\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"air-baloon\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"air-baloon\"\r\n                          id=\"tooltip47550434\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-air-baloon\" />\r\n                            <span>air-baloon</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip47550434\"\r\n                      >\r\n                        {this.state.copiedText === \"air-baloon\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"album-2\"}\r\n                        onCopy={() => this.setState({ copiedText: \"album-2\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"album-2\"\r\n                          id=\"tooltip945481346\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-album-2\" />\r\n                            <span>album-2</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip945481346\"\r\n                      >\r\n                        {this.state.copiedText === \"album-2\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"align-center\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"align-center\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"align-center\"\r\n                          id=\"tooltip662352101\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-align-center\" />\r\n                            <span>align-center</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip662352101\"\r\n                      >\r\n                        {this.state.copiedText === \"align-center\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"left-2\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"align-left-2\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"align-left-2\"\r\n                          id=\"tooltip125499785\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-align-left-2\" />\r\n                            <span>align-left-2</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip125499785\"\r\n                      >\r\n                        {this.state.copiedText === \"align-left-2\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"ambulance\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"ambulance\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"ambulance\"\r\n                          id=\"tooltip382136785\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-ambulance\" />\r\n                            <span>ambulance</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip382136785\"\r\n                      >\r\n                        {this.state.copiedText === \"ambulance\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"asdasdsafsdsad\"}\r\n                        onCopy={() => this.setState({ copiedText: \"app\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"app\"\r\n                          id=\"tooltip3354607\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-app\" />\r\n                            <span>app</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip3354607\"\r\n                      >\r\n                        {this.state.copiedText === \"app\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"archive-2\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"archive-2\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"archive-2\"\r\n                          id=\"tooltip949558633\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-archive-2\" />\r\n                            <span>archive-2</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip949558633\"\r\n                      >\r\n                        {this.state.copiedText === \"archive-2\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"atom\"}\r\n                        onCopy={() => this.setState({ copiedText: \"atom\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"atom\"\r\n                          id=\"tooltip742747005\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-atom\" />\r\n                            <span>atom</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip742747005\"\r\n                      >\r\n                        {this.state.copiedText === \"atom\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"badge\"}\r\n                        onCopy={() => this.setState({ copiedText: \"badge\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"badge\"\r\n                          id=\"tooltip488565068\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-badge\" />\r\n                            <span>badge</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip488565068\"\r\n                      >\r\n                        {this.state.copiedText === \"badge\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"bag-17\"}\r\n                        onCopy={() => this.setState({ copiedText: \"bag-17\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"bag-17\"\r\n                          id=\"tooltip163626790\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-bag-17\" />\r\n                            <span>bag-17</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip163626790\"\r\n                      >\r\n                        {this.state.copiedText === \"bag-17\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"basket\"}\r\n                        onCopy={() => this.setState({ copiedText: \"basket\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"basket\"\r\n                          id=\"tooltip387253692\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-basket\" />\r\n                            <span>basket</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip387253692\"\r\n                      >\r\n                        {this.state.copiedText === \"basket\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"bell-55\"}\r\n                        onCopy={() => this.setState({ copiedText: \"bell-55\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"bell-55\"\r\n                          id=\"tooltip126752761\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-bell-55\" />\r\n                            <span>bell-55</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip126752761\"\r\n                      >\r\n                        {this.state.copiedText === \"bell-55\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"bold-down\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"bold-down\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"bold-down\"\r\n                          id=\"tooltip819281856\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-bold-down\" />\r\n                            <span>bold-down</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip819281856\"\r\n                      >\r\n                        {this.state.copiedText === \"bold-down\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"bold-left\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"bold-left\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"bold-left\"\r\n                          id=\"tooltip881699027\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-bold-left\" />\r\n                            <span>bold-left</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip881699027\"\r\n                      >\r\n                        {this.state.copiedText === \"bold-left\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"bold-right\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"bold-right\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"bold-right\"\r\n                          id=\"tooltip208507461\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-bold-right\" />\r\n                            <span>bold-right</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip208507461\"\r\n                      >\r\n                        {this.state.copiedText === \"bold-right\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"bold-up\"}\r\n                        onCopy={() => this.setState({ copiedText: \"bold-up\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"bold-up\"\r\n                          id=\"tooltip105289310\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-bold-up\" />\r\n                            <span>bold-up</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip105289310\"\r\n                      >\r\n                        {this.state.copiedText === \"bold-up\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"bold\"}\r\n                        onCopy={() => this.setState({ copiedText: \"bold\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"bold\"\r\n                          id=\"tooltip832362262\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-bold\" />\r\n                            <span>bold</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip832362262\"\r\n                      >\r\n                        {this.state.copiedText === \"bold\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"book-bookmark\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"book-bookmark\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"book-bookmark\"\r\n                          id=\"tooltip606002875\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-book-bookmark\" />\r\n                            <span>book-bookmark</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip606002875\"\r\n                      >\r\n                        {this.state.copiedText === \"book-bookmark\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"books\"}\r\n                        onCopy={() => this.setState({ copiedText: \"books\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"books\"\r\n                          id=\"tooltip484529730\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-books\" />\r\n                            <span>books</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip484529730\"\r\n                      >\r\n                        {this.state.copiedText === \"books\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"box-2\"}\r\n                        onCopy={() => this.setState({ copiedText: \"box-2\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"box-2\"\r\n                          id=\"tooltip509205883\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-box-2\" />\r\n                            <span>box-2</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip509205883\"\r\n                      >\r\n                        {this.state.copiedText === \"box-2\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"briefcase-24\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"briefcase-24\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"briefcase-24\"\r\n                          id=\"tooltip147778056\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-briefcase-24\" />\r\n                            <span>briefcase-24</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip147778056\"\r\n                      >\r\n                        {this.state.copiedText === \"briefcase-24\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"building\"}\r\n                        onCopy={() => this.setState({ copiedText: \"building\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"building\"\r\n                          id=\"tooltip157423388\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-building\" />\r\n                            <span>building</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip157423388\"\r\n                      >\r\n                        {this.state.copiedText === \"building\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"bulb-61\"}\r\n                        onCopy={() => this.setState({ copiedText: \"bulb-61\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"bulb-61\"\r\n                          id=\"tooltip126210465\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-bulb-61\" />\r\n                            <span>bulb-61</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip126210465\"\r\n                      >\r\n                        {this.state.copiedText === \"bulb-61\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"list-67\"}\r\n                        onCopy={() => this.setState({ copiedText: \"list-67\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"bullet-list-67\"\r\n                          id=\"tooltip672244852\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-bullet-list-67\" />\r\n                            <span>bullet-list-67</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip672244852\"\r\n                      >\r\n                        {this.state.copiedText === \"list-67\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"bus-front-12\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"bus-front-12\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"bus-front-12\"\r\n                          id=\"tooltip17383590\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-bus-front-12\" />\r\n                            <span>bus-front-12</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip17383590\"\r\n                      >\r\n                        {this.state.copiedText === \"bus-front-12\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"button-pause\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"button-pause\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"button-pause\"\r\n                          id=\"tooltip721295259\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-button-pause\" />\r\n                            <span>button-pause</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip721295259\"\r\n                      >\r\n                        {this.state.copiedText === \"button-pause\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"button-play\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"button-play\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"button-play\"\r\n                          id=\"tooltip397403700\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-button-play\" />\r\n                            <span>button-play</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip397403700\"\r\n                      >\r\n                        {this.state.copiedText === \"button-play\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"button-power\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"button-power\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"button-power\"\r\n                          id=\"tooltip286478188\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-button-power\" />\r\n                            <span>button-power</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip286478188\"\r\n                      >\r\n                        {this.state.copiedText === \"button-power\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"calendar-grid-58\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"calendar-grid-58\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"calendar-grid-58\"\r\n                          id=\"tooltip332635506\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-calendar-grid-58\" />\r\n                            <span>calendar-grid-58</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip332635506\"\r\n                      >\r\n                        {this.state.copiedText === \"calendar-grid-58\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"camera-compact\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"camera-compact\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"camera-compact\"\r\n                          id=\"tooltip872817724\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-camera-compact\" />\r\n                            <span>camera-compact</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip872817724\"\r\n                      >\r\n                        {this.state.copiedText === \"camera-compact\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"caps-small\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"caps-small\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"caps-small\"\r\n                          id=\"tooltip108271146\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-caps-small\" />\r\n                            <span>caps-small</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip108271146\"\r\n                      >\r\n                        {this.state.copiedText === \"caps-small\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"cart\"}\r\n                        onCopy={() => this.setState({ copiedText: \"cart\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"cart\"\r\n                          id=\"tooltip315375170\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-cart\" />\r\n                            <span>cart</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip315375170\"\r\n                      >\r\n                        {this.state.copiedText === \"cart\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"chart-bar-32\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"chart-bar-32\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"chart-bar-32\"\r\n                          id=\"tooltip906739900\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-chart-bar-32\" />\r\n                            <span>chart-bar-32</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip906739900\"\r\n                      >\r\n                        {this.state.copiedText === \"chart-bar-32\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"chart-pie-35\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"chart-pie-35\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"chart-pie-35\"\r\n                          id=\"tooltip211198935\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-chart-pie-35\" />\r\n                            <span>chart-pie-35</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip211198935\"\r\n                      >\r\n                        {this.state.copiedText === \"chart-pie-35\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"chat-round\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"chat-round\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"chat-round\"\r\n                          id=\"tooltip452799920\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-chat-round\" />\r\n                            <span>chat-round</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip452799920\"\r\n                      >\r\n                        {this.state.copiedText === \"chat-round\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"check-bold\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"check-bold\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"check-bold\"\r\n                          id=\"tooltip204269497\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-check-bold\" />\r\n                            <span>check-bold</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip204269497\"\r\n                      >\r\n                        {this.state.copiedText === \"check-bold\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"circle-08\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"circle-08\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"circle-08\"\r\n                          id=\"tooltip63796078\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-circle-08\" />\r\n                            <span>circle-08</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip63796078\"\r\n                      >\r\n                        {this.state.copiedText === \"circle-08\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"cloud-download-95\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"cloud-download-95\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"cloud-download-95\"\r\n                          id=\"tooltip171823822\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-cloud-download-95\" />\r\n                            <span>cloud-download-95</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip171823822\"\r\n                      >\r\n                        {this.state.copiedText === \"cloud-download-95\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"cloud-upload-96\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"cloud-upload-96\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"cloud-upload-96\"\r\n                          id=\"tooltip603641354\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-cloud-upload-96\" />\r\n                            <span>cloud-upload-96</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip603641354\"\r\n                      >\r\n                        {this.state.copiedText === \"cloud-upload-96\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"compass-04\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"compass-04\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"compass-04\"\r\n                          id=\"tooltip138747611\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-compass-04\" />\r\n                            <span>compass-04</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip138747611\"\r\n                      >\r\n                        {this.state.copiedText === \"compass-04\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"controller\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"controller\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"controller\"\r\n                          id=\"tooltip477306514\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-controller\" />\r\n                            <span>controller</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip477306514\"\r\n                      >\r\n                        {this.state.copiedText === \"controller\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"credit-card\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"credit-card\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"credit-card\"\r\n                          id=\"tooltip672313572\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-credit-card\" />\r\n                            <span>credit-card</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip672313572\"\r\n                      >\r\n                        {this.state.copiedText === \"credit-card\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"curved-next\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"curved-next\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"curved-next\"\r\n                          id=\"tooltip228405488\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-curved-next\" />\r\n                            <span>curved-next</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip228405488\"\r\n                      >\r\n                        {this.state.copiedText === \"curved-next\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"delivery-fast\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"delivery-fast\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"delivery-fast\"\r\n                          id=\"tooltip405559\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-delivery-fast\" />\r\n                            <span>delivery-fast</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip405559\"\r\n                      >\r\n                        {this.state.copiedText === \"delivery-fast\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"diamond\"}\r\n                        onCopy={() => this.setState({ copiedText: \"diamond\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"diamond\"\r\n                          id=\"tooltip842334307\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-diamond\" />\r\n                            <span>diamond</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip842334307\"\r\n                      >\r\n                        {this.state.copiedText === \"diamond\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"email-83\"}\r\n                        onCopy={() => this.setState({ copiedText: \"email-83\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"email-83\"\r\n                          id=\"tooltip695661232\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-email-83\" />\r\n                            <span>email-83</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip695661232\"\r\n                      >\r\n                        {this.state.copiedText === \"email-83\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"fat-add\"}\r\n                        onCopy={() => this.setState({ copiedText: \"fat-add\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"fat-add\"\r\n                          id=\"tooltip112280005\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-fat-add\" />\r\n                            <span>fat-add</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip112280005\"\r\n                      >\r\n                        {this.state.copiedText === \"fat-add\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"fat-delete\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"fat-delete\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"fat-delete\"\r\n                          id=\"tooltip361927124\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-fat-delete\" />\r\n                            <span>fat-delete</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip361927124\"\r\n                      >\r\n                        {this.state.copiedText === \"fat-delete\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"fat-remove\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"fat-remove\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"fat-remove\"\r\n                          id=\"tooltip451275187\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-fat-remove\" />\r\n                            <span>fat-remove</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip451275187\"\r\n                      >\r\n                        {this.state.copiedText === \"fat-remove\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"favourite-28\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"favourite-28\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"favourite-28\"\r\n                          id=\"tooltip893689512\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-favourite-28\" />\r\n                            <span>favourite-28</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip893689512\"\r\n                      >\r\n                        {this.state.copiedText === \"favourite-28\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"folder-17\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"folder-17\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"folder-17\"\r\n                          id=\"tooltip988458715\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-folder-17\" />\r\n                            <span>folder-17</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip988458715\"\r\n                      >\r\n                        {this.state.copiedText === \"folder-17\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"glasses-2\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"glasses-2\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"glasses-2\"\r\n                          id=\"tooltip576477258\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-glasses-2\" />\r\n                            <span>glasses-2</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip576477258\"\r\n                      >\r\n                        {this.state.copiedText === \"glasses-2\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"hat-3\"}\r\n                        onCopy={() => this.setState({ copiedText: \"hat-3\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"hat-3\"\r\n                          id=\"tooltip977228923\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-hat-3\" />\r\n                            <span>hat-3</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip977228923\"\r\n                      >\r\n                        {this.state.copiedText === \"hat-3\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"headphones\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"headphones\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"headphones\"\r\n                          id=\"tooltip711983709\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-headphones\" />\r\n                            <span>headphones</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip711983709\"\r\n                      >\r\n                        {this.state.copiedText === \"headphones\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"html5\"}\r\n                        onCopy={() => this.setState({ copiedText: \"html5\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"html5\"\r\n                          id=\"tooltip346497134\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-html5\" />\r\n                            <span>html5</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip346497134\"\r\n                      >\r\n                        {this.state.copiedText === \"html5\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"istanbul\"}\r\n                        onCopy={() => this.setState({ copiedText: \"istanbul\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"istanbul\"\r\n                          id=\"tooltip344591402\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-istanbul\" />\r\n                            <span>istanbul</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip344591402\"\r\n                      >\r\n                        {this.state.copiedText === \"istanbul\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"circle-08\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"circle-08\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"circle-08\"\r\n                          id=\"tooltip815029398\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-circle-08\" />\r\n                            <span>circle-08</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip815029398\"\r\n                      >\r\n                        {this.state.copiedText === \"circle-08\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"key-25\"}\r\n                        onCopy={() => this.setState({ copiedText: \"key-25\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"key-25\"\r\n                          id=\"tooltip580511416\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-key-25\" />\r\n                            <span>key-25</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip580511416\"\r\n                      >\r\n                        {this.state.copiedText === \"key-25\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"laptop\"}\r\n                        onCopy={() => this.setState({ copiedText: \"laptop\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"laptop\"\r\n                          id=\"tooltip455996160\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-laptop\" />\r\n                            <span>laptop</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip455996160\"\r\n                      >\r\n                        {this.state.copiedText === \"laptop\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"like-2\"}\r\n                        onCopy={() => this.setState({ copiedText: \"like-2\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"like-2\"\r\n                          id=\"tooltip928932853\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-like-2\" />\r\n                            <span>like-2</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip928932853\"\r\n                      >\r\n                        {this.state.copiedText === \"like-2\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"lock-circle-open\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"lock-circle-open\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"lock-circle-open\"\r\n                          id=\"tooltip634042199\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-lock-circle-open\" />\r\n                            <span>lock-circle-open</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip634042199\"\r\n                      >\r\n                        {this.state.copiedText === \"lock-circle-open\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"map-big\"}\r\n                        onCopy={() => this.setState({ copiedText: \"map-big\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"map-big\"\r\n                          id=\"tooltip615611081\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-map-big\" />\r\n                            <span>map-big</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip615611081\"\r\n                      >\r\n                        {this.state.copiedText === \"map-big\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"mobile-button\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"mobile-button\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"mobile-button\"\r\n                          id=\"tooltip426682279\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-mobile-button\" />\r\n                            <span>mobile-button</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip426682279\"\r\n                      >\r\n                        {this.state.copiedText === \"mobile-button\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"money-coins\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"money-coins\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"money-coins\"\r\n                          id=\"tooltip198953665\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-money-coins\" />\r\n                            <span>money-coins</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip198953665\"\r\n                      >\r\n                        {this.state.copiedText === \"money-coins\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"note-03\"}\r\n                        onCopy={() => this.setState({ copiedText: \"note-03\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"note-03\"\r\n                          id=\"tooltip909975995\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-note-03\" />\r\n                            <span>note-03</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip909975995\"\r\n                      >\r\n                        {this.state.copiedText === \"note-03\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"notification-70\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"notification-70\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"notification-70\"\r\n                          id=\"tooltip942089221\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-notification-70\" />\r\n                            <span>notification-70</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip942089221\"\r\n                      >\r\n                        {this.state.copiedText === \"notification-70\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"palette\"}\r\n                        onCopy={() => this.setState({ copiedText: \"palette\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"palette\"\r\n                          id=\"tooltip721048582\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-palette\" />\r\n                            <span>palette</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip721048582\"\r\n                      >\r\n                        {this.state.copiedText === \"palette\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"paper-diploma\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"paper-diploma\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"paper-diploma\"\r\n                          id=\"tooltip875782946\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-paper-diploma\" />\r\n                            <span>paper-diploma</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip875782946\"\r\n                      >\r\n                        {this.state.copiedText === \"paper-diploma\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"pin-3\"}\r\n                        onCopy={() => this.setState({ copiedText: \"pin-3\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"pin-3\"\r\n                          id=\"tooltip945087492\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-pin-3\" />\r\n                            <span>pin-3</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip945087492\"\r\n                      >\r\n                        {this.state.copiedText === \"pin-3\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"planet\"}\r\n                        onCopy={() => this.setState({ copiedText: \"planet\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"planet\"\r\n                          id=\"tooltip482139663\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-planet\" />\r\n                            <span>planet</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip482139663\"\r\n                      >\r\n                        {this.state.copiedText === \"planet\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"ruler-pencil\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"ruler-pencil\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"ruler-pencil\"\r\n                          id=\"tooltip693938896\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-ruler-pencil\" />\r\n                            <span>ruler-pencil</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip693938896\"\r\n                      >\r\n                        {this.state.copiedText === \"ruler-pencil\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"satisfied\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"satisfied\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"satisfied\"\r\n                          id=\"tooltip634575265\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-satisfied\" />\r\n                            <span>satisfied</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip634575265\"\r\n                      >\r\n                        {this.state.copiedText === \"satisfied\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"scissors\"}\r\n                        onCopy={() => this.setState({ copiedText: \"scissors\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"scissors\"\r\n                          id=\"tooltip688473648\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-scissors\" />\r\n                            <span>scissors</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip688473648\"\r\n                      >\r\n                        {this.state.copiedText === \"scissors\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"send\"}\r\n                        onCopy={() => this.setState({ copiedText: \"send\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"send\"\r\n                          id=\"tooltip161268791\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-send\" />\r\n                            <span>send</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip161268791\"\r\n                      >\r\n                        {this.state.copiedText === \"send\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"settings-gear-65\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"settings-gear-65\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"settings-gear-65\"\r\n                          id=\"tooltip487959296\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-settings-gear-65\" />\r\n                            <span>settings-gear-65</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip487959296\"\r\n                      >\r\n                        {this.state.copiedText === \"settings-gear-65\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"settings\"}\r\n                        onCopy={() => this.setState({ copiedText: \"settings\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"settings\"\r\n                          id=\"tooltip156598208\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-settings\" />\r\n                            <span>settings</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip156598208\"\r\n                      >\r\n                        {this.state.copiedText === \"settings\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"single-02\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"single-02\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"single-02\"\r\n                          id=\"tooltip487356467\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-single-02\" />\r\n                            <span>single-02</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip487356467\"\r\n                      >\r\n                        {this.state.copiedText === \"single-02\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"single-copy-04\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"single-copy-04\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"single-copy-04\"\r\n                          id=\"tooltip340498904\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-single-copy-04\" />\r\n                            <span>single-copy-04</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip340498904\"\r\n                      >\r\n                        {this.state.copiedText === \"single-copy-04\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"sound-wave\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"sound-wave\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"sound-wave\"\r\n                          id=\"tooltip289156059\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-sound-wave\" />\r\n                            <span>sound-wave</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip289156059\"\r\n                      >\r\n                        {this.state.copiedText === \"sound-wave\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"spaceship\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"spaceship\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"spaceship\"\r\n                          id=\"tooltip603604642\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-spaceship\" />\r\n                            <span>spaceship</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip603604642\"\r\n                      >\r\n                        {this.state.copiedText === \"spaceship\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"square-pin\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"square-pin\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"square-pin\"\r\n                          id=\"tooltip153036405\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-square-pin\" />\r\n                            <span>square-pin</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip153036405\"\r\n                      >\r\n                        {this.state.copiedText === \"square-pin\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"support-16\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"support-16\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"support-16\"\r\n                          id=\"tooltip906422211\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-support-16\" />\r\n                            <span>support-16</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip906422211\"\r\n                      >\r\n                        {this.state.copiedText === \"support-16\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"tablet-button\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"tablet-button\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"tablet-button\"\r\n                          id=\"tooltip517579618\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-tablet-button\" />\r\n                            <span>tablet-button</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip517579618\"\r\n                      >\r\n                        {this.state.copiedText === \"tablet-button\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"tag\"}\r\n                        onCopy={() => this.setState({ copiedText: \"tag\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"tag\"\r\n                          id=\"tooltip297195808\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-tag\" />\r\n                            <span>tag</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip297195808\"\r\n                      >\r\n                        {this.state.copiedText === \"tag\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"tie-bow\"}\r\n                        onCopy={() => this.setState({ copiedText: \"tie-bow\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"tie-bow\"\r\n                          id=\"tooltip793084796\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-tie-bow\" />\r\n                            <span>tie-bow</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip793084796\"\r\n                      >\r\n                        {this.state.copiedText === \"tie-bow\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"time-alarm\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"time-alarm\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"time-alarm\"\r\n                          id=\"tooltip258891035\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-time-alarm\" />\r\n                            <span>time-alarm</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip258891035\"\r\n                      >\r\n                        {this.state.copiedText === \"time-alarm\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"trophy\"}\r\n                        onCopy={() => this.setState({ copiedText: \"trophy\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"trophy\"\r\n                          id=\"tooltip881235890\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-trophy\" />\r\n                            <span>trophy</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip881235890\"\r\n                      >\r\n                        {this.state.copiedText === \"trophy\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"tv-2\"}\r\n                        onCopy={() => this.setState({ copiedText: \"tv-2\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"tv-2\"\r\n                          id=\"tooltip330279137\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-tv-2\" />\r\n                            <span>tv-2</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip330279137\"\r\n                      >\r\n                        {this.state.copiedText === \"tv-2\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"umbrella-13\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"umbrella-13\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"umbrella-13\"\r\n                          id=\"tooltip412313570\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-umbrella-13\" />\r\n                            <span>umbrella-13</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip412313570\"\r\n                      >\r\n                        {this.state.copiedText === \"umbrella-13\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"user-run\"}\r\n                        onCopy={() => this.setState({ copiedText: \"user-run\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"user-run\"\r\n                          id=\"tooltip176201858\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-user-run\" />\r\n                            <span>user-run</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip176201858\"\r\n                      >\r\n                        {this.state.copiedText === \"user-run\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"vector\"}\r\n                        onCopy={() => this.setState({ copiedText: \"vector\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"vector\"\r\n                          id=\"tooltip71164138\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-vector\" />\r\n                            <span>vector</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip71164138\"\r\n                      >\r\n                        {this.state.copiedText === \"vector\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"watch-time\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"watch-time\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"watch-time\"\r\n                          id=\"tooltip495578192\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-watch-time\" />\r\n                            <span>watch-time</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip495578192\"\r\n                      >\r\n                        {this.state.copiedText === \"watch-time\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"world\"}\r\n                        onCopy={() => this.setState({ copiedText: \"world\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"world\"\r\n                          id=\"tooltip604848245\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-world\" />\r\n                            <span>world</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip604848245\"\r\n                      >\r\n                        {this.state.copiedText === \"world\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"zoom-split-in\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"zoom-split-in\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"zoom-split-in\"\r\n                          id=\"tooltip916423293\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-zoom-split-in\" />\r\n                            <span>zoom-split-in</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip916423293\"\r\n                      >\r\n                        {this.state.copiedText === \"zoom-split-in\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"collection\"}\r\n                        onCopy={() =>\r\n                          this.setState({ copiedText: \"collection\" })\r\n                        }\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"collection\"\r\n                          id=\"tooltip142934658\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-collection\" />\r\n                            <span>collection</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip142934658\"\r\n                      >\r\n                        {this.state.copiedText === \"collection\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"image\"}\r\n                        onCopy={() => this.setState({ copiedText: \"image\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"image\"\r\n                          id=\"tooltip842947283\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-image\" />\r\n                            <span>image</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip842947283\"\r\n                      >\r\n                        {this.state.copiedText === \"image\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"shop\"}\r\n                        onCopy={() => this.setState({ copiedText: \"shop\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"shop\"\r\n                          id=\"tooltip531866818\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-shop\" />\r\n                            <span>shop</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip531866818\"\r\n                      >\r\n                        {this.state.copiedText === \"shop\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"ungroup\"}\r\n                        onCopy={() => this.setState({ copiedText: \"ungroup\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"ungroup\"\r\n                          id=\"tooltip470734151\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-ungroup\" />\r\n                            <span>ungroup</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip470734151\"\r\n                      >\r\n                        {this.state.copiedText === \"ungroup\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"world-2\"}\r\n                        onCopy={() => this.setState({ copiedText: \"world-2\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"world-2\"\r\n                          id=\"tooltip932383030\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-world-2\" />\r\n                            <span>world-2</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip932383030\"\r\n                      >\r\n                        {this.state.copiedText === \"world-2\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"6\">\r\n                      <CopyToClipboard\r\n                        text={\"ui-04\"}\r\n                        onCopy={() => this.setState({ copiedText: \"ui-04\" })}\r\n                      >\r\n                        <button\r\n                          className=\" btn-icon-clipboard\"\r\n                          data-clipboard-text=\"ui-04\"\r\n                          id=\"tooltip9332484\"\r\n                          type=\"button\"\r\n                        >\r\n                          <div>\r\n                            <i className=\" ni ni-ui-04\" />\r\n                            <span>ui-04</span>\r\n                          </div>\r\n                        </button>\r\n                      </CopyToClipboard>\r\n                      <UncontrolledTooltip\r\n                        delay={0}\r\n                        trigger=\"hover focus\"\r\n                        target=\"tooltip9332484\"\r\n                      >\r\n                        {this.state.copiedText === \"ui-04\"\r\n                          ? \"Copied\"\r\n                          : \"Copy To Clipbord\"}\r\n                      </UncontrolledTooltip>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Icons;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Label\r\n  } from \"reactstrap\";\r\nimport axios from 'axios';\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\nimport { Dropdown } from 'semantic-ui-react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\n\r\n\r\n\r\nexport default function StudentFilterBox({all_students, setFilteredStudents, setCurrentHeading, filterParams}){\r\n  \r\n  const filterOptions = [\r\n        {\r\n            key: 'name',\r\n            text: 'Name',\r\n            value: 'name'\r\n          },\r\n          {\r\n            key: 'class',\r\n            text: 'Class',\r\n            value: 'class'\r\n          },\r\n          {\r\n            key: 'country',\r\n            text: 'Country',\r\n            value: 'country'\r\n          },\r\n          {\r\n            key: 'ud_non_ud',\r\n            text: 'UD/NON-UD',\r\n            value: 'ud_non_ud'\r\n          },\r\n          {\r\n            key: 'constituency',\r\n            text: 'Constituency',\r\n            value: 'constituency'\r\n          },\r\n          {\r\n            key: 'center',\r\n            text: 'Center',\r\n            value: 'center'\r\n          },\r\n          {\r\n            key: 'role',\r\n            text: 'Role',\r\n            value: 'role'\r\n          }\r\n    ];\r\n    const [filterOption, setFilterOption] = useState(\"\");\r\n    const [selectedFilterValue, setSelectedFilterValue] = useState(\"\");\r\n    const [filterText, setFilterText] = useState(\"\");\r\n    const [currentPlaceholder, setPlaceholder] = useState(\"\");\r\n    \r\n    const [filterValues, setFilterValues] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n      \r\n      if (filterParams != null){\r\n        setFilterOption(filterParams.filter_option);\r\n        loadRoles();\r\n        setCurrentHeading(\"Students Filtering: \"+ (filterParams?.filter_option?.toUpperCase()||\"None\")); \r\n        setPlaceholder(\"Filter By Student Roles\");\r\n      }\r\n      \r\n    },[filterParams]);\r\n\r\n    const filterValueCallbackFn = () => {\r\n      if (filterParams != null){\r\n          console.log(filterParams.filter_value);\r\n          setSelectedFilterValue(filterParams.filter_value);\r\n          loadFilteredStudents({value: filterParams.filter_value});\r\n      }\r\n    }\r\n\r\n    const selectFilterOption = (selectedOption) => {\r\n        \r\n        setFilterOption(selectedOption.value);\r\n        setCurrentHeading(\"Students Filtering By \"+selectedOption.value.toUpperCase());\r\n\r\n        switch(selectedOption.value){\r\n        case 'name':  \r\n            setPlaceholder(\"Search for Name\");\r\n            setFilterValues([\r\n                    {key: 0, value: 'all', text: 'All'}, \r\n                    ...all_students.map((student) => {\r\n                        return {\r\n                                key: student.id, \r\n                                value: student.index_number, \r\n                                text: student.name\r\n                            }\r\n                        })\r\n                ]);\r\n        break;\r\n    \r\n        case 'class':\r\n            setPlaceholder(\"Search for Class\");\r\n            let myClasses = all_students.map(student => student.class)\r\n                            .filter((value, index, self) => self.indexOf(value) === index);\r\n            \r\n            setFilterValues([\r\n                {key: 0, value: 'all', text: 'All Classes'},\r\n                ...myClasses.map((item, index) => {\r\n                    return {\r\n                        key: (index + 1),\r\n                        value: item,\r\n                        text: item\r\n                    }\r\n                })\r\n            ]);\r\n\r\n        \r\n        break;\r\n    \r\n        case 'country':\r\n          setPlaceholder(\"Search for Country\");\r\n          let myCountry = all_students.map(student => student.country)\r\n          .filter((value, index, self) => self.indexOf(value) === index);\r\n\r\n          setFilterValues([\r\n            {key: 0, value: 'all', text: 'All Country'},\r\n            ...myCountry.map((item, index) => {\r\n              return {\r\n                  key: (index + 1),\r\n                  value: item,\r\n                  text: item\r\n              }\r\n            })\r\n          ]);\r\n        break;\r\n    \r\n        case 'ud_non_ud':\r\n          setPlaceholder(\"Filter By UD or Non UD\");\r\n          setFilterValues([{\r\n            key: 1,\r\n            value: 'all',\r\n            text: 'All'\r\n          },\r\n          {\r\n            key: 2,\r\n            value: 'Not Set',\r\n            text: 'Not Set'\r\n          },{\r\n            key: 3,\r\n            value: 'ud',\r\n            text: 'UD'\r\n          }, \r\n          {\r\n            key: 4,\r\n            value: 'non_ud',\r\n            text: 'NON-UD'\r\n          },\r\n          {\r\n            key: 5,\r\n            value: 'firstlove',\r\n            text: 'Firstlove'\r\n          }]);\r\n        break;\r\n      \r\n        case 'constituency':\r\n        \r\n          setPlaceholder(\"Search for Constituency\");\r\n          loadCommunities();\r\n        \r\n        break;\r\n    \r\n        case 'center':\r\n          setPlaceholder(\"Filter By Center\");\r\n          loadCenters();\r\n        break;\r\n    \r\n        case 'role':\r\n          setPlaceholder(\"Filter By Student Roles\");\r\n          loadRoles()  ;\r\n        break;\r\n      }\r\n    }\r\n\r\n      const loadCommunities = () => {\r\n        setLoading(true);\r\n        return axios.get(`${BASE_URL}/admin_app/communities`)\r\n                    .then((response) => \r\n                    {\r\n                      setFilterValues([{key: 0, value: 'all', text: 'All Constituency'},\r\n                        ...response.data.map((community) => {\r\n                          return {\r\n                            key: community.id,\r\n                            value: community.id,\r\n                            text: community.region_name\r\n                          }\r\n                      } \r\n                  )]\r\n                );\r\n                setLoading(false);\r\n              });\r\n    }\r\n\r\n    const loadCenters = () => {\r\n      setLoading(true);\r\n      return axios.get(`${BASE_URL}/admin_app/centers`)\r\n                    .then((response) => \r\n                    {\r\n                      setFilterValues([{key: 0, value: 'all', text: 'All Centers'},\r\n                      ...response.data.map((center) => {\r\n                          return {\r\n                            key: center.id,\r\n                            value: center.center_name,\r\n                            text: center.center_name\r\n                          }\r\n                      })]);\r\n                      setLoading(false);\r\n                    });\r\n      \r\n    }\r\n\r\n    const loadRoles = () => {\r\n      setLoading(true);\r\n      return axios.get(`${BASE_URL}/react_admin/admin_app/pastoral_roles`)\r\n                .then((response) => {\r\n                  setFilterValues([{key: 0, value: 'all', text: 'All Roles'},\r\n                  ...response.data.map((role) => {\r\n                    return {\r\n                      key: role.id,\r\n                      value: role.id,\r\n                      text: role.role\r\n                    }\r\n                })]);\r\n                setLoading(false);\r\n                filterValueCallbackFn()\r\n                })\r\n    }\r\n\r\n      const loadFilteredStudents = (filterValue) => {\r\n        \r\n        setFilterText(filterValue.text);\r\n        setSelectedFilterValue(filterValue.value);\r\n\r\n        switch(filterOption){\r\n    \r\n          case 'name':\r\n            if (filterValue.value === 'all'){\r\n                setFilteredStudents(all_students);\r\n            }else{\r\n                setFilteredStudents(all_students.filter((student) => student.index_number.toString().includes(filterValue.value)));\r\n            }\r\n          break;\r\n    \r\n        case 'class':\r\n          \r\n          if (filterValue === 'all'){\r\n              setFilteredStudents(all_students);\r\n            }else{\r\n              setFilteredStudents(all_students.filter((student) => student.class.includes(filterValue.value)));\r\n          }\r\n        break;\r\n    \r\n        case 'country':\r\n          if (filterValue === 'all'){\r\n              setFilteredStudents(all_students);\r\n          }else{\r\n              setFilteredStudents(all_students.filter((student) => student.country.includes(filterValue.value)));\r\n        } \r\n        break;\r\n\r\n        case 'ud_non_ud':\r\n          if (filterValue === 'all'){\r\n            setFilteredStudents(all_students);\r\n          }else{\r\n            setFilteredStudents(all_students.filter((student) => student.denomination.includes(filterValue.value)));\r\n          }\r\n        break;\r\n        \r\n        case 'constituency':\r\n          if (filterValue === 'all'){\r\n            setFilteredStudents(all_students);\r\n          }else{\r\n            setFilteredStudents(all_students.filter((student) => student?.center?.region_id.toString().includes(filterValue.value)));\r\n          }\r\n        break;\r\n\r\n        case 'center':\r\n          if (filterValue === 'all'){\r\n            setFilteredStudents(all_students);\r\n          }else{\r\n            setFilteredStudents(all_students.filter((student) => student?.center?.center_name.toString().includes(filterValue.value)));\r\n          }\r\n        break;\r\n\r\n        case 'role':\r\n          if (filterValue === 'all'){\r\n            setFilteredStudents(all_students);\r\n          }else{\r\n            setFilteredStudents(all_students.filter((student) => student?.student_roles?.some(el => el.role_id == filterValue.value)));\r\n          }\r\n          break;\r\n      }  \r\n    }\r\n  \r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <Label >Filter Options</Label>\r\n                <Dropdown \r\n                    placeholder='Select Filter Option'\r\n                    fluid\r\n                    selection\r\n                    options={filterOptions}\r\n                    value={filterOption}\r\n                    onChange={(e, x) => selectFilterOption(x)}\r\n                />\r\n                \r\n            </div>\r\n            <div className=\"col\">\r\n                <Label >Filter Values</Label>\r\n                <Dropdown\r\n                    placeholder={currentPlaceholder}\r\n                    fluid\r\n                    search\r\n                    value={selectedFilterValue}\r\n                    selection\r\n                    onChange={(e, x) => loadFilteredStudents(x)}\r\n                    options={filterValues}\r\n                    disabled={(filterOption === \"\")}\r\n                    loading={loading}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}","import React from 'react';\r\n\r\nimport { Card, Icon, Image } from 'semantic-ui-react'\r\n\r\n\r\nexport const StudentCard = ({student}) => (\r\n  \r\n  \r\n    <Card style={{marginTop: 20}}>\r\n      <Image src={`http://anagkazo.firstlovegallery.com/${student.photo_url}`} wrapped ui={false} />\r\n      <Card.Content>\r\n        <Card.Header>{student.name}</Card.Header>\r\n        <Card.Meta>\r\n          <span className='date'>{student.class}</span>\r\n        </Card.Meta>\r\n        <Card.Description>\r\n          {student.country}\r\n        </Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        \r\n      </Card.Content>\r\n  </Card>\r\n\r\n\r\n)\r\nexport default StudentCard;","import React from \"react\";\r\nimport {\r\n    Col\r\n  } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport StudentCard from \"./student_card\";\r\n\r\nconst RenderStudentItem = (item) => {\r\n    \r\n    return (\r\n        <Col lg=\"3\" md=\"6\" >\r\n          <Link \r\n            to={`/admin/student/${item.item.id}/profile`}\r\n            >\r\n            <StudentCard student={item.item}/>\r\n          </Link>\r\n        </Col>\r\n    );\r\n  }\r\n\r\n  export default RenderStudentItem;","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\n\r\nfunction UserHeader ({student_name, photo_url}) {\r\n  \r\n    return (\r\n      <>\r\n        <div\r\n          className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\r\n          style={{\r\n            minHeight: \"600px\",\r\n            backgroundImage:\r\n              `url(\"https://anagkazo.firstlovegallery.com/${photo_url}\")`,\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center top\"\r\n          }}\r\n        >\r\n          {/* Mask */}\r\n          <span className=\"mask bg-gradient-default opacity-8\" />\r\n          {/* Header container */}\r\n          <Container className=\"d-flex align-items-center\" fluid>\r\n            <Row>\r\n              <Col lg=\"7\" md=\"10\">\r\n                {/* <Button\r\n                    color=\"info\"\r\n                    href=\"#pablo\"\r\n                    onClick={e => e.preventDefault()}\r\n                  >\r\n                  Back\r\n                </Button> */}\r\n                <h1 className=\"display-2 text-white\">{ student_name }</h1>\r\n                <p className=\"text-white mt-0 mb-5\">\r\n                  This page has information about the student and his/her progress in ministerial skills\r\n                </p>\r\n                \r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default UserHeader;\r\n","import React from \"react\";\r\nimport {\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  withScriptjs,\r\n  Marker,\r\n  InfoWindow\r\n} from \"react-google-maps\";\r\nimport { compose, withProps, withStateHandlers } from \"recompose\";\r\n\r\nconst MapWithPlaces = compose(\r\n  withProps({\r\n    googleMapURL:\r\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyC5UveX2X74k_vJfuCQSvbJwuyIqqDmYGU&libraries=geometry,drawing,places\",\r\n    loadingElement: <div style={{ height: `100%` }} />,\r\n    containerElement: <div style={{ height: \"100vh\", width: \"100%\" }} />,\r\n    mapElement: <div style={{ height: \"100%\" }} />\r\n  }),\r\n  withStateHandlers(\r\n    props => ({\r\n      infoWindows: props.places.map(p => {\r\n        return { isOpen: false };\r\n      })\r\n    }),\r\n    {\r\n      onToggleOpen: ({ infoWindows }) => selectedIndex => ({\r\n        infoWindows: infoWindows.map((iw, i) => {\r\n          iw.isOpen = selectedIndex === i;\r\n          return iw;\r\n        })\r\n      })\r\n    }\r\n  ),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)(props => (\r\n  <GoogleMap defaultZoom={props.zoom} defaultCenter={props.center}>\r\n    {props.places &&\r\n      props.places.map((place, i) => {\r\n        let lat = parseFloat(place.lat_coordinate, 10);\r\n        let lng = parseFloat(place.lng_coordinate, 10);\r\n\r\n        return (\r\n          <Marker\r\n            id={place.id}\r\n            key={place.id}\r\n            position={{ lat: lat, lng: lng }}\r\n            title=\"Click to zoom\"\r\n            onClick={props.onToggleOpen.bind(this, i)}\r\n          >\r\n            {props.infoWindows[i].isOpen && (\r\n              <InfoWindow onCloseClick={props.onToggleOpen.bind(i)}>\r\n                <div>{place.location}</div>\r\n              </InfoWindow>\r\n            )}\r\n          </Marker>\r\n        );\r\n      })}\r\n  </GoogleMap>\r\n));\r\n\r\nexport default MapWithPlaces;\r\n","import React from \"react\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Row, \r\n    Media,\r\n    Table,\r\n  \r\n  } from \"reactstrap\";\r\n  import centers_locations from \"../../assets/resources/centers_locations.json\";\r\n  \r\n\r\n\r\nexport default function centerlist(){\r\n\r\n    return (\r\n        <Card className=\"shadow\">\r\n            <CardHeader className=\"bg-transparent\">\r\n                <Row className=\"align-items-center\">\r\n                    <div className=\"col\">\r\n                        <h3 className=\"mb-0\">Centers</h3>\r\n                    </div>\r\n                </Row>\r\n            </CardHeader>\r\n            <CardBody style={{overflowY: 'scroll', height: 660 }}>\r\n            <Table className=\"align-items-center\" responsive hover>\r\n                <tbody>\r\n                    {\r\n                    centers_locations.center_coordinates.map(center => (\r\n                        <tr>\r\n                        <th scope=\"row\">\r\n                        <Media className=\"align-items-center\">\r\n                            <a\r\n                                className=\"avatar rounded-circle mr-3 text-white bg-blue\"\r\n                                href=\"#pablo\"\r\n                                onClick={e => e.preventDefault()}\r\n                            >\r\n                            <i className=\"ni ni-air-baloon\"></i>\r\n                        </a>\r\n                        <Media>\r\n                            <span className=\"mb-0 text-sm\">\r\n                            {center.location}\r\n                            </span>\r\n                        </Media>\r\n                        </Media>\r\n                        </th>\r\n                    </tr>\r\n                    ))\r\n                    }\r\n                    \r\n                </tbody>\r\n            </Table>\r\n\r\n            </CardBody>\r\n\r\n            \r\n        </Card>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport HeaderPlain from 'components/Headers/Header_plain';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Row,Col, Card, CardHeader,\r\n  CardBody,\r\n  Container\r\n  } from \"reactstrap\";\r\nimport * as XLSX from 'xlsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport {BASE_URL} from \"config/baseUrl\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\n\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nexport default function UploadBussingInfo(){\r\n  const [loading, setLoading] = useState(false);\r\n  const [columns, setColumns] = useState([]);\r\n  const [uploaded, setUploaded] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState([]);\r\n  const [dateString, setDateString] = useState(\"Click to Choose Bussing Date!\");\r\n\r\n  const handleDateChange = (obj) => {\r\n    setDateString(obj.startDate.format(\"YYYY-MM-DD\"));\r\n  }\r\n\r\n  const selectFile = (event) => {\r\n    var files = event.target.files, f = files[0];\r\n    var reader = new FileReader();\r\n    \r\n    reader.onload = function (event) {\r\n        var data = event.target.result;\r\n        let readedData = XLSX.read(data, {type: 'binary', cellDates: true});\r\n        readSheet1(readedData);\r\n        \r\n    };\r\n    reader.readAsBinaryString(f);\r\n  }\r\n\r\n  const readSheet1 = (readedData) => {\r\n    const wsname = readedData.SheetNames[0];\r\n    const ws = readedData.Sheets[wsname];\r\n        \r\n    /* Convert array to json*/\r\n    const dataParse = XLSX.utils.sheet_to_json(ws, {header:1});\r\n    let count = 0;\r\n    let bussingDataInfo = [];\r\n    \r\n    dataParse.forEach(value => {\r\n      count++;\r\n      if (count === 1) return;\r\n\r\n      if (typeof value[1] === 'undefined') return;\r\n\r\n      if (typeof value[2] === 'undefined') value[2] = 0;\r\n      if (typeof value[3] === 'undefined') value[3] = 0;\r\n\r\n      bussingDataInfo.push({\r\n        id: count,\r\n        //index_number: value[1].substring(0, value[1].indexOf(\" \")).trim(),\r\n        index_number: value[1].toString().trim(),\r\n        st_attn: (value[2] === \"\") ? 0 : value[2],\r\n        twn_attn: (value[3] === \"\") ? 0 : value[3]\r\n      });\r\n    });\r\n\r\n    uploadToServer(bussingDataInfo);\r\n\r\n  }\r\n\r\n  const uploadToServer = async (bussingSpreadSheetData) => {\r\n    setLoading(true);\r\n    let formData = new FormData();\r\n    \r\n    formData.append('bussing_date', dateString);\r\n    formData.append(\"bussingSpreadSheetData\", JSON.stringify(bussingSpreadSheetData));\r\n\r\n    //upload json to server\r\n    const response = await axios({\r\n      method: \"POST\",\r\n      url: `${BASE_URL}/react_admin/admin/bussing_data/upload`,\r\n      headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n      },\r\n      data: formData\r\n    });\r\n\r\n    await renderOnGrid(response.data);\r\n    setLoading(false);\r\n    setOpen(true);\r\n\r\n  }\r\n\r\n  const renderOnGrid = (bussingInfo) => {\r\n    setUploaded(true);\r\n    setColumns([{\r\n        field: 'name',\r\n        headerName: 'Student Name',\r\n        width: 220\r\n      },\r\n      {\r\n          field: 'present',\r\n          headerName: 'Present',\r\n          width: 100\r\n      },\r\n      {\r\n          field: 'number_bussed',\r\n          headerName: 'Number Bussed',\r\n          width: 150,\r\n          type: 'number'\r\n          \r\n      }]);\r\n\r\n      setRows(bussingInfo);\r\n\r\n    }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n};\r\n\r\n    return (\r\n      <>\r\n        <HeaderPlain title={\"Upload Bussing Info Spreadsheet\"}/>\r\n        <Container className=\"mt--7\" fluid>\r\n          {!loading ? \r\n            <>\r\n              <Row>\r\n                  <Col lg=\"6\" xl=\"3\">\r\n                    <DateRangePicker \r\n                      initialSettings={{\r\n                        singleDatePicker: true,\r\n                        showDropdowns: true,\r\n                        locale: {\r\n                          format: 'D-MMM-YYYY'\r\n                        }\r\n                      }}\r\n                      onApply={\r\n                        (e, obj) => {\r\n                            handleDateChange(obj);\r\n                        }\r\n                      }\r\n                      >\r\n                        <button>{dateString}</button>\r\n                    </DateRangePicker>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg=\"6\" xl=\"3\">\r\n                      <input\r\n                          accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                          className={classes.input}\r\n                          id=\"contained-button-file\"\r\n                          type=\"file\"\r\n                          onChange={selectFile}\r\n                          \r\n                      />\r\n                      <label htmlFor=\"contained-button-file\">\r\n                          <Button variant=\"contained\" color=\"primary\" component=\"span\" disabled={dateString === 'Click to Choose Bussing Date!'}>\r\n                          Upload\r\n                          </Button>\r\n                      </label>\r\n                    </Col>\r\n                </Row>\r\n              </>\r\n            :\r\n            <CircularProgress />\r\n          }\r\n            \r\n            {uploaded &&\r\n             <div style={{ height: 700, width: '100%' }}>\r\n                <Card className=\"shadow\">\r\n                    <CardHeader className=\" bg-transparent\">\r\n                        <h3 className=\" mb-0\">Uploaded Bussing Info {dateString}</h3>\r\n                    </CardHeader>\r\n                    <CardBody style={{ height: 700, width: '100%' }}>\r\n                        <DataGrid rows={rows} columns={columns} pageSize={50}/>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n            }\r\n        </Container>\r\n        <Snackbar \r\n            open={open} \r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n            autoHideDuration={6000} \r\n            onClose={handleClose} \r\n            message=\"Bussing Information has been uploaded successfully!\"\r\n          />\r\n    </>\r\n  )\r\n}","import React, {useState} from 'react';\r\nimport HeaderPlain from 'components/Headers/Header_plain';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport * as XLSX from 'xlsx';\r\nimport {BASE_URL} from \"config/baseUrl\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {\r\n    Row,Col, Card, CardHeader,\r\n    CardBody,\r\n    Container\r\n    } from \"reactstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n  }));\r\n\r\nexport default function UploadCenterServiceInfo(){\r\n    const [loading, setLoading] = useState(false);\r\n    const [columns, setColumns] = useState([]);\r\n    const [uploaded, setUploaded] = useState(false);\r\n    const [dateString, setDateString] = useState(\"Click to choose Bacenta/Center Service Date\");\r\n    const [rows, setRows] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleDateChange = (obj) => {\r\n        setDateString(obj.startDate.format(\"YYYY-MM-DD\"));\r\n    }\r\n\r\n    const selectFile = (event) => {\r\n        var files = event.target.files, f = files[0];\r\n        var reader = new FileReader();\r\n        \r\n        reader.onload = function (event) {\r\n            var data = event.target.result;\r\n            let readedData = XLSX.read(data, {type: 'binary', cellDates: true});\r\n            readSheet1(readedData);\r\n            \r\n        };\r\n        reader.readAsBinaryString(f);\r\n      }\r\n    \r\n      const readSheet1 = (readedData) => {\r\n        const wsname = readedData.SheetNames[0];\r\n        const ws = readedData.Sheets[wsname];\r\n            \r\n        /* Convert array to json*/\r\n        const dataParse = XLSX.utils.sheet_to_json(ws, {header:1});\r\n        let count = 0;\r\n        let centerServiceInfo = [];\r\n        \r\n        dataParse.forEach(value => {\r\n          count++;\r\n          if (count === 1) return;\r\n    \r\n          if (typeof value[1] === 'undefined') return;\r\n    \r\n          if (typeof value[2] === 'undefined') value[2] = 0;\r\n          if (typeof value[3] === 'undefined') value[3] = 0;\r\n\r\n          if (typeof value[4] === 'undefined') return;\r\n\r\n          centerServiceInfo.push({\r\n            id: count,\r\n            index_number: value[4].substring(0, value[4].indexOf(\" \")).trim(), //get index from spreadsheet column\r\n            //index_number: value[4].toString().trim(),\r\n            st_attn: (value[5] === \"\") ? 0 : value[5],\r\n            twn_attn: (value[6] === \"\") ? 0 : value[6]\r\n          });\r\n        });\r\n    \r\n        uploadToServer(centerServiceInfo);\r\n    \r\n      }\r\n\r\n      const uploadToServer = async (centerServiceSpreadSheetData) => {\r\n        setLoading(true);\r\n        let formData = new FormData();\r\n        \r\n        formData.append('center_service_date', dateString);\r\n        formData.append(\"centerServiceSpreadSheetData\", JSON.stringify(centerServiceSpreadSheetData));\r\n    \r\n        //upload json to server\r\n        const response = await axios({\r\n          method: \"POST\",\r\n          url: `${BASE_URL}/react_admin/admin/center_service/upload`,\r\n          headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\"\r\n          },\r\n          data: formData\r\n        });\r\n    \r\n        console.log(response.data);\r\n        \r\n        await renderOnGrid(response.data);\r\n        setLoading(false);\r\n        setOpen(true);\r\n    \r\n      }\r\n\r\n      const renderOnGrid = (centerServiceInfo) => {\r\n        setUploaded(true);\r\n        setColumns([{\r\n            field: 'name',\r\n            headerName: 'Student Name',\r\n            width: 250\r\n          },\r\n          {\r\n            field: 'center_name',\r\n            headerName: 'Center',\r\n            width: 200\r\n          },\r\n          {\r\n              field: 'number_of_souls',\r\n              headerName: 'Attendance',\r\n              width: 180,\r\n              type: 'number'\r\n          },\r\n          {\r\n              field: 'date_of_service',\r\n              headerName: 'Date',\r\n              width: 180      \r\n          }\r\n        ]);\r\n    \r\n          setRows(centerServiceInfo);\r\n    \r\n       }\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n          <HeaderPlain title={\"Upload Center Service Spreadsheet\"}/>\r\n          <Container className=\"mt--7\" fluid>\r\n          {!loading ? <>\r\n                <Row>\r\n                  <Col lg=\"6\" xl=\"3\">\r\n                    <DateRangePicker \r\n                      initialSettings={{\r\n                        singleDatePicker: true,\r\n                        showDropdowns: true,\r\n                        locale: {\r\n                          format: 'D-MMM-YYYY'\r\n                        }\r\n                      }}\r\n                      onApply={\r\n                        (e, obj) => {\r\n                            handleDateChange(obj);\r\n                        }\r\n                      }\r\n                      >\r\n                        <button>{dateString}</button>\r\n                    </DateRangePicker>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg=\"6\" xl=\"3\">\r\n                      <input\r\n                          accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                          className={classes.input}\r\n                          id=\"contained-button-file\"\r\n                          type=\"file\"\r\n                          onChange={selectFile}\r\n                          \r\n                          \r\n                      />\r\n                      <label htmlFor=\"contained-button-file\">\r\n                          <Button variant=\"contained\" \r\n                            color=\"primary\" \r\n                            component=\"span\" \r\n                            style={{marginTop: 10, float: 'right'}}\r\n                            disabled={dateString === 'Click to choose Bacenta/Center Service Date'}>\r\n                                Upload\r\n                          </Button>\r\n                      </label>\r\n                    </Col>\r\n                </Row>\r\n                </>\r\n                :\r\n            <CircularProgress />\r\n            }\r\n            {\r\n                uploaded &&\r\n                    <div style={{ height: 700, width: '100%' }}>\r\n                    <Card className=\"shadow\">\r\n                        <CardHeader className=\" bg-transparent\">\r\n                            <h3 className=\" mb-0\">Uploaded Bussing Info {dateString}</h3>\r\n                        </CardHeader>\r\n                        <CardBody style={{ height: 700, width: '100%' }}>\r\n                            <DataGrid rows={rows} columns={columns} pageSize={50}/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            }\r\n          \r\n          </Container>\r\n          <Snackbar \r\n            open={open} \r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n            autoHideDuration={6000} \r\n            onClose={handleClose} \r\n            message=\"Center Service Data has been uploaded!\"\r\n          />\r\n        </>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {\r\n    Container,\r\n    Row,Col, Card, CardHeader,\r\n    CardBody\r\n  } from \"reactstrap\";\r\nimport Header_Plain from 'components/Headers/Header_plain';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport * as XLSX from 'xlsx';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport {BASE_URL} from \"config/baseUrl\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n  }));\r\n\r\nexport default function UploadStudents(){\r\n    const classes = useStyles();\r\n    const [rows, setRows] = useState([]);\r\n    const [columns, setColumns] = useState([]);\r\n    const [uploaded, setUploaded] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [numberOfStudentsUploaded, setNumberOfStudentsUploaded] = useState(0);\r\n\r\n    const selectFile = (event) => {\r\n        var files = event.target.files, f = files[0];\r\n        var reader = new FileReader();\r\n        \r\n        reader.onload = function (event) {\r\n            var data = event.target.result;\r\n            let readedData = XLSX.read(data, {type: 'binary', cellDates: true});\r\n            readSheet1(readedData);\r\n            \r\n        };\r\n        reader.readAsBinaryString(f);\r\n    }\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setOpen(false);\r\n    };\r\n\r\n    const readSheet1 = (readedData) => {\r\n        const wsname = readedData.SheetNames[0];\r\n        const ws = readedData.Sheets[wsname];\r\n            \r\n        /* Convert array to json*/\r\n        const dataParse = XLSX.utils.sheet_to_json(ws, {header:1});\r\n        let count = 0;\r\n        let studentDataInfo = [];\r\n        \r\n        dataParse.forEach(value => {\r\n          count++;\r\n          if (count === 1) return;\r\n\r\n          studentDataInfo.push({\r\n              id : count,\r\n              index_number: value[getExcelCellIndex('Admission No.', dataParse[0])],\r\n              name: value[getExcelCellIndex('First Name', dataParse[0])] +\" \"+value[getExcelCellIndex('Last Name', dataParse[0])],\r\n              date_of_birth:  getExcelCellIndex('Date of Birth', dataParse[0]) !== -1 ? moment(value[getExcelCellIndex('Date of Birth', dataParse[0])]).format(\"YYYY-MM-DD\") : null,\r\n              country: getExcelCellIndex('Country', dataParse[0]) !== -1 ? value[getExcelCellIndex('Country', dataParse[0])] : null,\r\n              gender: getExcelCellIndex('Gender', dataParse[0]) ? value[getExcelCellIndex('Gender', dataParse[0])] : null,\r\n              phone: getExcelCellIndex('Mobile', dataParse[0]) !== -1 ? value[getExcelCellIndex('Mobile', dataParse[0])] : null,\r\n              pastors_name: getExcelCellIndex('Pastors Name', dataParse[0]) !== -1 ? value[getExcelCellIndex('Pastors Name', dataParse[0])] : null,\r\n              pastors_phone: getExcelCellIndex('Pastor Phone Number', dataParse[0]) !== -1 ? value[getExcelCellIndex('Pastor Phone Number', dataParse[0])] : null,\r\n              class: getExcelCellIndex('Batch', dataParse[0]) !== -1 ? value[getExcelCellIndex('Batch', dataParse[0])] : null,\r\n              email_address: getExcelCellIndex('E-mail', dataParse[0]) !== -1 ? value[getExcelCellIndex('E-mail', dataParse[0])] : null\r\n          });\r\n        });\r\n\r\n        uploadToServer(studentDataInfo);\r\n\r\n    }\r\n\r\n    const getExcelCellIndex = (row_name, header_row) => {\r\n        return header_row.indexOf(row_name);\r\n    }\r\n\r\n    const renderOnGrid = (studentSpreadSheetInfo) => {\r\n        setUploaded(true);\r\n\r\n        setColumns([{\r\n            field: 'index_number',\r\n            headerName: 'Index',\r\n        },\r\n        {\r\n            field: 'name',\r\n            headerName: 'Full Name',\r\n            width: 150\r\n         },\r\n         {\r\n            field: 'class',\r\n            headerName: 'Class'\r\n         },\r\n         {\r\n             field: 'date_of_birth',\r\n             headerName: 'Date of Birth'\r\n         },\r\n         {\r\n             field: 'country',\r\n             headerName: 'Country'\r\n         },\r\n         {\r\n             field: 'gender',\r\n             headerName: 'Gender'\r\n         },\r\n         {\r\n             field: 'phone',\r\n             headerName: 'Phone'\r\n         },\r\n         {\r\n             field: 'pastors_name',\r\n             headerName: 'Pastors Name',\r\n             width: 150\r\n         },\r\n         {\r\n             field: 'pastors_phone',\r\n             headerName: 'Pastors Phone'\r\n         },\r\n         {\r\n             field: 'marital_status',\r\n             headerName: 'Marital Status'\r\n         },\r\n         {\r\n             field: 'occupation',\r\n             headerName: 'Occupation'\r\n         },\r\n         {\r\n             field: 'email_address',\r\n             headerName: 'Email Address'\r\n         },\r\n         {\r\n             field: 'denomination',\r\n             headerName: 'Denomination'\r\n         }\r\n        ]);\r\n\r\n        setRows(studentSpreadSheetInfo);\r\n    }\r\n\r\n    const uploadToServer = async (studentSpreadSheetData) => {\r\n        setLoading(true);\r\n        let formData = new FormData();\r\n        formData.append(\"studentSpreadSheetData\", JSON.stringify(studentSpreadSheetData));\r\n        \r\n        //upload json to server\r\n        const response = await axios({\r\n            method: \"POST\",\r\n            url: `${BASE_URL}/react_admin/admin/students/upload`,\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: formData\r\n        });\r\n\r\n        await renderOnGrid(response.data);\r\n        await setNumberOfStudentsUploaded(response.data.length);\r\n        setLoading(false);\r\n        setOpen(true);\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Header_Plain title={\"Upload Students from Fedena(Excel)\"} />\r\n        <Container className=\"mt--7\" fluid>\r\n            \r\n            {!loading ? \r\n            <Row>\r\n                <Col lg=\"6\" xl=\"3\">\r\n                    <input\r\n                        accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                        className={classes.input}\r\n                        id=\"contained-button-file\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <label htmlFor=\"contained-button-file\">\r\n                        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                        </Button>\r\n                    </label>\r\n                    <input accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" \r\n                        className={classes.input} id=\"icon-button-file\" type=\"file\"\r\n                        onChange={selectFile} \r\n                        />\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <IconButton color=\"primary\" aria-label=\"upload excel file\" component=\"span\">\r\n                            <CloudUploadIcon />\r\n                        </IconButton>\r\n                    </label>\r\n                </Col>\r\n            </Row>\r\n            :\r\n            <CircularProgress />\r\n            }\r\n            \r\n            {uploaded &&\r\n             <div style={{ height: 700, width: '100%' }}>\r\n                <Card className=\"shadow\">\r\n                    <CardHeader className=\" bg-transparent\">\r\n                        <h3 className=\" mb-0\">Uploaded Students - {numberOfStudentsUploaded} Students Uploaded</h3>\r\n                    </CardHeader>\r\n                    <CardBody style={{ height: 700, width: '100%' }}>\r\n                        <DataGrid rows={rows} columns={columns} pageSize={50}/>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>}\r\n        </Container>\r\n        <Snackbar \r\n            open={open} \r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n            autoHideDuration={6000} \r\n            onClose={handleClose} \r\n            message=\"Students have successfully been uploaded!\"\r\n            />\r\n            \r\n        </>\r\n    );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Container, Card, CardHeader, CardBody, Spinner\r\n  } from \"reactstrap\";\r\nimport {\r\n    DataGrid,\r\n    GridToolbarContainer,\r\n    GridToolbarExport,\r\n    \r\n  } from '@material-ui/data-grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {TextField, Checkbox, List, ListItem, ListItemText, MenuItem, Grid, Menu} from '@material-ui/core';\r\n\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Header from \"components/Headers/Header.js\";\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  }));\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nconst streams = [\r\n    '9 Months Program',\r\n    '18 Months Program',\r\n    '36 Months Program'\r\n  ];\r\n\r\nexport default function MinistrySkills(){\r\n    const classes = useStyles();\r\n    const [ministrySkills, setMinistrySkills] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [schClasses, setSchClasses] = useState([]);\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n    const handleClickListItem = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n    \r\n      const handleMenuItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n        setAnchorEl(null);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setAnchorEl(null);\r\n      };\r\n\r\n    const columns = [\r\n        { field: 'index_number', headerName: 'Index Number', width: 100 },\r\n        { field: 'student_name', headerName: 'Name', width: 130 },\r\n        { field: 'class', headerName: 'Class', width: 130 },\r\n        { \r\n            field: 'Prayer', \r\n            headerName: 'Prayer Point', width: 100,\r\n            valueGetter: (params) => `${params.row.prayerPoint.prayerPoint}`\r\n        },\r\n        { \r\n            field: 'sheepSeeking', \r\n            headerName: 'Visitation', width: 130,\r\n            valueGetter: (params) =>`${params.row.sheepSeeking.VisitPoint}`\r\n        },\r\n        { \r\n            field: 'counselling', \r\n            headerName: 'Counselling', width: 130,\r\n            valueGetter: (params) =>`${params.row.counselling.counselPoint}`\r\n        },\r\n        { \r\n            field: 'multiplication', \r\n            headerName: 'Outreach', width: 130,\r\n            valueGetter: (params) =>`${params.row.multiplication.outreachPoint}`\r\n        },\r\n        { \r\n            field: 'basonta', \r\n            headerName: 'Basonta', width: 100,\r\n            valueGetter: (params) =>`${params.row.basonta.basontaPoint}`\r\n        },\r\n        { \r\n            field: 'SAT', \r\n            headerName: 'SAT', width: 80,\r\n            valueGetter: (params) =>`${params.row.sat.satMaterialsPoint}`\r\n        },\r\n        { \r\n            field: 'ucPoint', \r\n            headerName: 'Understanding Campaign', width: 100,\r\n            valueGetter: (params) =>`${params.row.ucPoint.ucPassPoint}`\r\n        },\r\n        { \r\n            field: 'bussingPoint', \r\n            headerName: 'Bussing', width: 130,\r\n            valueGetter: (params) =>`${params.row.bussingPoint.bussingPoint}`\r\n        },\r\n        {\r\n            field: 'sum_point',\r\n            headerName: 'Total %', width: 100,\r\n            valueGetter: (params) => (parseInt(params.row.bussingPoint.bussingPoint) + \r\n                                     parseInt(params.row.ucPoint.ucPassPoint) + \r\n                                     parseInt(params.row.sat.satMaterialsPoint) + \r\n                                     parseInt(params.row.basonta.basontaPoint) + \r\n                                     parseInt(params.row.multiplication.outreachPoint) + \r\n                                     parseInt(params.row.counselling.counselPoint) + \r\n                                     parseInt(params.row.sheepSeeking.VisitPoint) + \r\n                                     parseInt(params.row.prayerPoint.prayerPoint)) + \"%\"                      \r\n        },\r\n        {\r\n            field: 'total_point',\r\n            headerName: 'Point', width: 100,\r\n            valueGetter: (params) => (parseInt(params.row.bussingPoint.bussingPoint) + \r\n                                    parseInt(params.row.ucPoint.ucPassPoint) + \r\n                                    parseInt(params.row.sat.satMaterialsPoint) + \r\n                                    parseInt(params.row.basonta.basontaPoint) + \r\n                                    parseInt(params.row.multiplication.outreachPoint) + \r\n                                    parseInt(params.row.counselling.counselPoint) + \r\n                                    parseInt(params.row.sheepSeeking.VisitPoint) + \r\n                                    parseInt(params.row.prayerPoint.prayerPoint)\r\n                                    ) > 80 ? 100:0\r\n        }\r\n    ];\r\n\r\n    let unmounted = false;\r\n    //get ministry skills json from the server\r\n    useEffect(()=>{\r\n        \r\n        //loadMinistrySkills();\r\n\r\n        return () => {\r\n            unmounted = true;\r\n          }    \r\n    },[]);\r\n\r\n    const getSchClasses = () => {\r\n        //get classes\r\n    }\r\n\r\n    const loadMinistrySkills = () => {\r\n        setLoading(true);\r\n        return axios.get(`${BASE_URL}/react_admin/admin/ministry_skills/report`)\r\n                .then((response) => \r\n                {\r\n                  if (unmounted) return;\r\n                  setLoading(false);\r\n                  console.log(response.data.students);\r\n                  setMinistrySkills(response.data.students);\r\n      \r\n                });\r\n    }\r\n\r\n    const CustomToolbar = () => {\r\n        return (\r\n            <GridToolbarContainer>\r\n              <GridToolbarExport />\r\n            </GridToolbarContainer>\r\n          );\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <Header />\r\n          <Container className=\" mt--7\" fluid>\r\n            <Card className=\"shadow\">\r\n                <CardHeader className=\" bg-transparent\">\r\n                    <span>\r\n                    <h3 className=\" mb-0\">Ministry Skills - {loading && <Spinner color=\"success\" />}</h3>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={3}>\r\n                        <div className={classes.root} style={{ width: 250 }}>\r\n                        <List component=\"nav\" aria-label=\"Device settings\">\r\n                            <ListItem\r\n                                button\r\n                                aria-haspopup=\"true\"\r\n                                aria-controls=\"lock-menu\"\r\n                                aria-label=\"Class\"\r\n                                onClick={handleClickListItem}\r\n                            >\r\n                            <ListItemText primary=\"Class\" secondary={streams[selectedIndex]} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Menu\r\n                            id=\"lock-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                        >\r\n                            {streams.map((option, index) => (\r\n                            <MenuItem\r\n                                key={option}\r\n                                // disabled={index === 0}\r\n                                selected={index === selectedIndex}\r\n                                onClick={(event) => handleMenuItemClick(event, index)}\r\n                            >\r\n                                {option}\r\n                            </MenuItem>\r\n                            ))}\r\n                        </Menu>\r\n                        </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={3}>\r\n                    <div className={classes.root} style={{ width: 250 }}>\r\n                        <List component=\"nav\" aria-label=\"Device settings\">\r\n                            <ListItem\r\n                                button\r\n                                aria-haspopup=\"true\"\r\n                                aria-controls=\"lock-menu\"\r\n                                aria-label=\"Stream\"\r\n                                onClick={handleClickListItem}\r\n                            >\r\n                            <ListItemText primary=\"Stream\" secondary={streams[selectedIndex]} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Menu\r\n                            id=\"lock-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                        >\r\n                            {streams.map((option, index) => (\r\n                            <MenuItem\r\n                                key={option}\r\n                                // disabled={index === 0}\r\n                                selected={index === selectedIndex}\r\n                                onClick={(event) => handleMenuItemClick(event, index)}\r\n                            >\r\n                                {option}\r\n                            </MenuItem>\r\n                            ))}\r\n                        </Menu>\r\n                        </div>\r\n                        </Grid>\r\n                        </Grid>\r\n\r\n                    </span>\r\n                </CardHeader>\r\n                <CardBody style={{ height: 700, width: '100%' }}>\r\n                    <DataGrid \r\n                        rows={ministrySkills} \r\n                        columns={columns} \r\n                        pageSize={40} \r\n                        components={{\r\n                            Toolbar: CustomToolbar\r\n                        }} />\r\n                </CardBody>\r\n            </Card>\r\n          </Container>\r\n        </>\r\n    );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Header from \"components/Headers/Header.js\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst columns = [\r\n    { id: 'con_rep', label: 'Con Rep', minWidth: 170, align: 'center' },\r\n    { id: 'constituency', label: 'Constituency', minWidth: 100, align: 'center' },\r\n    { id: 'constituency_population', label: 'Population', minWidth: 100, align:'center' }\r\n]\r\n\r\nconst useStyles2 = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  });\r\n\r\nexport default function Constituency(){\r\n    const classes = useStyles2();\r\n    const [constituencies, setConstituencies] = useState([]);\r\n    let unmounted = false;\r\n\r\n    useEffect(() => {\r\n        loadConstituencies();\r\n    },[]);\r\n\r\n    const loadConstituencies = () => {\r\n        return axios.get(`${BASE_URL}/react_admin/admin/constituencies`)\r\n                .then((response) => \r\n                {\r\n                  if (unmounted) return;\r\n                  \r\n                  console.log(response.data);\r\n                  setConstituencies(response.data);\r\n      \r\n                });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.container} stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell\r\n                                key={column.id}\r\n                                align={column.align}\r\n                                style={{ minWidth: column.minWidth }}\r\n                                component=\"th\" scope=\"row\"\r\n                                >\r\n                                    {column.label}\r\n                                </TableCell>\r\n                             )\r\n                            )\r\n                        }\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            constituencies.map((item, index) => (\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\" align={'center'}>\r\n                                        {item.region_head}\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align={'center'}>\r\n                                        {item.region_name}\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align={'center'}>\r\n                                        {item.area_population}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                )\r\n                            )\r\n                        }\r\n                        \r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}","import React from \"react\";\r\nimport Header_Plain from \"components/Headers/Header_plain\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {Breadcrumbs, Typography, Link} from '@material-ui/core/';\r\nimport {\r\n    Container\r\n  } from \"reactstrap\";\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\nimport SSMG_ChartDisplay from \"./ssmg_chart_display\";\r\nimport {ssmg_array} from \"./campaigns\";\r\n\r\nexport default function AllConstituencySSMG({showCharts}) {\r\n \r\n    const location = useLocation();\r\n    const pathName = location.pathname;\r\n    const requestUrl = BASE_URL+pathName+\"/constituencies/0\";\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <Container>\r\n                {\r\n                    showCharts && ssmg_array.map((item, index) => <SSMG_ChartDisplay key={index} ssmg_name={item} requestUrl={requestUrl} source={\"all constituen\"}/>)\r\n                }\r\n            </Container>\r\n        </>\r\n    );\r\n}","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport Index from \"views/Index.js\";\r\nimport SSMGCampaigns from \"views/ssmg/ssmg_campaigns\";\r\nimport Maps from \"views/examples/Maps.js\";\r\nimport Register from \"views/examples/Register.js\";\r\nimport Login from \"views/examples/Login.js\";\r\nimport Tables from \"views/examples/Tables.js\";\r\nimport Icons from \"views/examples/Icons.js\";\r\nimport Students from \"views/students/students_all\";\r\nimport StudentProfile from \"views/students/student_profile_detail\";\r\nimport CenterVenueMap from \"views/maps/center_venue_locations\";\r\nimport ConstituencyDetail from \"views/dashboard/dashboard-details/constituency-data-details\";\r\nimport ConstituencyCenterServiceDetail from \"views/dashboard/dashboard-details/constituency_center_service\";\r\nimport UploadBussingInfo from \"components/Advanced/uploadBussingInfo\";\r\nimport UploadCenterServiceInfo from \"components/Advanced/uploadCenterServiceInfo\";\r\n\r\nimport UploadStudents from \"components/Advanced/uploadStudentsFromExcel\";\r\nimport MinistrySkills from \"views/students/ministry_skills\";\r\n\r\nimport Constituencies from \"components/Constituencies/constituencies\";\r\nimport AllConstituencyCharts from \"views/dashboard/dashboard-details/constituency_all_charts\";\r\nimport StudentAttn from \"views/students/student_attn\";\r\nimport SSMG_home from \"views/ssmg/ssmg_home\";\r\nimport ConstituencySSMG from \"views/ssmg/constituency_ssmg\";\r\nimport StudentCenterLeaders  from \"views/students/student_center_leaders\";\r\nimport StudentSontaLeaders  from \"views/students/student_sonta_leaders\";\r\nimport StudentBacentaLeaders from \"views/students/student_bacenta_leaders\";\r\nimport StudentChurchPlanters from \"views/students/students_church_planters\";\r\nimport GeneralStudentBussing from \"views/students/general_bussing_report\";\r\n\r\n\r\nvar routes = [\r\n  {\r\n    path: \"/index\",\r\n    name: \"Dashboard\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: Index,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/students\",\r\n    name: \"Students\",\r\n    icon: \"fa fa-users text-success\",\r\n    component: Students,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/co_reps\",\r\n    name: \"COs Page\",\r\n    icon: \"fa fa-user text-info\",\r\n    component: Constituencies,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/ssmg\",\r\n    name: \"SSMG\",\r\n    icon: \"fa fa-bolt text-primary\",\r\n    component: SSMG_home,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/center_google_map\",\r\n    name: \"Center Venue Location\",\r\n    icon: \"fa fa-map-marker-alt text-danger\",\r\n    component: CenterVenueMap,\r\n    layout: \"/admin\"\r\n  }\r\n  // {\r\n  //   path: \"/maps\",\r\n  //   name: \"Ministry Skills\",\r\n  //   icon: \"ni ni-pin-3 text-orange\",\r\n  //   component: Maps,\r\n  //   layout: \"/admin\"\r\n  // },\r\n  // {\r\n  //   path: \"/user-profile\",\r\n  //   name: \"User Profile\",\r\n  //   icon: \"ni ni-single-02 text-yellow\",\r\n  //   component: Profile,\r\n  //   layout: \"/admin\"\r\n  // },\r\n  // {\r\n  //   path: \"/tables\",\r\n  //   name: \"Tables\",\r\n  //   icon: \"ni ni-bullet-list-67 text-red\",\r\n  //   component: Tables,\r\n  //   layout: \"/admin\"\r\n  // },\r\n  // {\r\n  //   path: \"/login\",\r\n  //   name: \"Login\",\r\n  //   icon: \"ni ni-key-25 text-info\",\r\n  //   component: Login,\r\n  //   layout: \"/auth\"\r\n  // },\r\n  // {\r\n  //   path: \"/register\",\r\n  //   name: \"Register\",\r\n  //   icon: \"ni ni-circle-08 text-pink\",\r\n  //   component: Register,\r\n  //   layout: \"/auth\"\r\n  // }\r\n];\r\nexport default routes;\r\n\r\nexport var app_routes = [\r\n  {\r\n    path: \"/students/center_leaders\",\r\n    name: \"Center Leaders\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: StudentCenterLeaders,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/students/sonta_leaders\",\r\n    name: \"Sonta Leaders\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: StudentSontaLeaders,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/students/bacenta_leaders\",\r\n    name: \"Bacenta Leaders\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: StudentBacentaLeaders,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/students/church_planters\",\r\n    name: \"Church Planters\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: StudentChurchPlanters,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/student/:id/profile\",\r\n    name: \"Students Profile\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: StudentProfile,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/constituency/:id\",\r\n    name: \"Constituency\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: ConstituencyDetail,\r\n    layout: '/admin'\r\n  },\r\n  {\r\n    path: \"/student_center_service/:id\",\r\n    name: \"Constituency Bacenta Services\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: ConstituencyCenterServiceDetail,\r\n    layout: '/admin'\r\n  },\r\n  {\r\n    path: \"/ssmg/constituencies/\",\r\n    name: \"Constituency SSMG\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: ConstituencySSMG,\r\n    layout: '/admin'\r\n  },\r\n  {\r\n    path: \"/ssmg/ssmg_campaign\",\r\n    name: \"Campaign SSMG\",\r\n    icon: \"\",\r\n    component: SSMGCampaigns,\r\n    layout: '/admin'\r\n  },\r\n  {\r\n    path: \"/advanced/upload-students\",\r\n    name: \"Upload Students\",\r\n    icon: \"ni ni-cloud-upload-96\",\r\n    component: UploadStudents,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/advanced/upload-bussing-report\",\r\n    name: \"Upload Bussing Report\",\r\n    icon: \"ni ni-cloud-upload-96\",\r\n    component: UploadBussingInfo,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/advanced/upload-center-service-report\",\r\n    name: \"Upload Bussing Report\",\r\n    icon: \"ni ni-cloud-upload-96\",\r\n    component: UploadCenterServiceInfo,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/students/ministry-skills\",\r\n    name: \"Ministry Skills\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: MinistrySkills,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/con_reps\",\r\n    name: \"Constituencies\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: Constituencies,\r\n    layout: \"/admin\"\r\n  },{\r\n    path: \"/all_constituency_monthly_charts\",\r\n    name: \"Constituency Monthly Bussing Chart\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: AllConstituencyCharts,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/students/anagkazo_live_attn\",\r\n    name: \"Attendance\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: StudentAttn,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/students/generate-bussing-report\",\r\n    name: \"General Bussing report\",\r\n    icon: \"ni ni-bus-front-12 text-primary\",\r\n    component: GeneralStudentBussing,\r\n    layout: \"/admin\"\r\n  }\r\n];\r\n","import React, {useState, useEffect} from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Container,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport Header from \"components/Headers/Header.js\";\r\nimport FlatList, {PlainList} from 'flatlist-react';\r\n\r\nimport StudentFilterBox from \"./student_filter_box\";\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\nimport RenderStudentItem from \"./student_item\";\r\n\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nexport default function Students(){\r\n  const [loading, setLoading] = useState(false);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [students, setStudents] = useState([]);\r\n  const [currentHeading, setCurrentHeading] = useState(\"Students\");\r\n  const [all_students, setAllStudents] = useState([]);\r\n  const [classes, setClasses] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [urlParams, setUrlParams] = useState({});\r\n\r\n  let unmounted = false;\r\n  useEffect(() => {\r\n    \r\n      !loaded && loadAllStudents(); //if it is false, load the students ....\r\n      var searchParams = new URLSearchParams(window.location.href);\r\n\r\n      if (searchParams.get(\"filter_option\") === 'role'){\r\n          setUrlParams({\r\n              filter_option: searchParams.get(\"filter_option\"),\r\n              filter_value: searchParams.get(\"filter_value\")\r\n          }); \r\n      }\r\n\r\n      return () => {\r\n        unmounted = true;\r\n      }\r\n\r\n  },[students]);\r\n\r\n  const loadAllStudents = () => {\r\n\r\n    return axios.get(`${BASE_URL}/react_admin/students_all`)\r\n          .then((response) => \r\n          {\r\n            if (unmounted) return;\r\n            setStudents(response.data.items);\r\n            setAllStudents(response.data.items);\r\n\r\n            setLoaded(true);\r\n\r\n          });\r\n  }\r\n\r\n  return (\r\n        <>\r\n          <Header />\r\n          <Container className=\" mt--7\" fluid>\r\n            <Row>\r\n              <div className=\"col\">\r\n                <Card className=\" shadow\">\r\n                  <CardHeader className=\" bg-transparent\">\r\n                    <h3 className=\" mb-0\">{currentHeading}</h3>\r\n                    {all_students.length > 0 && <StudentFilterBox all_students={all_students} setFilteredStudents={setStudents} setCurrentHeading={setCurrentHeading} filterParams={urlParams}/>}\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <Row className=\" icon-examples\">\r\n                      <PlainList\r\n                        list={students}\r\n                        renderItem={(item, index) => <RenderStudentItem item={item} key={index}/>}\r\n                        renderWhenEmpty={() => <div>Loading ...</div>}\r\n                        renderOnScroll\r\n                      />\r\n                    </Row>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    </Row>\r\n</Container>\r\n        </>\r\n            );\r\n\r\n\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    Container,\r\n    Row, \r\n    CardBody,\r\n    TabContent, TabPane,\r\n    Nav, NavItem, NavLink, Spinner\r\n} from \"reactstrap\";\r\nimport Header from \"components/Headers/Header_plain\";\r\nimport { BASE_URL } from \"config/baseUrl\";\r\nimport axios from 'axios';\r\nimport { Icon, Grid, Label } from 'semantic-ui-react';\r\nimport { Link } from \"react-router-dom\";\r\nimport AllConstituencySSMG from \"./all_constituency_ssmg\";\r\nimport {ssmg_array} from \"./campaigns\";\r\n\r\nexport default function SSMG_home(){\r\n    const [tab, setTabValue] = useState(1);\r\n    const [constituencies, setConstituencies] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const toggleNavs = (e,tabValue) => {\r\n        setTabValue(tabValue);\r\n    }\r\n\r\n    //get all constituencies\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        getAllConstituencies();\r\n\r\n    },[]);\r\n\r\n    const getAllConstituencies = async () => {\r\n        const response = await axios.get(`${BASE_URL}/react_admin/admin/constituencies`);\r\n        setConstituencies(response.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Container className=\" mt--7\" fluid>\r\n                <Row>\r\n                <div className=\"col\">\r\n                    <Card className=\" shadow\">\r\n                        <CardHeader className=\" bg-transparent\">\r\n                            <h3 className=\" mb-0\">{\"SSMG\"} {loading && <Spinner color=\"primary\"/>}</h3>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                        <div className=\"nav-wrapper\">\r\n                            <Nav\r\n                                className=\"nav-fill flex-column flex-md-row\"\r\n                                id=\"tabs-icons-text\"\r\n                                pills\r\n                                role=\"tablist\"\r\n                            >\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        aria-selected={tab === 1}\r\n                                        className={classnames(\"mb-sm-3 mb-md-0\", {\r\n                                        active: tab === 1\r\n                                        })}\r\n                                        onClick={e => toggleNavs(e, 1)}\r\n                                        //href=\"#pablo\"\r\n                                        role=\"tab\"\r\n                                    >\r\n                                    <i className=\"ni ni-cloud-upload-96 mr-2\" />\r\n                                        Constituencies\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        aria-selected={tab === 2}\r\n                                        className={classnames(\"mb-sm-3 mb-md-0\", {\r\n                                        active: tab === 2\r\n                                        })}\r\n                                        onClick={e => toggleNavs(e, 2)}\r\n                                        //href=\"#pablo\"\r\n                                        role=\"tab\"\r\n                                    >\r\n                                    <i className=\"ni ni-bell-55 mr-2\" />\r\n                                        Campaigns\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        aria-selected={tab === 3}\r\n                                        className={classnames(\"mb-sm-3 mb-md-0\", {\r\n                                        active: tab === 3\r\n                                        })}\r\n                                        onClick={e => toggleNavs(e, 3)}\r\n                                        //href=\"#pablo\"\r\n                                        role=\"tab\"\r\n                                    >\r\n                                        <i className=\"ni ni-calendar-grid-58 mr-2\" />\r\n                                        All Constituencies\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </div>\r\n                        <Container fluid>\r\n                            <TabContent activeTab={\"tabs\" + tab}>\r\n                                <TabPane tabId=\"tabs1\">\r\n                                    <Grid columns={3} divided> \r\n                                        {\r\n                                            constituencies.map((item) =>\r\n                                                (\r\n                                                <Grid.Column key={item.id}>\r\n                                                    <Label size={'large'} color={'blue'}>\r\n                                                        <Link to={`/admin/ssmg/constituencies/${item.id}?constituency=${item.region_name}`}>\r\n                                                        <Icon name='folder open' />\r\n                                                        {item.region_name}\r\n                                                        </Link>\r\n                                                    </Label> \r\n                                                </Grid.Column>     \r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    </Grid>\r\n                                </TabPane>\r\n                                <TabPane tabId=\"tabs2\">\r\n                                <Grid columns={3} divided> \r\n                                        {\r\n                                            ssmg_array.map((item, index) =>\r\n                                                (\r\n                                                <Grid.Column key={index}>\r\n                                                    <Label size={'large'} color={'blue'}>\r\n                                                        <Link to={`/admin/ssmg/ssmg_campaign?ssmg_param=${item.requestParam}`}>\r\n                                                        <Icon name='folder open' />\r\n                                                        {item.readableName}\r\n                                                        </Link>\r\n                                                    </Label> \r\n                                                </Grid.Column>     \r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    </Grid>\r\n                                </TabPane>\r\n                                <TabPane tabId=\"tabs3\">\r\n                                    <AllConstituencySSMG showCharts={tab===3}/>\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </Container>\r\n                        </CardBody>\r\n                    </Card>    \r\n                </div>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport Map from \"../dashboard/map_centers\";\r\nimport CenterList from \"../dashboard/center_lists\";\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport places from \"../../assets/resources/centers_locations.json\";\r\n\r\nexport default function CenterVenueMap(){\r\n\r\n\r\n    \r\n    return (\r\n          <>\r\n            <Header />\r\n            {/* Page content */}\r\n            <Container className=\"mt--7\" fluid>\r\n              <Row>,\r\n                <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\r\n                  <Map center={{ lat: 5.8997985, lng: -0.1529652 }}\r\n                        zoom={13}\r\n                        places={places.center_coordinates} />\r\n                </Col>\r\n                <Col>\r\n                  <CenterList />\r\n              </Col>\r\n            </Row>\r\n            </Container>\r\n          </>\r\n        )\r\n    \r\n}","import React, {useState, useEffect} from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Container,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport Header from \"components/Headers/Header.js\";\r\nimport FlatList, {PlainList} from 'flatlist-react';\r\n\r\nimport StudentFilterBox from \"./student_filter_box\";\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\nimport RenderStudentItem from \"./student_item\";\r\n\r\nimport axios from 'axios';\r\n\r\nexport default function StudentCenterLeaders(){\r\n\r\n    const [centerLeaders, setCenterLeaders] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        loadCenterLeaders();\r\n    },[]);\r\n\r\n    const loadCenterLeaders = () => {\r\n\r\n        setLoading(true);\r\n        return axios.get(`${BASE_URL}/react_admin/admin/center_leaders`)\r\n              .then((response) => \r\n              {\r\n                \r\n                setCenterLeaders(response.data.center_leaders);\r\n                \r\n                setLoading(false);\r\n    \r\n              });\r\n      }\r\n\r\n    return (\r\n        <>\r\n          <Header />\r\n            <Container className=\" mt--7\" fluid>\r\n                <Row>\r\n                    <div className=\"col\">\r\n                        <Card className=\" shadow\">\r\n                            <CardHeader className=\" bg-transparent\">\r\n                            <h3 className=\" mb-0\">Center Leaders - {centerLeaders.length}</h3>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <Row className=\" icon-examples\">\r\n                                <PlainList\r\n                                    list={centerLeaders}\r\n                                    renderItem={(item, index) => <RenderStudentItem item={item} key={index}/>}\r\n                                    renderWhenEmpty={() => <div>Loading ...</div>}\r\n                                    renderOnScroll\r\n                                />\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n\r\n}","import React, {useState, useEffect} from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Container,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport Header from \"components/Headers/Header.js\";\r\nimport {PlainList} from 'flatlist-react';\r\n\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\nimport RenderStudentItem from \"./student_item\";\r\n\r\nimport axios from 'axios';\r\n\r\nexport default function StudentSontaLeaders(){\r\n\r\n    const [sonta_leaders, setSontaLeaders] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        loadSontaLeaders();\r\n    },[]);\r\n\r\n    const loadSontaLeaders = () => {\r\n\r\n        setLoading(true);\r\n        return axios.get(`${BASE_URL}/react_admin/admin/sonta_leaders`)\r\n              .then((response) => \r\n              {\r\n                \r\n                setSontaLeaders(response.data.sonta_leaders);\r\n                \r\n                setLoading(false);\r\n    \r\n              });\r\n      }\r\n\r\n    return (\r\n        <>\r\n          <Header />\r\n            <Container className=\" mt--7\" fluid>\r\n                <Row>\r\n                    <div className=\"col\">\r\n                        <Card className=\" shadow\">\r\n                            <CardHeader className=\" bg-transparent\">\r\n                            <h3 className=\" mb-0\">Sonta Leaders - {sonta_leaders.length}</h3>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <Row className=\" icon-examples\">\r\n                                <PlainList\r\n                                    list={sonta_leaders}\r\n                                    renderItem={(item, index) => <RenderStudentItem item={item} key={index}/>}\r\n                                    renderWhenEmpty={() => <div>Loading ...</div>}\r\n                                    renderOnScroll\r\n                                />\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n\r\n}","import React, {useState, useEffect} from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Container,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport Header from \"components/Headers/Header.js\";\r\nimport {PlainList} from 'flatlist-react';\r\n\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\nimport RenderStudentItem from \"./student_item\";\r\n\r\nimport axios from 'axios';\r\n\r\nexport default function StudentBacentaLeader(){\r\n\r\n    const [bacentaLeaders, setBacentaLeaders] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        loadBacentaleaders();\r\n    },[]);\r\n\r\n    const loadBacentaleaders = () => {\r\n\r\n        setLoading(true);\r\n        return axios.get(`${BASE_URL}/admin_app/bacenta_leaders`)\r\n              .then((response) => \r\n              {\r\n                setBacentaLeaders(response.data.bacenta_leaders);\r\n                \r\n                setLoading(false);\r\n    \r\n              });\r\n      }\r\n\r\n    return (\r\n        <>\r\n          <Header />\r\n            <Container className=\" mt--7\" fluid>\r\n                <Row>\r\n                    <div className=\"col\">\r\n                        <Card className=\" shadow\">\r\n                            <CardHeader className=\" bg-transparent\">\r\n                            <h3 className=\" mb-0\">Bacenta Leader(s) - {bacentaLeaders.length}</h3>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <Row className=\" icon-examples\">\r\n                                <PlainList\r\n                                    list={bacentaLeaders}\r\n                                    renderItem={(item, index) => <RenderStudentItem item={item} key={index}/>}\r\n                                    renderWhenEmpty={() => <div>Loading ...</div>}\r\n                                    renderOnScroll\r\n                                />\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}","import React, {useState, useEffect} from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Container,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport Header from \"components/Headers/Header.js\";\r\nimport {PlainList} from 'flatlist-react';\r\n\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\nimport RenderStudentItem from \"./student_item\";\r\n\r\nimport axios from 'axios';\r\n\r\nexport default function StudentChurchPlanters(){\r\n\r\n    const [churchPlanters, setChurchPlanters] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        loadChurchPlanters();\r\n    },[]);\r\n\r\n    const loadChurchPlanters = () => {\r\n\r\n        setLoading(true);\r\n        return axios.get(`${BASE_URL}/react_admin/admin/church_planters`)\r\n              .then((response) => \r\n              {\r\n                \r\n                setChurchPlanters(response.data.church_planters);\r\n                setLoading(false);\r\n    \r\n              });\r\n      }\r\n\r\n    return (\r\n        <>\r\n          <Header />\r\n            <Container className=\" mt--7\" fluid>\r\n                <Row>\r\n                    <div className=\"col\">\r\n                        <Card className=\" shadow\">\r\n                            <CardHeader className=\" bg-transparent\">\r\n                            <h3 className=\" mb-0\">Church Planters - {churchPlanters.length}</h3>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <Row className=\" icon-examples\">\r\n                                <PlainList\r\n                                    list={churchPlanters}\r\n                                    renderItem={(item, index) => <RenderStudentItem item={item} key={index}/>}\r\n                                    renderWhenEmpty={() => <div>Loading ...</div>}\r\n                                    renderOnScroll\r\n                                />\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport UserHeader from \"components/Headers/UserHeader.js\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\nimport { Badge } from \"reactstrap\";\r\nimport { Image, List, Placeholder } from 'semantic-ui-react';\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Reveal, Table } from 'semantic-ui-react'\r\n\r\n//import RenderStudentSummary from \"profile_summaries\";\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Container,\r\n    Row,\r\n    Col\r\n  } from \"reactstrap\";\r\n\r\nexport default function Student_Profile_Detail({student_id}){\r\n\r\n    const [studentProfileInformation, setStudentProfileInformation] = useState({});\r\n    const [activeSummaryDetail, setActiveDetail] = useState(\"Click on a Summary to show Detail\");\r\n    const [chartData, setChartData] = useState([]);\r\n    const [chartLabels, setChartLabels] = useState([]);\r\n    const [chartTitle, setChartTitle] = useState(\"\");\r\n    const [chartTableVisibilty, setChartTableVisibility] = useState(false);\r\n\r\n    let location = useLocation();\r\n\r\n    useEffect(() => {\r\n        loadStudentProfile();\r\n    },[]);\r\n\r\n    const loadStudentProfile = () => {\r\n        \r\n        return axios.get(`${BASE_URL}/react_admin${location.pathname}`)\r\n          .then((response) => \r\n          {\r\n            console.log(response.data);\r\n            setStudentProfileInformation(response.data);\r\n          });\r\n    }\r\n\r\n    const RenderStudentSummary = () => {\r\n\r\n      return (\r\n        (typeof studentProfileInformation.student_profile !== 'undefined') ?\r\n        <List divided selection verticalAlign='middle'>  \r\n            <RenderPrayerSummary prayer_logs={studentProfileInformation.student_profile?.prayer_logs}/>\r\n            <RenderVisitationSummary visitation_logs={studentProfileInformation.student_profile?.sheep_seeking}/>\r\n            <RenderCounsellingSummary counselling_logs={studentProfileInformation.student_profile?.counsellings}/>\r\n            <RenderOutreachSummary outreach_logs={studentProfileInformation.student_profile?.outreach}/>\r\n            <RenderBussingSummary bussing_logs={studentProfileInformation?.student_bussing_history}/>\r\n            <RenderCenterServiceSummary center_services={studentProfileInformation.student_profile?.student_center_service} />\r\n        </List>\r\n        :\r\n        <div className=\"ui placeholder\">\r\n          <div className=\"image header\">\r\n            <div className=\"line\"></div>\r\n            <div className=\"line\"></div>\r\n          </div>\r\n          <div className=\"image header\">\r\n            <div className=\"line\"></div>\r\n            <div className=\"line\"></div>\r\n          </div>\r\n          <div className=\"image header\">\r\n            <div className=\"line\"></div>\r\n            <div className=\"line\"></div>\r\n          </div>\r\n          <div className=\"image header\">\r\n            <div className=\"line\"></div>\r\n            <div className=\"line\"></div>\r\n          </div>\r\n        </div> \r\n        \r\n      );\r\n    }\r\n\r\n    const RenderMembers = () => {\r\n      //get members\r\n      return (\r\n        (typeof studentProfileInformation.student_profile !== 'undefined') ?\r\n          <List>\r\n            {studentProfileInformation.student_profile.members.map((member, index) => \r\n                <List.Item key={index} style={{padding: 10}}>\r\n                  <Image circular src={`http://anagkazo.firstlovegallery.com/${member.photo_url}`} size=\"mini\"/>\r\n                  <List.Content>\r\n                    <List.Header as='a'>{member.name}</List.Header>\r\n                    <List.Description>\r\n                      {member.phone}\r\n                    </List.Description>\r\n                  </List.Content>\r\n                </List.Item>\r\n              )\r\n            }\r\n          </List>\r\n          :\r\n          \"\"\r\n      );\r\n    }\r\n\r\n    const RenderPrayerSummary = ({prayer_logs}) => {\r\n      const prayer_hours_sum = prayer_logs.reduce((prev, cur) => prev + cur.number_of_hours, 0);\r\n      \r\n      return (\r\n      <List.Item\r\n        onClick = {() => {\r\n          setActiveDetail(\"Prayer Logs\");\r\n          setChartTitle(\"Prayer Chart\");\r\n\r\n          setChartData(prayer_logs.map((o) => o.number_of_hours));\r\n\r\n          setChartLabels(\r\n            prayer_logs.map((o) => new Date(o.date_prayed.substring(0, o.date_prayed.indexOf(\" \")))\r\n            .toLocaleDateString('en-US', {year: 'numeric', month: 'short', day: 'numeric'})\r\n            )\r\n          );\r\n        }}\r\n      >\r\n        <List.Content floated='right'>\r\n          {prayer_hours_sum}\r\n        </List.Content>\r\n        <Image avatar src='http://www.clker.com/cliparts/L/A/1/9/z/W/praying-hands-rt.svg' />\r\n        <List.Content>\r\n          <List.Header>Prayer (Number of Hours): </List.Header>\r\n        </List.Content>\r\n      </List.Item>\r\n      );\r\n\r\n    }\r\n\r\n    const RenderVisitationSummary = ({visitation_logs}) => {\r\n      const visitations = visitation_logs.length;\r\n      \r\n      return (\r\n        <List.Item\r\n          onClick = {() => {\r\n            setActiveDetail(\"Visitations\");\r\n            setChartTitle(\"Visitations\");\r\n\r\n            let sumedVisitationLogs = {};\r\n            let prev = visitation_logs[0];\r\n            let sum = 0;\r\n\r\n            for(let i = 0; i < visitation_logs.length; i++){\r\n              if (prev.date === visitation_logs[i].date) {\r\n                sum++;\r\n              }else{\r\n                sum = 1;\r\n              }\r\n\r\n              sumedVisitationLogs[visitation_logs[i].date] = sum;\r\n              prev = visitation_logs[i];\r\n            }\r\n\r\n            setChartLabels(\r\n              Object.keys(sumedVisitationLogs).map((o) => new Date(o)\r\n                        .toLocaleDateString('en-US', {year: 'numeric', month: 'short', day: 'numeric'}))\r\n            )\r\n\r\n            setChartData(Object.values(sumedVisitationLogs));\r\n            \r\n          }}\r\n        > \r\n          <List.Content floated='right'>\r\n            {visitations}\r\n          </List.Content>\r\n          <Image avatar src='https://image.flaticon.com/icons/png/512/10/10694.png' />\r\n          <List.Content>\r\n            <List.Header>Number of Visitations: </List.Header>\r\n          </List.Content>\r\n        </List.Item>\r\n        );\r\n    }\r\n\r\n    const RenderCounsellingSummary = ({counselling_logs}) => {\r\n      const counsellings = counselling_logs.length;\r\n      return (\r\n        <List.Item\r\n          onClick = {() => {\r\n            setActiveDetail(\"Counselling\");\r\n            setChartTitle(\"Counselling\");\r\n\r\n            let summedCounsellings = {};\r\n            let prev = counselling_logs[0];\r\n            let sum = 0;\r\n\r\n            for(let i = 0; i < counselling_logs.length; i++){\r\n              if (prev.date === counselling_logs[i].date) {\r\n                sum++;\r\n              }else{\r\n                sum = 1;\r\n              }\r\n\r\n              summedCounsellings[counselling_logs[i].date] = sum;\r\n              prev = counselling_logs[i];\r\n            }\r\n\r\n            setChartLabels(\r\n              Object.keys(summedCounsellings).map((o) => new Date(o)\r\n                        .toLocaleDateString('en-US', {year: 'numeric', month: 'short', day: 'numeric'}))\r\n            )\r\n\r\n            setChartData(Object.values(summedCounsellings));\r\n\r\n          }}\r\n        >\r\n          <List.Content floated='right'>\r\n            {counsellings}\r\n          </List.Content>\r\n          <Image avatar src='https://listimg.pinclipart.com/picdir/s/35-357266_benefit-counseling-pierce-benefits-interview-icon-png-clipart.png' />\r\n          <List.Content>\r\n            <List.Header>Number of Counsellings: </List.Header>\r\n          </List.Content>\r\n        </List.Item>\r\n        );\r\n    }\r\n\r\n    const RenderOutreachSummary = ({outreach_logs}) => {\r\n      const outreaches = outreach_logs.length;\r\n      return (\r\n        <List.Item onClick = \r\n        {() => {\r\n            setActiveDetail(\"Outreach\");\r\n            setChartTitle(\"Outreach\");\r\n\r\n            let summedOutreaches = {};\r\n            let prev = outreach_logs[0];\r\n            let sum = 0;\r\n\r\n            for(let i = 0; i < outreach_logs.length; i++){\r\n              if (prev.date === outreach_logs[i].date) {\r\n                sum++;\r\n              }else{\r\n                sum = 1;\r\n              }\r\n\r\n              summedOutreaches[outreach_logs[i].date] = sum;\r\n              prev = outreach_logs[i];\r\n            }\r\n\r\n            setChartLabels(\r\n              Object.keys(summedOutreaches).map((o) => new Date(o)\r\n                        .toLocaleDateString('en-US', {year: 'numeric', month: 'short', day: 'numeric'}))\r\n            )\r\n\r\n            setChartData(Object.values(summedOutreaches));\r\n\r\n\r\n        }}>\r\n          <List.Content floated='right'>\r\n            {outreaches}\r\n          </List.Content>\r\n          <Image avatar src='https://static.thenounproject.com/png/1151430-200.png' />\r\n          <List.Content>\r\n            <List.Header>Souls Won: </List.Header>\r\n          </List.Content>\r\n        </List.Item>\r\n        );\r\n    }\r\n\r\n    const RenderBussingSummary = ({bussing_logs}) => {\r\n      const bussing_average = (bussing_logs.reduce((prev, cur) => prev + cur.value, 0) / bussing_logs.length).toFixed(0);\r\n      return (\r\n        <List.Item onClick = \r\n        {() => {\r\n          setActiveDetail(\"Bussing\");\r\n          setChartTitle(\"Bussing\");\r\n\r\n          setChartLabels(bussing_logs.map((o) => \r\n            new Date(o.title)\r\n            .toLocaleDateString('en-US', {year: 'numeric', month: 'short', day: 'numeric'}))\r\n            );\r\n\r\n          setChartData(bussing_logs.map((o) => o.value));\r\n\r\n        }}>\r\n          <List.Content floated='right'>\r\n            {bussing_average}\r\n          </List.Content>\r\n          <Image avatar src='https://simg.nicepng.com/png/small/51-517562_image-set-png-128x128-px-shuttle-bus-icon.png' />\r\n          <List.Content>\r\n            <List.Header>Bussing Average: </List.Header>\r\n          </List.Content>\r\n        </List.Item>\r\n        );\r\n    }\r\n\r\n    const RenderCenterServiceSummary = ({center_services}) => {\r\n      const center_service_average = (center_services.reduce((prev, cur) => prev + cur.number_of_souls, 0) / center_services.length).toFixed(0);\r\n      return (\r\n        <List.Item onClick={() => {\r\n          setActiveDetail(\"Center Service\");\r\n          setChartTitle(\"Center Services\");\r\n\r\n          setChartLabels(center_services.map((o) => \r\n            new Date(o.date_of_service)\r\n            .toLocaleDateString('en-US', {year: 'numeric', month: 'short', day: 'numeric'}))\r\n            );\r\n\r\n          setChartData(center_services.map((o) => o.number_of_souls));\r\n\r\n        }}>\r\n          <List.Content floated='right'>\r\n            {center_service_average}\r\n          </List.Content>\r\n          <Image avatar src='https://cdn.iconscout.com/icon/premium/png-128-thumb/church-339-556352.png' />\r\n          <List.Content>\r\n            <List.Header>Center Service Average: </List.Header>\r\n          </List.Content>\r\n        </List.Item>\r\n      );\r\n    }\r\n\r\n    const RenderBarChart = () => {\r\n\r\n      return (\r\n        <Bar\r\n            data={{\r\n                    labels: chartLabels,\r\n                    datasets: [\r\n                    {\r\n                        type: 'bar',\r\n                        label: chartTitle,\r\n                        borderColor: 'rgb(54, 162, 235)',\r\n                        borderWidth: 2,\r\n                        fill: false,\r\n                        data: chartData,\r\n                    }]\r\n                }}\r\n        />\r\n      );\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <UserHeader student_name={studentProfileInformation.student_profile?.name || \"\"} photo_url={studentProfileInformation.student_profile?.photo_url}/>\r\n        <Container className=\"mt--7\" fluid>\r\n          <Row>\r\n            <Col className=\"order-xl-1 mb-5 mb-xl-0\" xl=\"4\">\r\n              <Card className=\"card-profile shadow\">\r\n                <Row className=\"justify-content-center\">\r\n                  <Col className=\"order-lg-2\" lg=\"3\">\r\n                    <div className=\"card-profile-image\">\r\n                      <a href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                        {\r\n                        (typeof studentProfileInformation !== 'undefined') ?\r\n                          <img\r\n                            alt=\"...\"\r\n                            src={`https://anagkazo.firstlovegallery.com/${studentProfileInformation.student_profile?.photo_url}`}\r\n                          />\r\n                        :\r\n                        <Placeholder>\r\n                          <Placeholder.Image square />\r\n                        </Placeholder>\r\n                        }\r\n                      </a>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    {/* <Button\r\n                      className=\"mr-4\"\r\n                      color=\"info\"\r\n                      href=\"#pablo\"\r\n                      onClick={e => e.preventDefault()}\r\n                      size=\"sm\"\r\n                    >\r\n                      Connect\r\n                    </Button> */}\r\n                    {/* <Button\r\n                      className=\"float-right\"\r\n                      color=\"default\"\r\n                      href=\"#pablo\"\r\n                      onClick={e => e.preventDefault()}\r\n                      size=\"sm\"\r\n                    >\r\n                      Message\r\n                    </Button> */}\r\n                  </div>\r\n                </CardHeader>\r\n                <CardBody className=\"pt-0 pt-md-4\">\r\n                  <Row>\r\n                    <div className=\"col\">\r\n                      <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\r\n                        <div>\r\n                          <span className=\"heading\">{typeof studentProfileInformation?.student_profile === 'undefined' ? 0 : studentProfileInformation.student_profile.members.length}</span>\r\n                          <span className=\"description\">Members</span>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"heading\">0</span>\r\n                          <span className=\"description\">Points</span>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"heading\">{(typeof studentProfileInformation.student_bussing_history === 'undefined' ? 0:studentProfileInformation.student_bussing_history.reduce((prev, cur) => prev + cur.value, 0) / studentProfileInformation.student_bussing_history.length).toFixed(2)}</span>\r\n                          <span className=\"description\">Ave Bussing</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Row>\r\n                  <div className=\"text-center\">\r\n                    <h3>\r\n                      {studentProfileInformation.student_profile?.name}\r\n                      <span className=\"font-weight-light\">, {studentProfileInformation.student_profile?.age}</span>\r\n                    </h3>\r\n                    <div className=\"h5 font-weight-300\">\r\n                      <i className=\"ni location_pin mr-2\" />\r\n                     {studentProfileInformation.student_profile?.home_church}, {studentProfileInformation.student_profile?.country}\r\n                    </div>\r\n                    <div className=\"h5 mt-4\">\r\n                      <i className=\"ni business_briefcase-24 mr-2\" />\r\n                      {studentProfileInformation.student_profile?.class}\r\n                    </div>\r\n                    <div>\r\n                      <i className=\"ni education_hat mr-2\" />\r\n                      {\r\n                        studentProfileInformation.student_profile?.student_roles?.map((item, index) => {\r\n                          return (\r\n                            <Badge color=\"success\" pill key={index}>\r\n                              {item.pastoral_role.role}\r\n                            </Badge>\r\n                            )\r\n                        })\r\n                      }\r\n                      <br />\r\n                      <Badge color=\"info\" pill>\r\n                        {studentProfileInformation.student_profile?.center?.center_name}\r\n                      </Badge>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    <p>\r\n                      {\r\n                        studentProfileInformation?.student_profile?.student_remarks\r\n                      }\r\n                      \r\n                    </p>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"8\">\r\n              <Card className=\"bg-secondary shadow\">\r\n                <CardHeader className=\"bg-white border-0\">\r\n                  <Row className=\"align-items-center\">\r\n                    <Col xs=\"8\">\r\n                      <h3 className=\"mb-0\">Summary</h3>\r\n                    </Col>\r\n                    <Col className=\"text-right\" xs=\"4\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        href=\"#pablo\"\r\n                        onClick={e => e.preventDefault()}\r\n                        size=\"sm\"\r\n                      >\r\n                        Details\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <RenderStudentSummary />\r\n                </CardBody>\r\n            </Card>\r\n          </Col>\r\n          {/*  */}\r\n          <Col className=\"order-xl-3 mb-5 mb-xl-0\" xl=\"8\">\r\n            <Card className=\"bg-secondary shadow\">\r\n                <CardHeader className=\"bg-white border-0\">\r\n                  <Row className=\"align-items-center\">\r\n                    <Col xs=\"8\">\r\n                      <h3 className=\"mb-0\">Ministerial Skills - {activeSummaryDetail} </h3>\r\n                    </Col>\r\n                    <Col className=\"text-right\" xs=\"4\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={e => setChartTableVisibility(prev => !prev)}\r\n                        size=\"sm\"\r\n                      >\r\n                        Switch Chart\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  \r\n                      <Table celled >\r\n                        <Table.Header>\r\n                          <Table.Row>\r\n                            <Table.HeaderCell singleLine><h4>Date</h4></Table.HeaderCell>\r\n                            <Table.HeaderCell><h4>Value</h4></Table.HeaderCell>\r\n                          </Table.Row>\r\n                        </Table.Header>\r\n\r\n                      <Table.Body>\r\n                        {\r\n                          chartData.map((item, index) => \r\n                              <Table.Row>\r\n                                <Table.Cell>\r\n                                    {chartLabels[index]}\r\n                                </Table.Cell>\r\n                                <Table.Cell>\r\n                                    {item}\r\n                                </Table.Cell>\r\n                              </Table.Row>\r\n                          )\r\n                        }\r\n                      </Table.Body>\r\n                      </Table>\r\n                      <div className=\"chart\">\r\n                        <RenderBarChart />\r\n                      </div>\r\n                </CardBody>\r\n            </Card>\r\n          </Col>\r\n          \r\n          <Col className=\"order-xl-4 mb-5 mb-xl-0\" xl=\"4\">\r\n              <Card className=\"bg-secondary shadow\">\r\n                <CardHeader className=\"bg-white border-0\">\r\n                  <Row className=\"align-items-center\">\r\n                    <Col xs=\"8\">\r\n                      <h3 className=\"mb-0\">Members</h3>\r\n                    </Col>\r\n                    <Col className=\"text-right\" xs=\"4\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        href=\"#pablo\"\r\n                        onClick={e => e.preventDefault()}\r\n                        size=\"sm\"\r\n                      >\r\n                        Details\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <RenderMembers />\r\n                </CardBody>\r\n            </Card>\r\n          </Col>\r\n\r\n        </Row>\r\n      </Container>\r\n    </>\r\n    );\r\n\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport Header_Plain from 'components/Headers/Header_plain';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Row,\r\n    Col,\r\n    Label\r\n  } from \"reactstrap\";\r\n  import { Bar } from \"react-chartjs-2\";\r\n  import { Table } from 'semantic-ui-react';\r\n  import DateRangePicker from 'react-bootstrap-daterangepicker';\r\n  import moment from 'moment';\r\n  import Typography from '@material-ui/core/Typography';\r\n  import Link from '@material-ui/core/Link';\r\n  import { Link as Url_link } from \"react-router-dom\";\r\n  import axios from 'axios';\r\n  import { useLocation } from \"react-router-dom\";\r\n  import {BASE_URL} from \"../../../config/baseUrl\";\r\n  import Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\n\r\n\r\nexport default function ConstituencyDetail(){\r\n    const [bussingInfo, setBussingInfo] = useState([]);\r\n    const [chartLabels, setChartLabels] = useState([]);\r\n    const [chartValues, setChartValues] = useState([]);\r\n    const [regionInfo, setRegionInfo] = useState(\"\");\r\n    const [bussingDate, setBussingDate] = useState(\"\");\r\n    \r\n\r\n    const location = useLocation();\r\n    const pathName = location.pathname\r\n    const query = location.search;\r\n    const myParams = new URLSearchParams(query);\r\n\r\n    useEffect(() => {\r\n        //get the chart values for a particular constituency\r\n        setBussingDate(myParams.get('date'));\r\n\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        loadConstituencyDetail(pathName+\"?date=\"+bussingDate);\r\n    }, [bussingDate]);\r\n\r\n    useEffect(() => {\r\n        setChartLabels(Object.keys(bussingInfo));\r\n        \r\n        const bussingVals = Object.keys(bussingInfo).map((item) => {\r\n            return bussingInfo[item].students.reduce((accm, curVal) => {\r\n                return accm + (curVal?.bussingInfo?.number_bussed || 0)\r\n            },0) ;\r\n        });\r\n        \r\n        setChartValues(bussingVals);\r\n\r\n    },[bussingInfo]);\r\n\r\n    const loadConstituencyDetail = (pathname) => {\r\n        return axios.get(`${BASE_URL}/react_admin${pathname}`)\r\n          .then((response) => \r\n          {\r\n            setRegionInfo(response.data.region);\r\n            setBussingInfo(response.data.bussingInfo);\r\n          });\r\n    }\r\n\r\n    const  handleClick = (event) => {\r\n        event.preventDefault();\r\n        console.info('You clicked a breadcrumb.');\r\n    }\r\n    \r\n    return (\r\n        <>\r\n           \r\n            <Header_Plain title={\"Constituency Rep: \"+ regionInfo?.region_head || \"Loading ...\"}/>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                <Link color=\"inherit\" to={'/admin/index'} href=\"/admin/index\">\r\n                    Dashboard\r\n                </Link>\r\n                <Typography color=\"textPrimary\">Constituency Bussing Details</Typography>\r\n            </Breadcrumbs>\r\n            <div style={{ width: '100%' }}>\r\n                <Card className=\"shadow\">\r\n                    <CardHeader className=\" bg-transparent\">\r\n                        <CardBody style={{ width: '100%' }}>\r\n                        <Bar\r\n                            data={{\r\n                                labels: chartLabels,\r\n                                datasets: [\r\n                                {\r\n                                    type: 'bar',\r\n                                    label: 'Town Bussing',\r\n                                    borderColor: 'rgb(54, 162, 235)',\r\n                                    backgroundColor: 'rgb(255, 99, 132)',\r\n                                    borderWidth: 1,\r\n                                    data: chartValues,\r\n                                }]\r\n                            }}\r\n                            options={\r\n                                {\r\n                                    scales: {\r\n                                        yAxes: [\r\n                                        {\r\n                                            ticks: {\r\n                                              beginAtZero: true,\r\n                                            },\r\n                                          },\r\n                                        ],\r\n                                    },\r\n                                    maintainAspectRatio:true,\r\n                                    tooltips: {\r\n                                        callbacks: {\r\n                                            footer: (tooltipItems) => {\r\n                                                let centerLeader;\r\n                                                tooltipItems.forEach(function(tooltipItem) {\r\n                                                    centerLeader = bussingInfo[tooltipItem.label].students.find(item => item.id === bussingInfo[tooltipItem.label].centerLeader.student_id);\r\n                                                });\r\n                                                return 'Center Leader: '+ (centerLeader?.name || \"Unknown\");\r\n                                            },\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            />\r\n                        <Row className=\"mt-5\">\r\n                            <Col className=\"mb-5 mb-xl-0\" >\r\n                            <div className=\"col-md-4\" >\r\n                                <Label>Choose Date</Label>\r\n                                <DateRangePicker\r\n                                    initialSettings={{\r\n                                        singleDatePicker: true,\r\n                                        showDropdowns: true,\r\n                                        minYear: 2018,\r\n                                        maxYear: parseInt(moment().format('YYYY'), 10),\r\n                                        locale: {\r\n                                            format: 'D-MMM-YYYY'\r\n                                        }\r\n                                    }}\r\n                                    onApply={\r\n                                        (e, obj) => {\r\n                                            setBussingDate(obj.startDate.format(\"YYYY-MM-DD\"));\r\n                                        }\r\n                                    }\r\n                                >    \r\n                                    <input type=\"text\" className=\"form-control col-4\" value={bussingDate} readOnly/>\r\n                                </DateRangePicker>\r\n                            </div>\r\n\r\n                                <Table celled>\r\n                                    <Table.Header>\r\n                                        <Table.Row>\r\n                                            <Table.HeaderCell>Center</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Student</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Number Bussed</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Present</Table.HeaderCell>\r\n                                        </Table.Row>\r\n                                    </Table.Header>\r\n\r\n                                    <Table.Body>\r\n                                        {\r\n                                            Object.keys(bussingInfo).sort().map((item, index) => {\r\n                                                return (bussingInfo[item].students.map((itm, indx) => {\r\n                                                    return (<Table.Row key={indx}>\r\n                                                        <Table.Cell >\r\n                                                            {itm.center.center_name}\r\n                                                        </Table.Cell>\r\n                                                        \r\n                                                        <Table.Cell>\r\n                                                        <Url_link \r\n                                                            to={`/admin/student/${itm.id}/profile`}\r\n                                                        >{itm.name}\r\n                                                        </Url_link>\r\n                                                        </Table.Cell>\r\n                                                        <Table.Cell>{itm?.bussingInfo?.number_bussed}</Table.Cell>\r\n                                                        <Table.Cell error={!itm?.bussingInfo?.present}>{itm?.bussingInfo?.present == 1 ? \"Present\" : \"Absent\"}</Table.Cell>\r\n                                                    </Table.Row>)\r\n                                                }))\r\n                                            })\r\n                                        }\r\n                                    </Table.Body>\r\n                                </Table>\r\n                            </Col>\r\n                            \r\n                        </Row>\r\n                        </CardBody>\r\n                    </CardHeader>\r\n                </Card>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport Header_Plain from 'components/Headers/Header_plain';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Row,\r\n    Col,\r\n    Label\r\n  } from \"reactstrap\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Icon, Label as SmLabel, Menu, Table } from 'semantic-ui-react';\r\nimport moment from 'moment';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Link as Url_link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {BASE_URL} from \"../../../config/baseUrl\"; \r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\n\r\nexport default function ConstituencyCenterServiceDetail(){\r\n    const location = useLocation();\r\n    const pathName = location.pathname\r\n    const query = location.search;\r\n    const myParams = new URLSearchParams(query);\r\n\r\n    const [centerServiceInfo, setCenterServiceInfo] = useState([]);\r\n    const [chartLabels, setChartLabels] = useState([]);\r\n    const [chartValues, setChartValues] = useState([]);\r\n    const [regionInfo, setRegionInfo] = useState(\"\");\r\n    const [centerServiceDate, setCenterServiceDate] = useState(() => {\r\n        return myParams.get('date');\r\n    });\r\n\r\n    useEffect(() => {\r\n        loadConstituencyCenterServiceDetail(pathName+\"?date=\"+centerServiceDate);\r\n\r\n    },[centerServiceDate]);\r\n\r\n    useEffect(() => {\r\n        setChartLabels(Object.keys(centerServiceInfo));\r\n        \r\n        const centerServiceAttnValues = Object.keys(centerServiceInfo).map((item) => {\r\n            return centerServiceInfo[item].students.reduce((accm, curVal) => {\r\n                return accm + (curVal?.centerServiceInfo?.number_of_souls || 0)\r\n            },0) ;\r\n        });\r\n        \r\n        setChartValues(centerServiceAttnValues);\r\n\r\n    },[centerServiceInfo]);\r\n\r\n    const loadConstituencyCenterServiceDetail = (pathname) => {\r\n\r\n        return axios.get(`${BASE_URL}/react_admin${pathname}`)\r\n          .then((response) => \r\n          {\r\n            console.log(response.data.centerServiceInfo);\r\n            setRegionInfo(response.data.region);\r\n            setCenterServiceInfo(response.data.centerServiceInfo);\r\n          });\r\n    }\r\n\r\n    return (\r\n        <>\r\n           \r\n           <Header_Plain title={\"Constituency Rep: \"+ regionInfo?.region_head || \"Loading ...\"}/>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                <Link color=\"inherit\" to={'/admin/index'} href=\"/\">\r\n                    Dashboard\r\n                </Link>\r\n                <Typography color=\"textPrimary\">Constituency Center Service Details</Typography>\r\n            </Breadcrumbs>\r\n              <div style={{ width: '100%' }}>\r\n                <Card className=\"shadow\">\r\n                    <CardHeader className=\" bg-transparent\">\r\n                        <CardBody style={{ width: '100%' }}>\r\n                        <Bar\r\n                            data={{\r\n                                labels: chartLabels,\r\n                                datasets: [\r\n                                {\r\n                                    type: 'bar',\r\n                                    label: 'Town Bussing',\r\n                                    borderColor: 'rgb(54, 162, 235)',\r\n                                    backgroundColor: 'rgb(255, 99, 132)',\r\n                                    borderWidth: 1,\r\n                                    data: chartValues,\r\n                                }]\r\n                            }}\r\n                            options={\r\n                                {\r\n                                    scales: {\r\n                                        yAxes: [\r\n                                        {\r\n                                            ticks: {\r\n                                              beginAtZero: true,\r\n                                            },\r\n                                          },\r\n                                        ],\r\n                                    },\r\n                                    maintainAspectRatio:true,\r\n                                    tooltips: {\r\n                                        callbacks: {\r\n                                            footer: (tooltipItems) => {\r\n                                                let centerLeader;\r\n                                                tooltipItems.forEach(function(tooltipItem) {\r\n                                                    centerLeader = centerServiceInfo[tooltipItem.label].students.find(item => item.id === centerServiceInfo[tooltipItem.label].centerLeader.student_id);\r\n                                                });\r\n                                                return 'Center Leader: '+ (centerLeader?.name || \"Unknown\");\r\n                                            },\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            />\r\n                        <Row className=\"mt-5\">\r\n                            <Col className=\"mb-5 mb-xl-0\" >\r\n                            <div className=\"col-md-4\" >\r\n                                <Label>Choose Date</Label>\r\n                                <DateRangePicker\r\n                                    initialSettings={{\r\n                                        singleDatePicker: true,\r\n                                        showDropdowns: true,\r\n                                        minYear: 2018,\r\n                                        maxYear: parseInt(moment().format('YYYY'), 10),\r\n                                        locale: {\r\n                                            format: 'D-MMM-YYYY'\r\n                                        }\r\n                                    }}\r\n                                    onApply={\r\n                                        (e, obj) => {\r\n                                            setCenterServiceDate(obj.startDate.format(\"YYYY-MM-DD\"));\r\n                                        }\r\n                                    }\r\n                                >    \r\n                                    <input type=\"text\" className=\"form-control col-4\" value={centerServiceDate} readOnly/>\r\n                                </DateRangePicker>\r\n                            </div>\r\n                            <Table celled>\r\n                                    <Table.Header>\r\n                                        <Table.Row>\r\n                                            <Table.HeaderCell>Center</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Student</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Center Attendance</Table.HeaderCell>\r\n                                        </Table.Row>\r\n                                    </Table.Header>\r\n\r\n                                 <Table.Body>\r\n                                        {\r\n                                            Object.keys(centerServiceInfo).sort().map((item, index) => {\r\n                                                return (centerServiceInfo[item].students.map((itm, indx) => {\r\n                                                    return (<Table.Row key={indx}>\r\n                                                        <Table.Cell >\r\n                                                            {itm.center.center_name}\r\n                                                        </Table.Cell>\r\n                                                        \r\n                                                        <Table.Cell>\r\n                                                        <Url_link \r\n                                                            to={`/admin/student/${itm.id}/profile`}\r\n                                                        >{itm.name}\r\n                                                        </Url_link>\r\n                                                        </Table.Cell>\r\n                                                        <Table.Cell>{itm?.centerServiceInfo?.number_of_souls}</Table.Cell>\r\n                                                    </Table.Row>)\r\n                                                }))\r\n                                            })\r\n                                        }\r\n                                    </Table.Body>\r\n                                </Table>\r\n                            </Col>\r\n                            \r\n                        </Row>\r\n                        </CardBody>\r\n                    </CardHeader>\r\n                </Card>\r\n            </div> \r\n        </>\r\n    );\r\n\r\n}","import React from \"react\";\r\nimport Header_Plain from \"components/Headers/Header_plain\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {Breadcrumbs, Typography, Link} from '@material-ui/core/';\r\nimport {\r\n    Container\r\n  } from \"reactstrap\";\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\nimport SSMG_ChartDisplay from \"./ssmg_chart_display\";\r\nimport {ssmg_array} from \"./campaigns\";\r\n\r\nexport default function ConstituencySSMG() {\r\n \r\n    const location = useLocation();\r\n    const pathName = location.pathname;\r\n    const requestUrl = BASE_URL+pathName;\r\n\r\n    const query = location.search;\r\n    const myParams = new URLSearchParams(query);\r\n\r\n    return (\r\n        <>\r\n            <Header_Plain title={myParams.get('constituency')}/>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                \r\n                    <Link color=\"inherit\" to={'/admin/index'} href=\"/admin/index\">\r\n                        Dashboard\r\n                    </Link>\r\n                \r\n                \r\n                    <Link color=\"inherit\" to={'/admin/ssmg'} href=\"/admin/ssmg\">\r\n                        SSMG Home\r\n                    </Link>\r\n                \r\n                <Typography color=\"textPrimary\">SSMG Constituency Details</Typography>\r\n            </Breadcrumbs>\r\n            <Container>\r\n                {\r\n                    ssmg_array.map((item, index) => <SSMG_ChartDisplay key={index} ssmg_name={item} requestUrl={requestUrl} source={\"constituency ssmg\"}/>)\r\n                }\r\n            </Container>\r\n        </>\r\n    );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport Header_Plain from \"components/Headers/Header_plain\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {Breadcrumbs, Typography, Link} from '@material-ui/core/';\r\nimport {\r\n    Container\r\n  } from \"reactstrap\";\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\nimport SSMG_ChartDisplay from \"./ssmg_chart_display\";\r\nimport { ssmg_array } from \"./campaigns\";\r\n\r\n\r\nexport default function SSMGCampaigns() {\r\n    \r\n    const [constituencies, setConstituencies] = useState();\r\n\r\n    const location = useLocation();\r\n    const requestUrl = BASE_URL+\"/admin/ssmg/constituencies/\";\r\n\r\n    const query = location.search;\r\n    const myParams = new URLSearchParams(query);\r\n    let ssmg_find_text = myParams.get('ssmg_param');\r\n    if (ssmg_find_text === 'BasontaAttendance'){\r\n        ssmg_find_text += \"&basonta_field=\" + myParams.get('basonta_field')\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        getAllConstituencies();\r\n\r\n    },[]);\r\n\r\n    const getAllConstituencies = async () => {\r\n        const response = await axios.get(`${BASE_URL}/react_admin/admin/constituencies`);\r\n        setConstituencies(response.data);\r\n    }\r\n\r\n    const ssmg_name = ssmg_array.find((item) => item.requestParam === ssmg_find_text);\r\n    \r\n    return (\r\n        <>\r\n            <Header_Plain title={myParams.get('constituency')}/>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                \r\n                    <Link color=\"inherit\" to={'/admin/index'} href=\"/admin/index\">\r\n                        Dashboard\r\n                    </Link>\r\n                \r\n                \r\n                    <Link color=\"inherit\" to={'/admin/ssmg'} href=\"/admin/ssmg\">\r\n                        SSMG Home\r\n                    </Link>\r\n                \r\n                <Typography color=\"textPrimary\">SSMG Campaigns</Typography>\r\n            </Breadcrumbs>\r\n            <Container>\r\n                {\r\n                    constituencies && ssmg_name && constituencies.map((item, index) => <SSMG_ChartDisplay key={index} ssmg_name={ssmg_name} requestUrl={requestUrl+item.id} constituency={item} source=\"campaign ssmg\"/>)\r\n                }\r\n            </Container>\r\n        </>\r\n    );\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport Header_Plain from 'components/Headers/Header_plain';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardTitle,\r\n    CardBody,\r\n    Container,\r\n    Row,\r\n    Label\r\n  } from \"reactstrap\";\r\n  import { Bar } from \"react-chartjs-2\";\r\n  import {BASE_URL} from \"../../../config/baseUrl\";\r\n  import axios from 'axios';\r\n  import moment from 'moment';\r\n\r\nexport default function AllConstituencyCharts(){\r\n    const [allConstituencies, setAllConstituencies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        \r\n        getAllConstituencies();\r\n\r\n    },[]);\r\n\r\n    const getAllConstituencies = () => {\r\n\r\n        return axios.get(`${BASE_URL}/react_admin/admin/constituencies`)\r\n          .then((response) => \r\n          {\r\n            setAllConstituencies(response.data);\r\n          });\r\n\r\n    }\r\n\r\n    const RenderConstituencyBarChart = ({item}) => {\r\n        const [chartData, setChartData] = useState({});\r\n        const [chartDataArray, setChartDataArray] = useState([]);\r\n\r\n        \r\n\r\n        useEffect(() => {\r\n            \r\n            axios.get(`${BASE_URL}/react_admin/admin/constituencies_bussing_report?constituency_id=${item.id}`)\r\n            .then((response) => {\r\n                \r\n                setChartData(response.data);\r\n\r\n                setChartDataArray(response.data.months.map((m, index) => {\r\n                    let numberOfSundays = getNumberOfWeekday(new moment(response.data.year +\"-\"+(index + 1)+\"-\"+\"01\"), 0);\r\n                    return (parseInt(response.data.bussing.find(item => item.month === (index + 1))?.number_bussed || \"0\") / numberOfSundays).toFixed(0);\r\n                }));\r\n\r\n            });\r\n\r\n        },[]);\r\n\r\n    const getNumberOfWeekday = (date, weekday) => {\r\n        date.date(1);\r\n        var dif = (7 + (weekday - date.weekday()))%7+1;\r\n        \r\n        return Math.floor((date.daysInMonth()-dif) / 7)+1;\r\n    }\r\n\r\n        return (\r\n            <Card className=\" shadow\" body outline color=\"primary\">\r\n                <CardBody>\r\n                    <CardTitle tag=\"h5\">{item?.region_name}</CardTitle>\r\n                    {chartData && <Bar\r\n                        data={{\r\n                            labels: chartData.months,\r\n                            datasets: [\r\n                            {\r\n                                type: 'bar',\r\n                                label: `Town Bussing for ${item?.region_name} Constituency`,\r\n                                borderColor: 'rgb(54, 162, 235)',\r\n                                backgroundColor: 'rgb(255, 99, 132)',\r\n                                borderWidth: 1,\r\n                                data: chartDataArray\r\n                            }]\r\n                        }}\r\n                        options={\r\n                            {\r\n                                scales: {\r\n                                    yAxes: [\r\n                                    {\r\n                                        ticks: {\r\n                                            beginAtZero: true,\r\n                                        },\r\n                                        },\r\n                                    ],\r\n                                },\r\n                                maintainAspectRatio:true\r\n                            }\r\n                        }\r\n                        />\r\n                    }\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const RenderConstituencyLabel = () => {\r\n\r\n        return (\r\n            <Label>\r\n                Chart Name\r\n            </Label>\r\n        )\r\n\r\n    }\r\n\r\n    //show all the charts for a constituency\r\n    return (\r\n        <>\r\n            <Header_Plain title={\"All Constituency Chart on Monthly Basis\"}/>\r\n            <Container className=\" mt--7\" fluid>\r\n            <Row>\r\n                <div className=\"col\">\r\n                    <Card className=\" shadow\">\r\n                        <CardHeader className=\" bg-transparent\">\r\n                            <h3 className=\" mb-0\">{\"All Constituency Chart Summary\"}</h3>\r\n                    \r\n                        </CardHeader>\r\n                        <CardBody>\r\n                    \r\n                            {\r\n                                allConstituencies && allConstituencies.map(item => <RenderConstituencyBarChart key={item.id} item={item}/>)\r\n                            }\r\n                            \r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </Row>\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Container, Card, CardHeader, CardBody, Spinner\r\n  } from \"reactstrap\";\r\nimport {\r\n    DataGrid,\r\n    GridToolbarContainer,\r\n    GridToolbarExport,\r\n    \r\n  } from '@material-ui/data-grid';\r\nimport Header from \"components/Headers/Header.js\";\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\nimport axios from \"axios\";\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\n\r\nexport default function StudentAttn(){\r\n\r\n    const [selectedDate, setSelectedDate] = useState(\"\");\r\n    const [attn_data, setattn_data] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [dateString, setDateString] = useState(\"Select Date\");\r\n\r\n    const columns = [\r\n        { field: 'student_admission_number', headerName: 'Index Number', width: 200 },\r\n        { \r\n            field: 'student_name', headerName: 'Name', width: 290,\r\n        valueGetter: (params) =>`${params.row.student?.name}`        \r\n        },\r\n        { \r\n          field: 'class', \r\n          headerName: 'Class', width: 190,\r\n          valueGetter: (params) => `${params.row.student?.class}`\r\n      },\r\n        { \r\n            field: 'date_time', \r\n            headerName: 'Date', width: 190\r\n        },\r\n        {\r\n          field: 'created_at',\r\n          headerName: 'Time', \r\n          width: 190,\r\n          valueGetter: (params) => `${params.row.created_at.split(\" \")[1]}`\r\n        }\r\n    ]\r\n\r\n    useEffect(()=>{\r\n        if (dateString == \"Select Date\") return;\r\n        loadStudentAttn();\r\n   \r\n    },[dateString]);\r\n\r\n    const handleDateChange = (obj) => {\r\n        setDateString(obj.startDate.format(\"YYYY-MM-DD\"));\r\n      }\r\n\r\n    const loadStudentAttn = () => {\r\n\r\n        return axios.get(`${BASE_URL}/react_admin/admin/student_attn?date=${dateString}`)\r\n                .then((response) => \r\n                {\r\n                  setLoading(false);\r\n                  console.log(response.data);\r\n                  setattn_data(response.data);\r\n                });\r\n\r\n    }\r\n\r\n    const CustomToolbar = () => {\r\n        return (\r\n            <GridToolbarContainer>\r\n              <GridToolbarExport />\r\n            </GridToolbarContainer>\r\n          );\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <Header />\r\n          <Container className=\" mt--7\" fluid>\r\n            <Card className=\"shadow\">\r\n                <CardHeader className=\" bg-transparent\">\r\n                    <DateRangePicker \r\n                      initialSettings={{\r\n                        singleDatePicker: true,\r\n                        showDropdowns: true,\r\n                        locale: {\r\n                          format: 'D-MMM-YYYY'\r\n                        }\r\n                      }}\r\n                      onApply={\r\n                        (e, obj) => {\r\n                            handleDateChange(obj);\r\n                        }\r\n                      }\r\n                      >\r\n                        <button>{dateString}</button>\r\n                    </DateRangePicker>\r\n                    <h3 className=\" mb-0\">Attendance of Students - {loading && <Spinner color=\"success\" />}</h3>\r\n                </CardHeader>\r\n                <CardBody style={{ height: 700, width: '100%' }}>\r\n                    <DataGrid \r\n                        rows={attn_data} \r\n                        columns={columns} \r\n                        pageSize={40} \r\n                        components={{\r\n                            Toolbar: CustomToolbar\r\n                        }} />\r\n                </CardBody>\r\n            </Card>\r\n          </Container>\r\n        </>\r\n    );\r\n\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Container, Card, CardHeader, CardBody, Spinner\r\n  } from \"reactstrap\";\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\nimport Header from \"components/Headers/Header.js\";\r\nimport {BASE_URL} from \"../../config/baseUrl\";\r\nimport axios from \"axios\";\r\n\r\nexport default function BussingReport(){\r\n    const [datatable, setDatatable] = React.useState(() => \r\n                                                        ({\r\n                                                          columns: [\r\n                                                            { field: 'index_number', label: 'Index Number', width: 100 },\r\n                                                            { field: 'student_name', label: 'Name', width: 130 },\r\n                                                            { field: 'class', label: 'Class', width: 130 }\r\n                                                          ], \r\n                                                          rows: []\r\n                                                        })\r\n                                                    );\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    let unmounted = false;\r\n    \r\n    useEffect(()=>{\r\n        \r\n        loadBussingReport();\r\n\r\n        return () => {\r\n            unmounted = true;\r\n          }    \r\n    },[]);\r\n\r\n    const createData = () => {\r\n      \r\n    }\r\n\r\n    const loadBussingReport = () => {\r\n        setLoading(true);\r\n        return axios.get(`${BASE_URL}/react_admin/admin/general_bussing/report`)\r\n                .then((response) => \r\n                {\r\n                  if (unmounted) return;\r\n                  setLoading(false);\r\n                  \r\n                  setDatatable(prevState => {\r\n                    return {\r\n                      ...prevState, \r\n                      columns: [...prevState.columns, ...response.data.dateHeadings.map((item) => (\r\n                                                                  {\r\n                                                                    field: item,\r\n                                                                    label: item,\r\n                                                                    width: 100\r\n                                                                  })) \r\n                                                                  ]}\r\n                  });\r\n                });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n          <Header />\r\n          <Container className=\" mt--7\" fluid>\r\n            <Card className=\"shadow\">\r\n                <CardHeader className=\" bg-transparent\">\r\n                    <h3 className=\" mb-0\">General Bussing Report - {loading && <Spinner color=\"success\" />}</h3>\r\n                </CardHeader>\r\n                <CardBody style={{ height: 700, width: '100%' }}>\r\n                <MDBDataTableV5 scrollY hover entriesOptions={[5, 20, 25]} entries={20} pagesAmount={4} data={datatable} />;\r\n                </CardBody>\r\n            </Card>\r\n          </Container>\r\n        </>\r\n    );\r\n}","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n// reactstrap components\r\nimport { Container } from \"reactstrap\";\r\n// core components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\n\r\nimport routes, {app_routes} from \"routes.js\";\r\n\r\nclass Admin extends React.Component {\r\n  componentDidUpdate(e) {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    this.refs.mainContent.scrollTop = 0;\r\n  }\r\n  getRoutes = routes => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            exact\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  getAppRoutes = app_routes => {\r\n    \r\n    return app_routes.map((prop, key) => {\r\n      return (\r\n        <Route\r\n          path={prop.layout + prop.path}\r\n          component={prop.component}\r\n          key={key}\r\n        />\r\n      )}\r\n    );\r\n  }\r\n\r\n  getBrandText = path => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (\r\n        this.props.location.pathname.indexOf(\r\n          routes[i].layout + routes[i].path\r\n        ) !== -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n\r\n    if (path.split(\"/\")[path.split(\"/\").length -1] === 'profile') {\r\n      return \"Student Profile\";\r\n    }\r\n\r\n    if (path === \"/admin/advanced/upload-students\"){\r\n      return \"Upload Students\";\r\n    }\r\n\r\n\r\n    return \"\";\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Sidebar\r\n          {...this.props}\r\n          routes={routes}\r\n          logo={{\r\n            innerLink: \"/admin/index\",\r\n            imgSrc: require(\"assets/img/brand/logo_anagkazo_icon.png\"),\r\n            imgAlt: \"...\"\r\n          }}\r\n        />\r\n        <div className=\"main-content\" ref=\"mainContent\">\r\n          <AdminNavbar\r\n            {...this.props}\r\n            brandText={this.getBrandText(this.props.location.pathname)}\r\n          />\r\n          \r\n          <Switch>\r\n            {this.getRoutes(routes)}\r\n            {this.getAppRoutes(app_routes)}\r\n            <Redirect from=\"*\" to=\"/admin/index\" />\r\n          </Switch>\r\n\r\n          <Container fluid>\r\n            <AdminFooter />\r\n          </Container>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// reactstrap components\r\nimport {\r\n  UncontrolledCollapse,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nclass AdminNavbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar\r\n          className=\"navbar-top navbar-horizontal navbar-dark\"\r\n          expand=\"md\"\r\n        >\r\n          <Container className=\"px-4\">\r\n            <NavbarBrand to=\"/\" tag={Link}>\r\n              <img alt=\"...\" src={require(\"assets/img/anagkazo/anagkazo_full.png\")} style={{width: 200, height: 75}}/>\r\n            </NavbarBrand>  \r\n            <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\r\n              <span className=\"navbar-toggler-icon\" />\r\n            </button>\r\n            <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\r\n              <div className=\"navbar-collapse-header d-md-none\">\r\n                <Row>\r\n                  <Col className=\"collapse-brand\" xs=\"6\">\r\n                    <Link to=\"/\">\r\n                      <img\r\n                        alt=\"...\"\r\n                        src={require(\"assets/img/brand/argon-react.png\")}\r\n                      />\r\n                    </Link>\r\n                  </Col>\r\n                  <Col className=\"collapse-close\" xs=\"6\">\r\n                    <button\r\n                      className=\"navbar-toggler\"\r\n                      id=\"navbar-collapse-main\"\r\n                    >\r\n                      <span />\r\n                      <span />\r\n                    </button>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link-icon\" to=\"/\" tag={Link}>\r\n                    <i className=\"ni ni-planet\" />\r\n                    <span className=\"nav-link-inner--text\">Dashboard</span>\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className=\"nav-link-icon\"\r\n                    to=\"/auth/register\"\r\n                    tag={Link}\r\n                  >\r\n                    <i className=\"ni ni-circle-08\" />\r\n                    <span className=\"nav-link-inner--text\">Register</span>\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className=\"nav-link-icon\"\r\n                    to=\"/auth/login\"\r\n                    tag={Link}\r\n                  >\r\n                    <i className=\"ni ni-key-25\" />\r\n                    <span className=\"nav-link-inner--text\">Login</span>\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className=\"nav-link-icon\"\r\n                    to=\"/admin/user-profile\"\r\n                    tag={Link}\r\n                  >\r\n                    <i className=\"ni ni-single-02\" />\r\n                    <span className=\"nav-link-inner--text\">Profile</span>\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </UncontrolledCollapse>\r\n          </Container>\r\n        </Navbar>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminNavbar;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n/*eslint-disable*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\r\n\r\nclass Login extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <footer className=\"py-5\">\r\n          <Container>\r\n            <Row className=\"align-items-center justify-content-xl-between\">\r\n              <Col xl=\"6\">\r\n                <div className=\"copyright text-center text-xl-left text-muted\">\r\n                  © 2021{\" \"}\r\n                  <a\r\n                    className=\"font-weight-bold ml-1\"\r\n                    href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    Anagkazo Online\r\n                  </a>\r\n                </div>\r\n              </Col>\r\n              <Col xl=\"6\">\r\n                <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\r\n                  <NavItem>\r\n                    <NavLink\r\n                      href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      Anagkazo Online\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      href=\"https://www.creative-tim.com/presentation?ref=adr-auth-footer\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      About Us\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      href=\"http://blog.creative-tim.com?ref=adr-auth-footer\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      Blog\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      href=\"https://github.com/creativetimofficial/argon-dashboard/blob/master/LICENSE.md?ref=adr-auth-footer\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      MIT License\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </footer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n// reactstrap components\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\n// core components\r\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\r\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nclass Auth extends React.Component {\r\n  componentDidMount() {\r\n    document.body.classList.add(\"bg-default\");\r\n  }\r\n  componentWillUnmount() {\r\n    document.body.classList.remove(\"bg-default\");\r\n  }\r\n  getRoutes = routes => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/auth\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"main-content\">\r\n          <AuthNavbar />\r\n          <div className=\"header bg-gradient-info py-7 py-lg-8\">\r\n            <Container>\r\n              <div className=\"header-body text-center mb-7\">\r\n                <Row className=\"justify-content-center\">\r\n                  <Col lg=\"5\" md=\"6\">\r\n                    <h1 className=\"text-white\">Welcome!</h1>\r\n                    <p className=\"text-lead text-light\">\r\n                      Use these awesome forms to login or create new account in\r\n                      your project for free.\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Container>\r\n            <div className=\"separator separator-bottom separator-skew zindex-100\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                preserveAspectRatio=\"none\"\r\n                version=\"1.1\"\r\n                viewBox=\"0 0 2560 100\"\r\n                x=\"0\"\r\n                y=\"0\"\r\n              >\r\n                <polygon\r\n                  className=\"fill-default\"\r\n                  points=\"2560 0 2560 100 0 100\"\r\n                />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          {/* Page content */}\r\n          <Container className=\"mt--8 pb-5\">\r\n            <Row className=\"justify-content-center\">\r\n              <Switch>\r\n                {this.getRoutes(routes)}\r\n                <Redirect from=\"*\" to=\"/auth/login\" />\r\n              </Switch>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n        <AuthFooter />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport \"assets/plugins/nucleo/css/nucleo.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"assets/scss/argon-dashboard-react.scss\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nimport AdminLayout from \"layouts/Admin.js\";\r\nimport AuthLayout from \"layouts/Auth.js\";\r\n\r\nimport 'bootstrap-daterangepicker/daterangepicker.css';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\r\n      <Route path=\"/auth\" render={props => <AuthLayout {...props} />} />\r\n      <Redirect from=\"/\" to=\"/admin/index\" />\r\n    </Switch>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/team-1-800x800.53033970.jpg\";","module.exports = __webpack_public_path__ + \"static/media/team-2-800x800.dcfcf3b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/team-3-800x800.497bb359.jpg\";","module.exports = __webpack_public_path__ + \"static/media/team-4-800x800.23007132.jpg\";"],"sourceRoot":""}